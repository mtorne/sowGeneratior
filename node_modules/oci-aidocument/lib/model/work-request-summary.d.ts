/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A summary of the status of a work request.
 */
export interface WorkRequestSummary {
    /**
     * The type of the work request.
     */
    "operationType": model.OperationType;
    /**
     * The status of the current work request.
     */
    "status": model.OperationStatus;
    /**
     * The ID of the work request.
     */
    "id": string;
    /**
     * The compartment identifier.
     */
    "compartmentId": string;
    /**
     * The resources affected by this work request.
     */
    "resources": Array<model.WorkRequestResource>;
    /**
     * The percentage of the request completed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete": number;
    /**
     * The date and time the request was created, as described in
     * [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     *
     */
    "timeAccepted": Date;
    /**
     * The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
     * section 14.29.
     *
     */
    "timeStarted"?: Date;
    /**
     * The date and time the object was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeFinished"?: Date;
}
export declare namespace WorkRequestSummary {
    function getJsonObj(obj: WorkRequestSummary): object;
    function getDeserializedJsonObj(obj: WorkRequestSummary): object;
}
