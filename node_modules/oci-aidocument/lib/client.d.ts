/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { AIServiceDocumentWaiter } from "./aiservicedocument-waiter";
declare const Breaker: any;
export declare enum AIServiceDocumentApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class AIServiceDocumentClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": AIServiceDocumentWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new AIServiceDocumentWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): AIServiceDocumentWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): AIServiceDocumentWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Adds a lock to a resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AddModelLockRequest
     * @return AddModelLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/AddModelLock.ts.html |here} to see how to use AddModelLock API.
     */
    addModelLock(addModelLockRequest: requests.AddModelLockRequest): Promise<responses.AddModelLockResponse>;
    /**
     * Adds a lock to a resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AddProjectLockRequest
     * @return AddProjectLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/AddProjectLock.ts.html |here} to see how to use AddProjectLock API.
     */
    addProjectLock(addProjectLockRequest: requests.AddProjectLockRequest): Promise<responses.AddProjectLockResponse>;
    /**
     * Perform different types of document analysis.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AnalyzeDocumentRequest
     * @return AnalyzeDocumentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/AnalyzeDocument.ts.html |here} to see how to use AnalyzeDocument API.
     */
    analyzeDocument(analyzeDocumentRequest: requests.AnalyzeDocumentRequest): Promise<responses.AnalyzeDocumentResponse>;
    /**
     * Cancel a processor job.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelProcessorJobRequest
     * @return CancelProcessorJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/CancelProcessorJob.ts.html |here} to see how to use CancelProcessorJob API.
     */
    cancelProcessorJob(cancelProcessorJobRequest: requests.CancelProcessorJobRequest): Promise<responses.CancelProcessorJobResponse>;
    /**
     * Cancel the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Moves a model from one compartment to another. When provided, If-Match is checked against the ETag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeModelCompartmentRequest
     * @return ChangeModelCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ChangeModelCompartment.ts.html |here} to see how to use ChangeModelCompartment API.
     */
    changeModelCompartment(changeModelCompartmentRequest: requests.ChangeModelCompartmentRequest): Promise<responses.ChangeModelCompartmentResponse>;
    /**
     * Move a project from one compartment to another. When provided, If-Match is checked against the ETag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeProjectCompartmentRequest
     * @return ChangeProjectCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ChangeProjectCompartment.ts.html |here} to see how to use ChangeProjectCompartment API.
     */
    changeProjectCompartment(changeProjectCompartmentRequest: requests.ChangeProjectCompartmentRequest): Promise<responses.ChangeProjectCompartmentResponse>;
    /**
     * Create a new model.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateModelRequest
     * @return CreateModelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/CreateModel.ts.html |here} to see how to use CreateModel API.
     */
    createModel(createModelRequest: requests.CreateModelRequest): Promise<responses.CreateModelResponse>;
    /**
     * Create a processor job for document analysis.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProcessorJobRequest
     * @return CreateProcessorJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/CreateProcessorJob.ts.html |here} to see how to use CreateProcessorJob API.
     */
    createProcessorJob(createProcessorJobRequest: requests.CreateProcessorJobRequest): Promise<responses.CreateProcessorJobResponse>;
    /**
     * Create a new project.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProjectRequest
     * @return CreateProjectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/CreateProject.ts.html |here} to see how to use CreateProject API.
     */
    createProject(createProjectRequest: requests.CreateProjectRequest): Promise<responses.CreateProjectResponse>;
    /**
     * Delete a model by identifier.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteModelRequest
     * @return DeleteModelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/DeleteModel.ts.html |here} to see how to use DeleteModel API.
     */
    deleteModel(deleteModelRequest: requests.DeleteModelRequest): Promise<responses.DeleteModelResponse>;
    /**
     * Delete a project by identifier.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteProjectRequest
     * @return DeleteProjectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/DeleteProject.ts.html |here} to see how to use DeleteProject API.
     */
    deleteProject(deleteProjectRequest: requests.DeleteProjectRequest): Promise<responses.DeleteProjectResponse>;
    /**
     * Get a model by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetModelRequest
     * @return GetModelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/GetModel.ts.html |here} to see how to use GetModel API.
     */
    getModel(getModelRequest: requests.GetModelRequest): Promise<responses.GetModelResponse>;
    /**
     * Get the details of a processor job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProcessorJobRequest
     * @return GetProcessorJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/GetProcessorJob.ts.html |here} to see how to use GetProcessorJob API.
     */
    getProcessorJob(getProcessorJobRequest: requests.GetProcessorJobRequest): Promise<responses.GetProcessorJobResponse>;
    /**
     * Get a project by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProjectRequest
     * @return GetProjectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/GetProject.ts.html |here} to see how to use GetProject API.
     */
    getProject(getProjectRequest: requests.GetProjectRequest): Promise<responses.GetProjectResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Returns a list of models in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListModelsRequest
     * @return ListModelsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ListModels.ts.html |here} to see how to use ListModels API.
     */
    listModels(listModelsRequest: requests.ListModelsRequest): Promise<responses.ListModelsResponse>;
    /**
     * Returns a list of projects.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProjectsRequest
     * @return ListProjectsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ListProjects.ts.html |here} to see how to use ListProjects API.
     */
    listProjects(listProjectsRequest: requests.ListProjectsRequest): Promise<responses.ListProjectsResponse>;
    /**
     * Returns a (paginated) list of errors for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Updates the model metadata only selected path parameter.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchModelRequest
     * @return PatchModelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/PatchModel.ts.html |here} to see how to use PatchModel API.
     */
    patchModel(patchModelRequest: requests.PatchModelRequest): Promise<responses.PatchModelResponse>;
    /**
     * Remove a lock from a resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemoveModelLockRequest
     * @return RemoveModelLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/RemoveModelLock.ts.html |here} to see how to use RemoveModelLock API.
     */
    removeModelLock(removeModelLockRequest: requests.RemoveModelLockRequest): Promise<responses.RemoveModelLockResponse>;
    /**
     * Remove a lock from a resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RemoveProjectLockRequest
     * @return RemoveProjectLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/RemoveProjectLock.ts.html |here} to see how to use RemoveProjectLock API.
     */
    removeProjectLock(removeProjectLockRequest: requests.RemoveProjectLockRequest): Promise<responses.RemoveProjectLockResponse>;
    /**
     * Updates the model metadata.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateModelRequest
     * @return UpdateModelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/UpdateModel.ts.html |here} to see how to use UpdateModel API.
     */
    updateModel(updateModelRequest: requests.UpdateModelRequest): Promise<responses.UpdateModelResponse>;
    /**
     * Update the project metadata.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateProjectRequest
     * @return UpdateProjectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/aidocument/UpdateProject.ts.html |here} to see how to use UpdateProject API.
     */
    updateProject(updateProjectRequest: requests.UpdateProjectRequest): Promise<responses.UpdateProjectResponse>;
}
export {};
