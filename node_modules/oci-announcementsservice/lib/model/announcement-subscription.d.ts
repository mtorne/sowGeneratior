/**
 * Announcements Service API
 * Manage Oracle Cloud Infrastructure console announcements.
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A subscription with the Announcements service to receive selected announcements in the format and delivery mechanisms supported by a corresponding topic endpoint configured in the Oracle Cloud Infrastructure Notifications service.
 *
 */
export interface AnnouncementSubscription {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
     */
    "id": string;
    /**
     * A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * A description of the announcement subscription. Avoid entering confidential information.
     */
    "description"?: string;
    /**
     * The OCID of the compartment that contains the announcement subscription.
     */
    "compartmentId": string;
    /**
     * The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     *
     */
    "timeCreated": Date;
    /**
     * The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     *
     */
    "timeUpdated"?: Date;
    /**
     * The current lifecycle state of the announcement subscription.
     */
    "lifecycleState": AnnouncementSubscription.LifecycleState;
    /**
     * A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
     *
     */
    "lifecycleDetails"?: string;
    /**
     * The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
     *
     */
    "onsTopicId": string;
    /**
     * A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
     *
     */
    "filterGroups"?: {
        [key: string]: model.FilterGroup;
    };
    /**
     * (For announcement subscriptions with SaaS configured as the platform type or Oracle Fusion Applications as the service, or both, only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the x-obmcs-human-language format. For example fr-FR.
     */
    "preferredLanguage"?: string;
    /**
     * The time zone in which the user prefers to receive announcements. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     */
    "preferredTimeZone"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace AnnouncementSubscription {
    enum LifecycleState {
        Active = "ACTIVE",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: AnnouncementSubscription): object;
    function getDeserializedJsonObj(obj: AnnouncementSubscription): object;
}
