/**
 * Secure Desktops API
 * Create and manage cloud-hosted desktops which can be accessed from a web browser or installed client.

 * OpenAPI spec version: 20220618
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Provides information about a desktop pool including all configuration parameters.
 */
export interface DesktopPool {
    /**
     * The OCID of the desktop pool.
     */
    "id": string;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    "compartmentId": string;
    /**
     * A user friendly display name. Avoid entering confidential information.
     */
    "displayName": string;
    /**
     * A user friendly description providing additional information about the resource.
     * Avoid entering confidential information.
     *
     */
    "description"?: string;
    /**
     * The current state of the desktop pool.
     */
    "lifecycleState": model.LifecycleState;
    /**
     * The date and time the resource was created.
     */
    "timeCreated": Date;
    /**
     * The maximum number of desktops permitted in the desktop pool. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maximumSize": number;
    /**
     * The maximum number of standby desktops available in the desktop pool. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "standbySize": number;
    /**
     * The shape of the desktop pool.
     */
    "shapeName": string;
    "shapeConfig"?: model.DesktopPoolShapeConfig;
    /**
     * Indicates whether the desktop pool uses dedicated virtual machine hosts.
     */
    "useDedicatedVmHost"?: DesktopPool.UseDedicatedVmHost;
    /**
     * Indicates whether storage is enabled for the desktop pool.
     */
    "isStorageEnabled": boolean;
    /**
     * The size in GBs of the storage for the desktop pool. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "storageSizeInGBs": number;
    /**
     * The backup policy OCID of the storage.
     */
    "storageBackupPolicyId": string;
    "devicePolicy": model.DesktopDevicePolicy;
    "availabilityPolicy": model.DesktopAvailabilityPolicy;
    "image": model.DesktopImage;
    "networkConfiguration": model.DesktopNetworkConfiguration;
    "sessionLifecycleActions"?: model.DesktopSessionLifecycleActions;
    /**
     * The start time of the desktop pool.
     */
    "timeStartScheduled"?: Date;
    /**
     * The stop time of the desktop pool.
     */
    "timeStopScheduled"?: Date;
    /**
     * Contact information of the desktop pool administrator.
     * Avoid entering confidential information.
     *
     */
    "contactDetails": string;
    /**
     * Indicates whether desktop pool users have administrative privileges on their desktop.
     */
    "arePrivilegedUsers": boolean;
    /**
     * The availability domain of the desktop pool.
     */
    "availabilityDomain": string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A list of network security groups for the network.
     */
    "nsgIds"?: Array<string>;
    "privateAccessDetails"?: model.DesktopPoolPrivateAccessDetails;
}
export declare namespace DesktopPool {
    enum UseDedicatedVmHost {
        True = "TRUE",
        False = "FALSE",
        Auto = "AUTO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DesktopPool): object;
    function getDeserializedJsonObj(obj: DesktopPool): object;
}
