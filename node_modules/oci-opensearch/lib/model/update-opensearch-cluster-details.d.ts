/**
 * OpenSearch Service API
 * The OpenSearch service API provides access to OCI Search Service with OpenSearch.
 * OpenAPI spec version: 20180828
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The configuration to update on an existing OpenSearch cluster. Software version
 * and security config are not allowed to be updated at the same time.
 *
 */
export interface UpdateOpensearchClusterDetails {
    /**
     * The name of the cluster. Avoid entering confidential information.
     */
    "displayName": string;
    "softwareVersion"?: string;
    /**
     * The security mode of the cluster.
     */
    "securityMode"?: model.SecurityMode;
    /**
     * The name of the master user that are used to manage security config
     */
    "securityMasterUserName"?: string;
    /**
     * The password hash of the master user that are used to manage security config
     */
    "securityMasterUserPasswordHash"?: string;
    "securitySamlConfig"?: model.SecuritySamlConfig;
    "backupPolicy"?: model.BackupPolicy;
    /**
     * The customer IP addresses of the endpoint in customer VCN
     */
    "reverseConnectionEndpointCustomerIps"?: Array<string>;
    "outboundClusterConfig"?: model.OutboundClusterConfig;
    "maintenanceDetails"?: model.UpdateMaintenanceDetails;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace UpdateOpensearchClusterDetails {
    function getJsonObj(obj: UpdateOpensearchClusterDetails): object;
    function getDeserializedJsonObj(obj: UpdateOpensearchClusterDetails): object;
}
