/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The data to create a CatalogItem.
 */
export interface CreateCatalogItemDetails {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
     *
     */
    "configSourceType": string;
    /**
     * The description of the CatalogItem.
     *
     */
    "description": string;
    /**
     * Version description about the catalog item.
     */
    "versionDescription"?: string;
    /**
     * Short description about the catalog item.
     */
    "shortDescription"?: string;
    /**
     * The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeReleased"?: Date;
    /**
     * The CatalogItem name.
     */
    "displayName": string;
    "catalogSourcePayload"?: model.CatalogGitSourceConfig | model.CatalogSourceTemplateConfig | model.CatalogParSourceConfig | model.CatalogMarketplaceSourceConfig;
    /**
     * The catalog listing Id.
     *
     */
    "listingId"?: string;
    /**
     * The catalog package version.
     *
     */
    "listingVersion"?: string;
    /**
     * Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
     *
     */
    "packageType": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateCatalogItemDetails {
    function getJsonObj(obj: CreateCatalogItemDetails): object;
    function getDeserializedJsonObj(obj: CreateCatalogItemDetails): object;
}
