/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Set of rules that are used to calculate the compliance status of the product.
 * Specific rules will take precedence over broader rules.
 *
 */
export interface CompliancePolicyRule {
    /**
     * Unique OCID of the CompliancePolicyRule.
     */
    "id": string;
    /**
      * A user-friendly name. Does not have to be unique, and it's changeable.
  * Avoid entering confidential information.
  * <p>
  Example: {@code My new resource}
  *
      */
    "displayName": string;
    /**
     * Unique OCID of the CompliancePolicy.
     */
    "compliancePolicyId": string;
    "productVersion": model.ProductVersionDetails;
    /**
     * PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     */
    "patchTypeId": Array<string>;
    /**
     * Severity to which this CompliancePolicyRule applies.
     */
    "severity"?: Array<CompliancePolicyRule.Severity>;
    "patchSelection": model.PatchLevelSelectionDetails | model.PatchReleaseDateSelectionDetails | model.PatchNameSelectionDetails;
    /**
     * Grace period in days,weeks,months or years the exemption is applicable for the rule.
     * This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
     *
     */
    "gracePeriod"?: string;
    /**
     * The OCID of the compartment the CompliancePolicyRule belongs to.
     */
    "compartmentId": string;
    /**
      * The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    /**
      * The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeUpdated"?: Date;
    /**
     * The current state of the CompliancePolicyRule.
     */
    "lifecycleState": CompliancePolicyRule.LifecycleState;
    /**
     * A message that describes the current state of the CompliancePolicyRule in more detail. For example,
     * can be used to provide actionable information for a resource in the Failed state.
     *
     */
    "lifecycleDetails"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CompliancePolicyRule {
    enum Severity {
        Critical = "CRITICAL",
        High = "HIGH",
        Medium = "MEDIUM",
        Low = "LOW",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: CompliancePolicyRule): object;
    function getDeserializedJsonObj(obj: CompliancePolicyRule): object;
}
