/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Activity details including status corresponding to an Action Group.
 */
export interface JobActivity {
    /**
     * Unique activity id at the action group level.
     * In most cases, this would be a generated ActionGroupId.
     *
     */
    "id": string;
    /**
     * Status of the Job at Action Group Level.
     */
    "status": model.JobStatus;
    /**
     * The time the execution for the Action Group started. An RFC3339 formatted datetime string.
     */
    "timeStarted"?: Date;
    /**
     * The time the execution for the Action Group ended. An RFC3339 formatted datetime string
     */
    "timeEnded"?: Date;
    /**
     * OCID of the runbook associated with the Action Group.
     */
    "runbookId"?: string;
    /**
     * Name of the RunbookVersion associated with the Action Group.
     */
    "runbookVersionName"?: string;
    /**
     * Name of the runbook associated with the Action Group.
     */
    "runbookName"?: string;
    /**
     * A description of the Job Activity status.
     * If there are any errors, this can also include a short error message.
     *
     */
    "description"?: string;
    /**
     * List of Resource executions associated with the Action Group.
     */
    "resourceLevelExecutions"?: Array<model.EntityExecutionDetails>;
}
export declare namespace JobActivity {
    function getJsonObj(obj: JobActivity): object;
    function getDeserializedJsonObj(obj: JobActivity): object;
}
