/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Patch Level Details.
 * If you set the policy rule by selecting this option and provide the Patch level as Latest, Fleet Application Management calculates the compliance status of the product in the following ways:
 *     -   Reports the patch process as compliant for the software identified or targets discovered at the Latest and Latest-1 version.
 *     -   Reports the patch process as noncompliant for the software identified or targets discovered at the Latest-2 version.
 *
 */
export interface PatchLevelSelectionDetails extends model.PatchSelectionDetails {
    /**
     * Patch Name.
     */
    "patchLevel": PatchLevelSelectionDetails.PatchLevel;
    "selectionType": string;
}
export declare namespace PatchLevelSelectionDetails {
    enum PatchLevel {
        Latest = "LATEST",
        LatestMinusOne = "LATEST_MINUS_ONE",
        LatestMinusTwo = "LATEST_MINUS_TWO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: PatchLevelSelectionDetails, isParentJsonObj?: boolean): object;
    const selectionType = "PATCH_LEVEL";
    function getDeserializedJsonObj(obj: PatchLevelSelectionDetails, isParentJsonObj?: boolean): object;
}
