/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
* A description of a CatalogItem resource.
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to
* an administrator. If you're an administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/policiesgs/get-started-with-policies.htm).
*
*/
export interface CatalogItem {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the catalog.
     */
    "id": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
     *
     */
    "configSourceType": CatalogItem.ConfigSourceType;
    /**
     * The indicator to append Public Items from the root compartment to any query, when set to TRUE.
     */
    "shouldListPublicItems"?: boolean;
    /**
     * Description about the catalog item.
     */
    "description": string;
    "catalogSourcePayload"?: model.CatalogGitSourceConfig | model.CatalogSourceTemplateConfig | model.CatalogParSourceConfig | model.CatalogMarketplaceSourceConfig;
    "catalogResultPayload"?: model.CatalogGitResultConfig | model.CatalogTemplateResultConfig | model.CatalogParResultConfig;
    /**
     * The catalog listing Id.
     *
     */
    "listingId": string;
    /**
     * The catalog package version.
     *
     */
    "listingVersion": string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    "displayName": string;
    /**
     * Version description about the catalog item.
     */
    "versionDescription"?: string;
    /**
     * Short description about the catalog item.
     */
    "shortDescription"?: string;
    /**
     * Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
     *
     */
    "packageType": CatalogItem.PackageType;
    /**
     * The current state of the CatalogItem.
     */
    "lifecycleState": CatalogItem.LifecycleState;
    /**
     * The details of lifecycle state CatalogItem.
     */
    "lifecycleDetails": string;
    /**
     * The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeCreated": Date;
    /**
     * The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeUpdated": Date;
    /**
     * The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeReleased"?: Date;
    /**
     * The date and time the CatalogItem was last checked by backfill job, in the format defined by
     * [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeBackfillLastChecked"?: Date;
    /**
     * The date and time the CatalogItem was last checked, in the format defined by
     * [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2016-08-25T21:10:29.600Z}
     *
     */
    "timeLastChecked"?: Date;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CatalogItem {
    enum ConfigSourceType {
        ParCatalogSource = "PAR_CATALOG_SOURCE",
        GitCatalogSource = "GIT_CATALOG_SOURCE",
        MarketplaceCatalogSource = "MARKETPLACE_CATALOG_SOURCE",
        StackTemplateCatalogSource = "STACK_TEMPLATE_CATALOG_SOURCE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum PackageType {
        TfPackage = "TF_PACKAGE",
        NonTfPackage = "NON_TF_PACKAGE",
        ConfigFile = "CONFIG_FILE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: CatalogItem): object;
    function getDeserializedJsonObj(obj: CatalogItem): object;
}
