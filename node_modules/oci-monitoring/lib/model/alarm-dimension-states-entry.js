"use strict";
/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetricData, use the {@code telemetry-ingestion} endpoints; for all other operations, use the {@code telemetry} endpoints.
For more information, see
[the Monitoring documentation](https://docs.oracle.com/iaas/Content/Monitoring/home.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlarmDimensionStatesEntry = void 0;
var AlarmDimensionStatesEntry;
(function (AlarmDimensionStatesEntry) {
    let Status;
    (function (Status) {
        Status["Firing"] = "FIRING";
        Status["Ok"] = "OK";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = AlarmDimensionStatesEntry.Status || (AlarmDimensionStatesEntry.Status = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AlarmDimensionStatesEntry.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AlarmDimensionStatesEntry.getDeserializedJsonObj = getDeserializedJsonObj;
})(AlarmDimensionStatesEntry = exports.AlarmDimensionStatesEntry || (exports.AlarmDimensionStatesEntry = {}));
//# sourceMappingURL=alarm-dimension-states-entry.js.map