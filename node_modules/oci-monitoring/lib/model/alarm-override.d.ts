/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetricData, use the {@code telemetry-ingestion} endpoints; for all other operations, use the {@code telemetry} endpoints.
For more information, see
[the Monitoring documentation](https://docs.oracle.com/iaas/Content/Monitoring/home.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Values to use for an independent evaluation of the alarm.
 * You can specify values for query, severity, body, and pending duration.
 * When an alarm contains overrides, the Monitoring service evaluates each override in order,
 * beginning with the first override in the array (index position {@code 0}),
 * and then evaluates the alarm's base values ({@code ruleName} value of {@code BASE})
 *
 */
export interface AlarmOverride {
    /**
      * The period of time that the condition defined in the alarm must persist before the alarm state
  * changes from \"OK\" to \"FIRING\". For example, a value of 5 minutes means that the
  * alarm must persist in breaching the condition for five minutes before the alarm updates its
  * state to \"FIRING\".
  * <p>
  The duration is specified as a string in ISO 8601 format ({@code PT10M} for ten minutes or {@code PT1H}
  * for one hour). Minimum: PT1M. Maximum: PT1H. Default: PT1M.
  * <p>
  Under the default value of PT1M, the first evaluation that breaches the alarm updates the
  * state to \"FIRING\".
  * <p>
  The alarm updates its status to \"OK\" when the breaching condition has been clear for
  * the most recent minute.
  * <p>
  Example: {@code PT5M}
  *
      */
    "pendingDuration"?: string;
    /**
      * The perceived severity of the alarm with regard to the affected system.
  * <p>
  Example: {@code CRITICAL}
  *
      */
    "severity"?: string;
    /**
      * The human-readable content of the delivered alarm notification.
  * Optionally include [dynamic variables](https://docs.oracle.com/iaas/Content/Monitoring/Tasks/update-alarm-dynamic-variables.htm).
  * Oracle recommends providing guidance
  * to operators for resolving the alarm condition. Consider adding links to standard runbook
  * practices. Avoid entering confidential information.
  * <p>
  Example: {@code High CPU usage alert. Follow runbook instructions for resolution.}
  *
      */
    "body"?: string;
    /**
     * A user-friendly description for this alarm override. Must be unique across all {@code ruleName} values for the alarm.
     *
     */
    "ruleName"?: string;
    /**
      * The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of
  * the Monitoring service interprets results for each returned time series as Boolean values,
  * where zero represents false and a non-zero value represents true. A true value means that the trigger
  * rule condition has been met. The query must specify a metric, statistic, interval, and trigger
  * rule (threshold or absence). Supported values for interval depend on the specified time range. More
  * interval values are supported for smaller time ranges. You can optionally
  * specify dimensions and grouping functions.
  * Also, you can customize the
  * [absence detection period](https://docs.oracle.com/iaas/Content/Monitoring/Tasks/create-edit-alarm-query-absence-detection-period.htm).
  * Supported grouping functions: {@code grouping()}, {@code groupBy()}.
  * For information about writing MQL expressions, see
  * [Editing the MQL Expression for a Query](https://docs.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm).
  * For details about MQL, see
  * [Monitoring Query Language (MQL) Reference](https://docs.oracle.com/iaas/Content/Monitoring/Reference/mql.htm).
  * For available dimensions, review the metric definition for the supported service. See
  * [Supported Services](https://docs.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
  * <p>
  Example of threshold alarm:
  * <p>
    -----
  * <p>
      CpuUtilization[1m]{availabilityDomain=\"cumS:PHX-AD-1\"}.groupBy(availabilityDomain).percentile(0.9) > 85
  * <p>
    -----
  * <p>
  Example of absence alarm:
  * <p>
    -----
  * <p>
      CpuUtilization[1m]{availabilityDomain=\"cumS:PHX-AD-1\"}.absent()
  * <p>
    -----
  * Example of absence alarm with custom absence detection period of 20 hours:
  * <p>
    -----
  *
  *     CpuUtilization[1m]{availabilityDomain=\"cumS:PHX-AD-1\"}.absent(20h)
  *
  *   -----
  *
      */
    "query"?: string;
}
export declare namespace AlarmOverride {
    function getJsonObj(obj: AlarmOverride): object;
    function getDeserializedJsonObj(obj: AlarmOverride): object;
}
