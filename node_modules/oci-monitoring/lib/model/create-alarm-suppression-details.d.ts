/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetricData, use the {@code telemetry-ingestion} endpoints; for all other operations, use the {@code telemetry} endpoints.
For more information, see
[the Monitoring documentation](https://docs.oracle.com/iaas/Content/Monitoring/home.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The configuration details for creating an alarm suppression.
 *
 */
export interface CreateAlarmSuppressionDetails {
    "alarmSuppressionTarget": model.AlarmSuppressionAlarmTarget | model.AlarmSuppressionCompartmentTarget;
    /**
      * The level of this alarm suppression.
  * {@code ALARM} indicates a suppression of the entire alarm, regardless of dimension.
  * {@code DIMENSION} indicates a suppression configured for specified dimensions.
  * <p>
  Defaut: {@code DIMENSION}
  *
      */
    "level"?: string;
    /**
     * A user-friendly name for the alarm suppression. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    "displayName": string;
    /**
      * Human-readable reason for this alarm suppression.
  * It does not have to be unique, and it's changeable.
  * Avoid entering confidential information.
  * <p>
  Oracle recommends including tracking information for the event or associated work,
  * such as a ticket number.
  * <p>
  Example: {@code Planned outage due to change IT-1234.}
  *
      */
    "description"?: string;
    /**
      * A filter to suppress only alarm state entries that include the set of specified dimension key-value pairs.
  * If you specify {\"availabilityDomain\": \"phx-ad-1\"}
  * and the alarm state entry corresponds to the set {\"availabilityDomain\": \"phx-ad-1\" and \"resourceId\": \"ocid1.instance.region1.phx.exampleuniqueID\"},
  * then this alarm will be included for suppression.
  * <p>
  This is required only when the value of level is {@code DIMENSION}. If required, the value cannot be an empty object.
  * Only a single value is allowed per key. No grouping of multiple values is allowed under the same key.
  * Maximum characters (after serialization): 4000. This maximum satisfies typical use cases.
  * The response for an exceeded maximum is {@code HTTP 400} with an \"dimensions values are too long\" message.
  *
      */
    "dimensions"?: {
        [key: string]: string;
    };
    /**
      * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.
  * <p>
  Example: {@code 2023-02-01T01:02:29.600Z}
  *
      */
    "timeSuppressFrom": Date;
    /**
      * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.
  * <p>
  Example: {@code 2023-02-01T02:02:29.600Z}
  *
      */
    "timeSuppressUntil": Date;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Array of all preconditions for alarm suppression.
     * Example: {@code [{
     *   conditionType: \"RECURRENCE\",
     *   suppressionRecurrence: \"FRQ=DAILY;BYHOUR=10\",
     *   suppressionDuration: \"PT1H\"
     * }]}
     *
     */
    "suppressionConditions"?: Array<model.SuppressionCondition>;
}
export declare namespace CreateAlarmSuppressionDetails {
    function getJsonObj(obj: CreateAlarmSuppressionDetails): object;
    function getDeserializedJsonObj(obj: CreateAlarmSuppressionDetails): object;
}
