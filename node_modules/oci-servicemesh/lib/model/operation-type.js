"use strict";
/**
 * Service Mesh API
 * Use the Service Mesh API to manage mesh, virtual service, access policy and other mesh related items.
 * OpenAPI spec version: 20220615
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationType = void 0;
/**
 * Possible operation types.
 **/
var OperationType;
(function (OperationType) {
    OperationType["CreateMesh"] = "CREATE_MESH";
    OperationType["UpdateMesh"] = "UPDATE_MESH";
    OperationType["DeleteMesh"] = "DELETE_MESH";
    OperationType["MoveMesh"] = "MOVE_MESH";
    OperationType["CreateAccessPolicy"] = "CREATE_ACCESS_POLICY";
    OperationType["UpdateAccessPolicy"] = "UPDATE_ACCESS_POLICY";
    OperationType["DeleteAccessPolicy"] = "DELETE_ACCESS_POLICY";
    OperationType["MoveAccessPolicy"] = "MOVE_ACCESS_POLICY";
    OperationType["CreateVirtualService"] = "CREATE_VIRTUAL_SERVICE";
    OperationType["UpdateVirtualService"] = "UPDATE_VIRTUAL_SERVICE";
    OperationType["DeleteVirtualService"] = "DELETE_VIRTUAL_SERVICE";
    OperationType["MoveVirtualService"] = "MOVE_VIRTUAL_SERVICE";
    OperationType["CreateVirtualServiceRouteTable"] = "CREATE_VIRTUAL_SERVICE_ROUTE_TABLE";
    OperationType["UpdateVirtualServiceRouteTable"] = "UPDATE_VIRTUAL_SERVICE_ROUTE_TABLE";
    OperationType["DeleteVirtualServiceRouteTable"] = "DELETE_VIRTUAL_SERVICE_ROUTE_TABLE";
    OperationType["MoveVirtualServiceRouteTable"] = "MOVE_VIRTUAL_SERVICE_ROUTE_TABLE";
    OperationType["CreateVirtualDeployment"] = "CREATE_VIRTUAL_DEPLOYMENT";
    OperationType["UpdateVirtualDeployment"] = "UPDATE_VIRTUAL_DEPLOYMENT";
    OperationType["DeleteVirtualDeployment"] = "DELETE_VIRTUAL_DEPLOYMENT";
    OperationType["MoveVirtualDeployment"] = "MOVE_VIRTUAL_DEPLOYMENT";
    OperationType["CreateIngressGateway"] = "CREATE_INGRESS_GATEWAY";
    OperationType["UpdateIngressGateway"] = "UPDATE_INGRESS_GATEWAY";
    OperationType["DeleteIngressGateway"] = "DELETE_INGRESS_GATEWAY";
    OperationType["MoveIngressGateway"] = "MOVE_INGRESS_GATEWAY";
    OperationType["CreateIngressGatewayRouteTable"] = "CREATE_INGRESS_GATEWAY_ROUTE_TABLE";
    OperationType["UpdateIngressGatewayRouteTable"] = "UPDATE_INGRESS_GATEWAY_ROUTE_TABLE";
    OperationType["DeleteIngressGatewayRouteTable"] = "DELETE_INGRESS_GATEWAY_ROUTE_TABLE";
    OperationType["MoveIngressGatewayRouteTable"] = "MOVE_INGRESS_GATEWAY_ROUTE_TABLE";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
(function (OperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationType = exports.OperationType || (exports.OperationType = {}));
//# sourceMappingURL=operation-type.js.map