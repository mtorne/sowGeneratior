"use strict";
/**
 * Service Mesh API
 * Use the Service Mesh API to manage mesh, virtual service, access policy and other mesh related items.
 * OpenAPI spec version: 20220615
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceDiscoveryConfiguration = exports.ProxyDetails = exports.OperationType = exports.OperationStatus = exports.MutualTransportLayerSecurity = exports.MeshSummary = exports.MeshMutualTransportLayerSecurity = exports.MeshCollection = exports.Mesh = exports.IngressListenerTlsConfig = exports.IngressListenerClientValidationConfig = exports.IngressGatewayTrafficRouteRuleDetails = exports.IngressGatewayTrafficRouteRule = exports.IngressGatewaySummary = exports.IngressGatewayRouteTableSummary = exports.IngressGatewayRouteTableCollection = exports.IngressGatewayRouteTable = exports.IngressGatewayMutualTransportLayerSecurityDetails = exports.IngressGatewayMutualTransportLayerSecurity = exports.IngressGatewayListener = exports.IngressGatewayHostRef = exports.IngressGatewayHost = exports.IngressGatewayCollection = exports.IngressGateway = exports.DefaultVirtualServiceRoutingPolicy = exports.CreateVirtualServiceRouteTableDetails = exports.CreateVirtualServiceDetails = exports.CreateVirtualDeploymentDetails = exports.CreateMeshDetails = exports.CreateIngressGatewayRouteTableDetails = exports.CreateIngressGatewayDetails = exports.CreateAccessPolicyDetails = exports.ChangeVirtualServiceRouteTableCompartmentDetails = exports.ChangeVirtualServiceCompartmentDetails = exports.ChangeVirtualDeploymentCompartmentDetails = exports.ChangeMeshCompartmentDetails = exports.ChangeIngressGatewayRouteTableCompartmentDetails = exports.ChangeIngressGatewayCompartmentDetails = exports.ChangeAccessPolicyCompartmentDetails = exports.CertificateAuthority = exports.CaBundle = exports.ActionType = exports.AccessPolicyTargetDetails = exports.AccessPolicyTarget = exports.AccessPolicySummary = exports.AccessPolicyRuleDetails = exports.AccessPolicyRule = exports.AccessPolicyCollection = exports.AccessPolicy = exports.AccessLoggingConfiguration = void 0;
exports.TcpIngressGatewayTrafficRouteRuleDetails = exports.TcpIngressGatewayTrafficRouteRule = exports.OciTlsCertificate = exports.OciCaBundle = exports.LocalFileTlsCertificate = exports.LocalFileCaBundle = exports.IngressGatewayAccessPolicyTargetDetails = exports.IngressGatewayAccessPolicyTarget = exports.HttpVirtualServiceTrafficRouteRuleDetails = exports.HttpVirtualServiceTrafficRouteRule = exports.HttpIngressGatewayTrafficRouteRuleDetails = exports.HttpIngressGatewayTrafficRouteRule = exports.ExternalServiceAccessPolicyTargetDetails = exports.ExternalServiceAccessPolicyTarget = exports.DnsServiceDiscoveryConfiguration = exports.DisabledServiceDiscoveryConfiguration = exports.AllVirtualServicesAccessPolicyTargetDetails = exports.AllVirtualServicesAccessPolicyTarget = exports.WorkRequestSummary = exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.VirtualServiceTrafficRouteRuleDetails = exports.VirtualServiceTrafficRouteRule = exports.VirtualServiceSummary = exports.VirtualServiceRouteTableSummary = exports.VirtualServiceRouteTableCollection = exports.VirtualServiceRouteTable = exports.VirtualServiceMutualTransportLayerSecurityDetails = exports.VirtualServiceCollection = exports.VirtualService = exports.VirtualDeploymentSummary = exports.VirtualDeploymentListener = exports.VirtualDeploymentCollection = exports.VirtualDeployment = exports.UpdateVirtualServiceRouteTableDetails = exports.UpdateVirtualServiceDetails = exports.UpdateVirtualDeploymentDetails = exports.UpdateMeshDetails = exports.UpdateIngressGatewayRouteTableDetails = exports.UpdateIngressGatewayDetails = exports.UpdateAccessPolicyDetails = exports.TrafficRuleTargetDetails = exports.TrafficRuleTarget = exports.TlsCertificate = exports.SortOrder = void 0;
exports.VirtualServiceTrafficRuleTargetDetails = exports.VirtualServiceTrafficRuleTarget = exports.VirtualServiceAccessPolicyTargetDetails = exports.VirtualServiceAccessPolicyTarget = exports.VirtualDeploymentTrafficRuleTargetDetails = exports.VirtualDeploymentTrafficRuleTarget = exports.TlsPassthroughVirtualServiceTrafficRouteRuleDetails = exports.TlsPassthroughVirtualServiceTrafficRouteRule = exports.TlsPassthroughIngressGatewayTrafficRouteRuleDetails = exports.TlsPassthroughIngressGatewayTrafficRouteRule = exports.TcpVirtualServiceTrafficRouteRuleDetails = exports.TcpVirtualServiceTrafficRouteRule = void 0;
const AccessLoggingConfiguration = __importStar(require("./access-logging-configuration"));
exports.AccessLoggingConfiguration = AccessLoggingConfiguration.AccessLoggingConfiguration;
const AccessPolicy = __importStar(require("./access-policy"));
exports.AccessPolicy = AccessPolicy.AccessPolicy;
const AccessPolicyCollection = __importStar(require("./access-policy-collection"));
exports.AccessPolicyCollection = AccessPolicyCollection.AccessPolicyCollection;
const AccessPolicyRule = __importStar(require("./access-policy-rule"));
exports.AccessPolicyRule = AccessPolicyRule.AccessPolicyRule;
const AccessPolicyRuleDetails = __importStar(require("./access-policy-rule-details"));
exports.AccessPolicyRuleDetails = AccessPolicyRuleDetails.AccessPolicyRuleDetails;
const AccessPolicySummary = __importStar(require("./access-policy-summary"));
exports.AccessPolicySummary = AccessPolicySummary.AccessPolicySummary;
const AccessPolicyTarget = __importStar(require("./access-policy-target"));
exports.AccessPolicyTarget = AccessPolicyTarget.AccessPolicyTarget;
const AccessPolicyTargetDetails = __importStar(require("./access-policy-target-details"));
exports.AccessPolicyTargetDetails = AccessPolicyTargetDetails.AccessPolicyTargetDetails;
const ActionType = __importStar(require("./action-type"));
exports.ActionType = ActionType.ActionType;
const CaBundle = __importStar(require("./ca-bundle"));
exports.CaBundle = CaBundle.CaBundle;
const CertificateAuthority = __importStar(require("./certificate-authority"));
exports.CertificateAuthority = CertificateAuthority.CertificateAuthority;
const ChangeAccessPolicyCompartmentDetails = __importStar(require("./change-access-policy-compartment-details"));
exports.ChangeAccessPolicyCompartmentDetails = ChangeAccessPolicyCompartmentDetails.ChangeAccessPolicyCompartmentDetails;
const ChangeIngressGatewayCompartmentDetails = __importStar(require("./change-ingress-gateway-compartment-details"));
exports.ChangeIngressGatewayCompartmentDetails = ChangeIngressGatewayCompartmentDetails.ChangeIngressGatewayCompartmentDetails;
const ChangeIngressGatewayRouteTableCompartmentDetails = __importStar(require("./change-ingress-gateway-route-table-compartment-details"));
exports.ChangeIngressGatewayRouteTableCompartmentDetails = ChangeIngressGatewayRouteTableCompartmentDetails.ChangeIngressGatewayRouteTableCompartmentDetails;
const ChangeMeshCompartmentDetails = __importStar(require("./change-mesh-compartment-details"));
exports.ChangeMeshCompartmentDetails = ChangeMeshCompartmentDetails.ChangeMeshCompartmentDetails;
const ChangeVirtualDeploymentCompartmentDetails = __importStar(require("./change-virtual-deployment-compartment-details"));
exports.ChangeVirtualDeploymentCompartmentDetails = ChangeVirtualDeploymentCompartmentDetails.ChangeVirtualDeploymentCompartmentDetails;
const ChangeVirtualServiceCompartmentDetails = __importStar(require("./change-virtual-service-compartment-details"));
exports.ChangeVirtualServiceCompartmentDetails = ChangeVirtualServiceCompartmentDetails.ChangeVirtualServiceCompartmentDetails;
const ChangeVirtualServiceRouteTableCompartmentDetails = __importStar(require("./change-virtual-service-route-table-compartment-details"));
exports.ChangeVirtualServiceRouteTableCompartmentDetails = ChangeVirtualServiceRouteTableCompartmentDetails.ChangeVirtualServiceRouteTableCompartmentDetails;
const CreateAccessPolicyDetails = __importStar(require("./create-access-policy-details"));
exports.CreateAccessPolicyDetails = CreateAccessPolicyDetails.CreateAccessPolicyDetails;
const CreateIngressGatewayDetails = __importStar(require("./create-ingress-gateway-details"));
exports.CreateIngressGatewayDetails = CreateIngressGatewayDetails.CreateIngressGatewayDetails;
const CreateIngressGatewayRouteTableDetails = __importStar(require("./create-ingress-gateway-route-table-details"));
exports.CreateIngressGatewayRouteTableDetails = CreateIngressGatewayRouteTableDetails.CreateIngressGatewayRouteTableDetails;
const CreateMeshDetails = __importStar(require("./create-mesh-details"));
exports.CreateMeshDetails = CreateMeshDetails.CreateMeshDetails;
const CreateVirtualDeploymentDetails = __importStar(require("./create-virtual-deployment-details"));
exports.CreateVirtualDeploymentDetails = CreateVirtualDeploymentDetails.CreateVirtualDeploymentDetails;
const CreateVirtualServiceDetails = __importStar(require("./create-virtual-service-details"));
exports.CreateVirtualServiceDetails = CreateVirtualServiceDetails.CreateVirtualServiceDetails;
const CreateVirtualServiceRouteTableDetails = __importStar(require("./create-virtual-service-route-table-details"));
exports.CreateVirtualServiceRouteTableDetails = CreateVirtualServiceRouteTableDetails.CreateVirtualServiceRouteTableDetails;
const DefaultVirtualServiceRoutingPolicy = __importStar(require("./default-virtual-service-routing-policy"));
exports.DefaultVirtualServiceRoutingPolicy = DefaultVirtualServiceRoutingPolicy.DefaultVirtualServiceRoutingPolicy;
const IngressGateway = __importStar(require("./ingress-gateway"));
exports.IngressGateway = IngressGateway.IngressGateway;
const IngressGatewayCollection = __importStar(require("./ingress-gateway-collection"));
exports.IngressGatewayCollection = IngressGatewayCollection.IngressGatewayCollection;
const IngressGatewayHost = __importStar(require("./ingress-gateway-host"));
exports.IngressGatewayHost = IngressGatewayHost.IngressGatewayHost;
const IngressGatewayHostRef = __importStar(require("./ingress-gateway-host-ref"));
exports.IngressGatewayHostRef = IngressGatewayHostRef.IngressGatewayHostRef;
const IngressGatewayListener = __importStar(require("./ingress-gateway-listener"));
exports.IngressGatewayListener = IngressGatewayListener.IngressGatewayListener;
const IngressGatewayMutualTransportLayerSecurity = __importStar(require("./ingress-gateway-mutual-transport-layer-security"));
exports.IngressGatewayMutualTransportLayerSecurity = IngressGatewayMutualTransportLayerSecurity.IngressGatewayMutualTransportLayerSecurity;
const IngressGatewayMutualTransportLayerSecurityDetails = __importStar(require("./ingress-gateway-mutual-transport-layer-security-details"));
exports.IngressGatewayMutualTransportLayerSecurityDetails = IngressGatewayMutualTransportLayerSecurityDetails.IngressGatewayMutualTransportLayerSecurityDetails;
const IngressGatewayRouteTable = __importStar(require("./ingress-gateway-route-table"));
exports.IngressGatewayRouteTable = IngressGatewayRouteTable.IngressGatewayRouteTable;
const IngressGatewayRouteTableCollection = __importStar(require("./ingress-gateway-route-table-collection"));
exports.IngressGatewayRouteTableCollection = IngressGatewayRouteTableCollection.IngressGatewayRouteTableCollection;
const IngressGatewayRouteTableSummary = __importStar(require("./ingress-gateway-route-table-summary"));
exports.IngressGatewayRouteTableSummary = IngressGatewayRouteTableSummary.IngressGatewayRouteTableSummary;
const IngressGatewaySummary = __importStar(require("./ingress-gateway-summary"));
exports.IngressGatewaySummary = IngressGatewaySummary.IngressGatewaySummary;
const IngressGatewayTrafficRouteRule = __importStar(require("./ingress-gateway-traffic-route-rule"));
exports.IngressGatewayTrafficRouteRule = IngressGatewayTrafficRouteRule.IngressGatewayTrafficRouteRule;
const IngressGatewayTrafficRouteRuleDetails = __importStar(require("./ingress-gateway-traffic-route-rule-details"));
exports.IngressGatewayTrafficRouteRuleDetails = IngressGatewayTrafficRouteRuleDetails.IngressGatewayTrafficRouteRuleDetails;
const IngressListenerClientValidationConfig = __importStar(require("./ingress-listener-client-validation-config"));
exports.IngressListenerClientValidationConfig = IngressListenerClientValidationConfig.IngressListenerClientValidationConfig;
const IngressListenerTlsConfig = __importStar(require("./ingress-listener-tls-config"));
exports.IngressListenerTlsConfig = IngressListenerTlsConfig.IngressListenerTlsConfig;
const Mesh = __importStar(require("./mesh"));
exports.Mesh = Mesh.Mesh;
const MeshCollection = __importStar(require("./mesh-collection"));
exports.MeshCollection = MeshCollection.MeshCollection;
const MeshMutualTransportLayerSecurity = __importStar(require("./mesh-mutual-transport-layer-security"));
exports.MeshMutualTransportLayerSecurity = MeshMutualTransportLayerSecurity.MeshMutualTransportLayerSecurity;
const MeshSummary = __importStar(require("./mesh-summary"));
exports.MeshSummary = MeshSummary.MeshSummary;
const MutualTransportLayerSecurity = __importStar(require("./mutual-transport-layer-security"));
exports.MutualTransportLayerSecurity = MutualTransportLayerSecurity.MutualTransportLayerSecurity;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationType = __importStar(require("./operation-type"));
exports.OperationType = OperationType.OperationType;
const ProxyDetails = __importStar(require("./proxy-details"));
exports.ProxyDetails = ProxyDetails.ProxyDetails;
const ServiceDiscoveryConfiguration = __importStar(require("./service-discovery-configuration"));
exports.ServiceDiscoveryConfiguration = ServiceDiscoveryConfiguration.ServiceDiscoveryConfiguration;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const TlsCertificate = __importStar(require("./tls-certificate"));
exports.TlsCertificate = TlsCertificate.TlsCertificate;
const TrafficRuleTarget = __importStar(require("./traffic-rule-target"));
exports.TrafficRuleTarget = TrafficRuleTarget.TrafficRuleTarget;
const TrafficRuleTargetDetails = __importStar(require("./traffic-rule-target-details"));
exports.TrafficRuleTargetDetails = TrafficRuleTargetDetails.TrafficRuleTargetDetails;
const UpdateAccessPolicyDetails = __importStar(require("./update-access-policy-details"));
exports.UpdateAccessPolicyDetails = UpdateAccessPolicyDetails.UpdateAccessPolicyDetails;
const UpdateIngressGatewayDetails = __importStar(require("./update-ingress-gateway-details"));
exports.UpdateIngressGatewayDetails = UpdateIngressGatewayDetails.UpdateIngressGatewayDetails;
const UpdateIngressGatewayRouteTableDetails = __importStar(require("./update-ingress-gateway-route-table-details"));
exports.UpdateIngressGatewayRouteTableDetails = UpdateIngressGatewayRouteTableDetails.UpdateIngressGatewayRouteTableDetails;
const UpdateMeshDetails = __importStar(require("./update-mesh-details"));
exports.UpdateMeshDetails = UpdateMeshDetails.UpdateMeshDetails;
const UpdateVirtualDeploymentDetails = __importStar(require("./update-virtual-deployment-details"));
exports.UpdateVirtualDeploymentDetails = UpdateVirtualDeploymentDetails.UpdateVirtualDeploymentDetails;
const UpdateVirtualServiceDetails = __importStar(require("./update-virtual-service-details"));
exports.UpdateVirtualServiceDetails = UpdateVirtualServiceDetails.UpdateVirtualServiceDetails;
const UpdateVirtualServiceRouteTableDetails = __importStar(require("./update-virtual-service-route-table-details"));
exports.UpdateVirtualServiceRouteTableDetails = UpdateVirtualServiceRouteTableDetails.UpdateVirtualServiceRouteTableDetails;
const VirtualDeployment = __importStar(require("./virtual-deployment"));
exports.VirtualDeployment = VirtualDeployment.VirtualDeployment;
const VirtualDeploymentCollection = __importStar(require("./virtual-deployment-collection"));
exports.VirtualDeploymentCollection = VirtualDeploymentCollection.VirtualDeploymentCollection;
const VirtualDeploymentListener = __importStar(require("./virtual-deployment-listener"));
exports.VirtualDeploymentListener = VirtualDeploymentListener.VirtualDeploymentListener;
const VirtualDeploymentSummary = __importStar(require("./virtual-deployment-summary"));
exports.VirtualDeploymentSummary = VirtualDeploymentSummary.VirtualDeploymentSummary;
const VirtualService = __importStar(require("./virtual-service"));
exports.VirtualService = VirtualService.VirtualService;
const VirtualServiceCollection = __importStar(require("./virtual-service-collection"));
exports.VirtualServiceCollection = VirtualServiceCollection.VirtualServiceCollection;
const VirtualServiceMutualTransportLayerSecurityDetails = __importStar(require("./virtual-service-mutual-transport-layer-security-details"));
exports.VirtualServiceMutualTransportLayerSecurityDetails = VirtualServiceMutualTransportLayerSecurityDetails.VirtualServiceMutualTransportLayerSecurityDetails;
const VirtualServiceRouteTable = __importStar(require("./virtual-service-route-table"));
exports.VirtualServiceRouteTable = VirtualServiceRouteTable.VirtualServiceRouteTable;
const VirtualServiceRouteTableCollection = __importStar(require("./virtual-service-route-table-collection"));
exports.VirtualServiceRouteTableCollection = VirtualServiceRouteTableCollection.VirtualServiceRouteTableCollection;
const VirtualServiceRouteTableSummary = __importStar(require("./virtual-service-route-table-summary"));
exports.VirtualServiceRouteTableSummary = VirtualServiceRouteTableSummary.VirtualServiceRouteTableSummary;
const VirtualServiceSummary = __importStar(require("./virtual-service-summary"));
exports.VirtualServiceSummary = VirtualServiceSummary.VirtualServiceSummary;
const VirtualServiceTrafficRouteRule = __importStar(require("./virtual-service-traffic-route-rule"));
exports.VirtualServiceTrafficRouteRule = VirtualServiceTrafficRouteRule.VirtualServiceTrafficRouteRule;
const VirtualServiceTrafficRouteRuleDetails = __importStar(require("./virtual-service-traffic-route-rule-details"));
exports.VirtualServiceTrafficRouteRuleDetails = VirtualServiceTrafficRouteRuleDetails.VirtualServiceTrafficRouteRuleDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const AllVirtualServicesAccessPolicyTarget = __importStar(require("./all-virtual-services-access-policy-target"));
exports.AllVirtualServicesAccessPolicyTarget = AllVirtualServicesAccessPolicyTarget.AllVirtualServicesAccessPolicyTarget;
const AllVirtualServicesAccessPolicyTargetDetails = __importStar(require("./all-virtual-services-access-policy-target-details"));
exports.AllVirtualServicesAccessPolicyTargetDetails = AllVirtualServicesAccessPolicyTargetDetails.AllVirtualServicesAccessPolicyTargetDetails;
const DisabledServiceDiscoveryConfiguration = __importStar(require("./disabled-service-discovery-configuration"));
exports.DisabledServiceDiscoveryConfiguration = DisabledServiceDiscoveryConfiguration.DisabledServiceDiscoveryConfiguration;
const DnsServiceDiscoveryConfiguration = __importStar(require("./dns-service-discovery-configuration"));
exports.DnsServiceDiscoveryConfiguration = DnsServiceDiscoveryConfiguration.DnsServiceDiscoveryConfiguration;
const ExternalServiceAccessPolicyTarget = __importStar(require("./external-service-access-policy-target"));
exports.ExternalServiceAccessPolicyTarget = ExternalServiceAccessPolicyTarget.ExternalServiceAccessPolicyTarget;
const ExternalServiceAccessPolicyTargetDetails = __importStar(require("./external-service-access-policy-target-details"));
exports.ExternalServiceAccessPolicyTargetDetails = ExternalServiceAccessPolicyTargetDetails.ExternalServiceAccessPolicyTargetDetails;
const HttpIngressGatewayTrafficRouteRule = __importStar(require("./http-ingress-gateway-traffic-route-rule"));
exports.HttpIngressGatewayTrafficRouteRule = HttpIngressGatewayTrafficRouteRule.HttpIngressGatewayTrafficRouteRule;
const HttpIngressGatewayTrafficRouteRuleDetails = __importStar(require("./http-ingress-gateway-traffic-route-rule-details"));
exports.HttpIngressGatewayTrafficRouteRuleDetails = HttpIngressGatewayTrafficRouteRuleDetails.HttpIngressGatewayTrafficRouteRuleDetails;
const HttpVirtualServiceTrafficRouteRule = __importStar(require("./http-virtual-service-traffic-route-rule"));
exports.HttpVirtualServiceTrafficRouteRule = HttpVirtualServiceTrafficRouteRule.HttpVirtualServiceTrafficRouteRule;
const HttpVirtualServiceTrafficRouteRuleDetails = __importStar(require("./http-virtual-service-traffic-route-rule-details"));
exports.HttpVirtualServiceTrafficRouteRuleDetails = HttpVirtualServiceTrafficRouteRuleDetails.HttpVirtualServiceTrafficRouteRuleDetails;
const IngressGatewayAccessPolicyTarget = __importStar(require("./ingress-gateway-access-policy-target"));
exports.IngressGatewayAccessPolicyTarget = IngressGatewayAccessPolicyTarget.IngressGatewayAccessPolicyTarget;
const IngressGatewayAccessPolicyTargetDetails = __importStar(require("./ingress-gateway-access-policy-target-details"));
exports.IngressGatewayAccessPolicyTargetDetails = IngressGatewayAccessPolicyTargetDetails.IngressGatewayAccessPolicyTargetDetails;
const LocalFileCaBundle = __importStar(require("./local-file-ca-bundle"));
exports.LocalFileCaBundle = LocalFileCaBundle.LocalFileCaBundle;
const LocalFileTlsCertificate = __importStar(require("./local-file-tls-certificate"));
exports.LocalFileTlsCertificate = LocalFileTlsCertificate.LocalFileTlsCertificate;
const OciCaBundle = __importStar(require("./oci-ca-bundle"));
exports.OciCaBundle = OciCaBundle.OciCaBundle;
const OciTlsCertificate = __importStar(require("./oci-tls-certificate"));
exports.OciTlsCertificate = OciTlsCertificate.OciTlsCertificate;
const TcpIngressGatewayTrafficRouteRule = __importStar(require("./tcp-ingress-gateway-traffic-route-rule"));
exports.TcpIngressGatewayTrafficRouteRule = TcpIngressGatewayTrafficRouteRule.TcpIngressGatewayTrafficRouteRule;
const TcpIngressGatewayTrafficRouteRuleDetails = __importStar(require("./tcp-ingress-gateway-traffic-route-rule-details"));
exports.TcpIngressGatewayTrafficRouteRuleDetails = TcpIngressGatewayTrafficRouteRuleDetails.TcpIngressGatewayTrafficRouteRuleDetails;
const TcpVirtualServiceTrafficRouteRule = __importStar(require("./tcp-virtual-service-traffic-route-rule"));
exports.TcpVirtualServiceTrafficRouteRule = TcpVirtualServiceTrafficRouteRule.TcpVirtualServiceTrafficRouteRule;
const TcpVirtualServiceTrafficRouteRuleDetails = __importStar(require("./tcp-virtual-service-traffic-route-rule-details"));
exports.TcpVirtualServiceTrafficRouteRuleDetails = TcpVirtualServiceTrafficRouteRuleDetails.TcpVirtualServiceTrafficRouteRuleDetails;
const TlsPassthroughIngressGatewayTrafficRouteRule = __importStar(require("./tls-passthrough-ingress-gateway-traffic-route-rule"));
exports.TlsPassthroughIngressGatewayTrafficRouteRule = TlsPassthroughIngressGatewayTrafficRouteRule.TlsPassthroughIngressGatewayTrafficRouteRule;
const TlsPassthroughIngressGatewayTrafficRouteRuleDetails = __importStar(require("./tls-passthrough-ingress-gateway-traffic-route-rule-details"));
exports.TlsPassthroughIngressGatewayTrafficRouteRuleDetails = TlsPassthroughIngressGatewayTrafficRouteRuleDetails.TlsPassthroughIngressGatewayTrafficRouteRuleDetails;
const TlsPassthroughVirtualServiceTrafficRouteRule = __importStar(require("./tls-passthrough-virtual-service-traffic-route-rule"));
exports.TlsPassthroughVirtualServiceTrafficRouteRule = TlsPassthroughVirtualServiceTrafficRouteRule.TlsPassthroughVirtualServiceTrafficRouteRule;
const TlsPassthroughVirtualServiceTrafficRouteRuleDetails = __importStar(require("./tls-passthrough-virtual-service-traffic-route-rule-details"));
exports.TlsPassthroughVirtualServiceTrafficRouteRuleDetails = TlsPassthroughVirtualServiceTrafficRouteRuleDetails.TlsPassthroughVirtualServiceTrafficRouteRuleDetails;
const VirtualDeploymentTrafficRuleTarget = __importStar(require("./virtual-deployment-traffic-rule-target"));
exports.VirtualDeploymentTrafficRuleTarget = VirtualDeploymentTrafficRuleTarget.VirtualDeploymentTrafficRuleTarget;
const VirtualDeploymentTrafficRuleTargetDetails = __importStar(require("./virtual-deployment-traffic-rule-target-details"));
exports.VirtualDeploymentTrafficRuleTargetDetails = VirtualDeploymentTrafficRuleTargetDetails.VirtualDeploymentTrafficRuleTargetDetails;
const VirtualServiceAccessPolicyTarget = __importStar(require("./virtual-service-access-policy-target"));
exports.VirtualServiceAccessPolicyTarget = VirtualServiceAccessPolicyTarget.VirtualServiceAccessPolicyTarget;
const VirtualServiceAccessPolicyTargetDetails = __importStar(require("./virtual-service-access-policy-target-details"));
exports.VirtualServiceAccessPolicyTargetDetails = VirtualServiceAccessPolicyTargetDetails.VirtualServiceAccessPolicyTargetDetails;
const VirtualServiceTrafficRuleTarget = __importStar(require("./virtual-service-traffic-rule-target"));
exports.VirtualServiceTrafficRuleTarget = VirtualServiceTrafficRuleTarget.VirtualServiceTrafficRuleTarget;
const VirtualServiceTrafficRuleTargetDetails = __importStar(require("./virtual-service-traffic-rule-target-details"));
exports.VirtualServiceTrafficRuleTargetDetails = VirtualServiceTrafficRuleTargetDetails.VirtualServiceTrafficRuleTargetDetails;
//# sourceMappingURL=index.js.map