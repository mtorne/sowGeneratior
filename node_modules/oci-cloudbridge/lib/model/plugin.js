"use strict";
/**
 * Oracle Cloud Bridge API
 * API for Oracle Cloud Bridge service.
 * OpenAPI spec version: 20220509
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plugin = void 0;
var Plugin;
(function (Plugin) {
    let DesiredState;
    (function (DesiredState) {
        DesiredState["Enabled"] = "ENABLED";
        DesiredState["Disabled"] = "DISABLED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DesiredState["UnknownValue"] = "UNKNOWN_VALUE";
    })(DesiredState = Plugin.DesiredState || (Plugin.DesiredState = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Inactive"] = "INACTIVE";
        LifecycleState["NeedsAttention"] = "NEEDS_ATTENTION";
        LifecycleState["Deleted"] = "DELETED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = Plugin.LifecycleState || (Plugin.LifecycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    Plugin.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    Plugin.getDeserializedJsonObj = getDeserializedJsonObj;
})(Plugin = exports.Plugin || (exports.Plugin = {}));
//# sourceMappingURL=plugin.js.map