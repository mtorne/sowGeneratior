/**
 * Oracle Cloud Bridge API
 * API for Oracle Cloud Bridge service.
 * OpenAPI spec version: 20220509
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * VMware virtual machine related properties.
 */
export interface VmwareVmProperties {
    /**
     * Cluster name.
     */
    "cluster"?: string;
    /**
     * Customer fields.
     */
    "customerFields"?: Array<string>;
    /**
     * Customer defined tags.
     */
    "customerTags"?: Array<model.CustomerTag>;
    /**
     * vCenter-specific identifier of the virtual machine.
     */
    "instanceUuid"?: string;
    /**
     * Path directory of the asset.
     */
    "path"?: string;
    /**
     * VMware tools status.
     */
    "vmwareToolsStatus"?: string;
    /**
     * Whether changed block tracking for this VM's disk is active.
     */
    "isDisksUuidEnabled"?: boolean;
    /**
     * Indicates that change tracking is supported for virtual disks of this virtual machine.
     * However, even if change tracking is supported, it might not be available for all disks of the virtual machine.
     *
     */
    "isDisksCbtEnabled"?: boolean;
    /**
     * Fault tolerance state.
     */
    "faultToleranceState"?: string;
    /**
     * Fault tolerance bandwidth. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "faultToleranceBandwidth"?: number;
    /**
     * Fault tolerance to secondary latency. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "faultToleranceSecondaryLatency"?: number;
}
export declare namespace VmwareVmProperties {
    function getJsonObj(obj: VmwareVmProperties): object;
    function getDeserializedJsonObj(obj: VmwareVmProperties): object;
}
