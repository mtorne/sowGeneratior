/**
 * Oracle Cloud Bridge API
 * API for Oracle Cloud Bridge service.
 * OpenAPI spec version: 20220509
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Describes a network interface.
 */
export interface InstanceNetworkInterface {
    "association"?: model.InstanceNetworkInterfaceAssociation;
    "attachment"?: model.InstanceNetworkInterfaceAttachment;
    /**
     * The description.
     */
    "description"?: string;
    /**
     * The security groups.
     */
    "securityGroups"?: Array<model.GroupIdentifier>;
    /**
     * The type of network interface.
     */
    "interfaceType"?: string;
    /**
     * The IPv4 delegated prefixes that are assigned to the network interface.
     */
    "ipv4Prefixes"?: Array<string>;
    /**
     * The IPv6 addresses associated with the network interface.
     */
    "ipv6Addresses"?: Array<string>;
    /**
     * The IPv6 delegated prefixes that are assigned to the network interface.
     */
    "ipv6Prefixes"?: Array<string>;
    /**
     * The MAC address.
     */
    "macAddress"?: string;
    /**
     * The ID of the network interface.
     */
    "networkInterfaceKey"?: string;
    /**
     * The ID of the AWS account that created the network interface.
     */
    "ownerKey"?: string;
    /**
     * The private IPv4 addresses associated with the network interface.
     */
    "privateIpAddresses"?: Array<model.InstancePrivateIpAddress>;
    /**
     * Indicates whether source/destination checking is enabled.
     */
    "isSourceDestCheck"?: boolean;
    /**
     * The status of the network interface.
     */
    "status"?: string;
    /**
     * The ID of the subnet.
     */
    "subnetKey"?: string;
}
export declare namespace InstanceNetworkInterface {
    function getJsonObj(obj: InstanceNetworkInterface): object;
    function getDeserializedJsonObj(obj: InstanceNetworkInterface): object;
}
