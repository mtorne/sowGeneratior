/**
 * Oracle Cloud Bridge API
 * API for Oracle Cloud Bridge service.
 * OpenAPI spec version: 20220509
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as serviceRequests from "./request";
import * as serviceResponses from "./response";
import * as models from "./model";
import { OcbAgentSvcClient } from "./client";
export declare class OcbAgentSvcWaiter {
    private client;
    private readonly config?;
    constructor(client: OcbAgentSvcClient, config?: Partial<import("oci-common/lib/waiter").WaiterConfigurationDetails> | undefined);
    /**
     * Waits forAgent till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAgentResponse | null (null in case of 404 response)
     */
    forAgent(request: serviceRequests.GetAgentRequest, ...targetStates: models.Agent.LifecycleState[]): Promise<serviceResponses.GetAgentResponse | null>;
    /**
     * Waits forAgentDependency till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAgentDependencyResponse | null (null in case of 404 response)
     */
    forAgentDependency(request: serviceRequests.GetAgentDependencyRequest, ...targetStates: models.AgentDependency.LifecycleState[]): Promise<serviceResponses.GetAgentDependencyResponse | null>;
    /**
     * Waits forEnvironment till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetEnvironmentResponse | null (null in case of 404 response)
     */
    forEnvironment(request: serviceRequests.GetEnvironmentRequest, ...targetStates: models.Environment.LifecycleState[]): Promise<serviceResponses.GetEnvironmentResponse | null>;
    /**
     * Waits forPlugin till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetPluginResponse | null (null in case of 404 response)
     */
    forPlugin(request: serviceRequests.GetPluginRequest, ...targetStates: models.Plugin.LifecycleState[]): Promise<serviceResponses.GetPluginResponse | null>;
}
