"use strict";
/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListSecurityFeaturesRequest = void 0;
var ListSecurityFeaturesRequest;
(function (ListSecurityFeaturesRequest) {
    let AccessLevel;
    (function (AccessLevel) {
        AccessLevel["Restricted"] = "RESTRICTED";
        AccessLevel["Accessible"] = "ACCESSIBLE";
    })(AccessLevel = ListSecurityFeaturesRequest.AccessLevel || (ListSecurityFeaturesRequest.AccessLevel = {}));
    let TargetsWithUnifiedAudit;
    (function (TargetsWithUnifiedAudit) {
        TargetsWithUnifiedAudit["Enabled"] = "ENABLED";
        TargetsWithUnifiedAudit["Disabled"] = "DISABLED";
        TargetsWithUnifiedAudit["None"] = "NONE";
    })(TargetsWithUnifiedAudit = ListSecurityFeaturesRequest.TargetsWithUnifiedAudit || (ListSecurityFeaturesRequest.TargetsWithUnifiedAudit = {}));
    let TargetsWithFineGrainedAudit;
    (function (TargetsWithFineGrainedAudit) {
        TargetsWithFineGrainedAudit["Enabled"] = "ENABLED";
        TargetsWithFineGrainedAudit["Disabled"] = "DISABLED";
        TargetsWithFineGrainedAudit["None"] = "NONE";
    })(TargetsWithFineGrainedAudit = ListSecurityFeaturesRequest.TargetsWithFineGrainedAudit || (ListSecurityFeaturesRequest.TargetsWithFineGrainedAudit = {}));
    let TargetsWithTraditionalAudit;
    (function (TargetsWithTraditionalAudit) {
        TargetsWithTraditionalAudit["Enabled"] = "ENABLED";
        TargetsWithTraditionalAudit["Disabled"] = "DISABLED";
        TargetsWithTraditionalAudit["None"] = "NONE";
    })(TargetsWithTraditionalAudit = ListSecurityFeaturesRequest.TargetsWithTraditionalAudit || (ListSecurityFeaturesRequest.TargetsWithTraditionalAudit = {}));
    let TargetsWithDatabaseVault;
    (function (TargetsWithDatabaseVault) {
        TargetsWithDatabaseVault["Enabled"] = "ENABLED";
        TargetsWithDatabaseVault["Disabled"] = "DISABLED";
        TargetsWithDatabaseVault["None"] = "NONE";
    })(TargetsWithDatabaseVault = ListSecurityFeaturesRequest.TargetsWithDatabaseVault || (ListSecurityFeaturesRequest.TargetsWithDatabaseVault = {}));
    let TargetsWithPrivilegeAnalysis;
    (function (TargetsWithPrivilegeAnalysis) {
        TargetsWithPrivilegeAnalysis["Enabled"] = "ENABLED";
        TargetsWithPrivilegeAnalysis["Disabled"] = "DISABLED";
        TargetsWithPrivilegeAnalysis["None"] = "NONE";
    })(TargetsWithPrivilegeAnalysis = ListSecurityFeaturesRequest.TargetsWithPrivilegeAnalysis || (ListSecurityFeaturesRequest.TargetsWithPrivilegeAnalysis = {}));
    let TargetsWithTablespaceEncryption;
    (function (TargetsWithTablespaceEncryption) {
        TargetsWithTablespaceEncryption["Enabled"] = "ENABLED";
        TargetsWithTablespaceEncryption["Disabled"] = "DISABLED";
        TargetsWithTablespaceEncryption["None"] = "NONE";
    })(TargetsWithTablespaceEncryption = ListSecurityFeaturesRequest.TargetsWithTablespaceEncryption || (ListSecurityFeaturesRequest.TargetsWithTablespaceEncryption = {}));
    let TargetsWithColumnEncryption;
    (function (TargetsWithColumnEncryption) {
        TargetsWithColumnEncryption["Enabled"] = "ENABLED";
        TargetsWithColumnEncryption["Disabled"] = "DISABLED";
        TargetsWithColumnEncryption["None"] = "NONE";
    })(TargetsWithColumnEncryption = ListSecurityFeaturesRequest.TargetsWithColumnEncryption || (ListSecurityFeaturesRequest.TargetsWithColumnEncryption = {}));
    let TargetsWithNetworkEncryption;
    (function (TargetsWithNetworkEncryption) {
        TargetsWithNetworkEncryption["Enabled"] = "ENABLED";
        TargetsWithNetworkEncryption["Disabled"] = "DISABLED";
        TargetsWithNetworkEncryption["None"] = "NONE";
    })(TargetsWithNetworkEncryption = ListSecurityFeaturesRequest.TargetsWithNetworkEncryption || (ListSecurityFeaturesRequest.TargetsWithNetworkEncryption = {}));
    let TargetsWithPasswordAuthentication;
    (function (TargetsWithPasswordAuthentication) {
        TargetsWithPasswordAuthentication["Enabled"] = "ENABLED";
        TargetsWithPasswordAuthentication["Disabled"] = "DISABLED";
        TargetsWithPasswordAuthentication["None"] = "NONE";
    })(TargetsWithPasswordAuthentication = ListSecurityFeaturesRequest.TargetsWithPasswordAuthentication || (ListSecurityFeaturesRequest.TargetsWithPasswordAuthentication = {}));
    let TargetsWithGlobalAuthentication;
    (function (TargetsWithGlobalAuthentication) {
        TargetsWithGlobalAuthentication["Enabled"] = "ENABLED";
        TargetsWithGlobalAuthentication["Disabled"] = "DISABLED";
        TargetsWithGlobalAuthentication["None"] = "NONE";
    })(TargetsWithGlobalAuthentication = ListSecurityFeaturesRequest.TargetsWithGlobalAuthentication || (ListSecurityFeaturesRequest.TargetsWithGlobalAuthentication = {}));
    let TargetsWithExternalAuthentication;
    (function (TargetsWithExternalAuthentication) {
        TargetsWithExternalAuthentication["Enabled"] = "ENABLED";
        TargetsWithExternalAuthentication["Disabled"] = "DISABLED";
        TargetsWithExternalAuthentication["None"] = "NONE";
    })(TargetsWithExternalAuthentication = ListSecurityFeaturesRequest.TargetsWithExternalAuthentication || (ListSecurityFeaturesRequest.TargetsWithExternalAuthentication = {}));
})(ListSecurityFeaturesRequest = exports.ListSecurityFeaturesRequest || (exports.ListSecurityFeaturesRequest = {}));
//# sourceMappingURL=list-security-features-request.js.map