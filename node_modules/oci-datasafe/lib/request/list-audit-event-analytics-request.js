"use strict";
/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListAuditEventAnalyticsRequest = void 0;
var ListAuditEventAnalyticsRequest;
(function (ListAuditEventAnalyticsRequest) {
    let AccessLevel;
    (function (AccessLevel) {
        AccessLevel["Restricted"] = "RESTRICTED";
        AccessLevel["Accessible"] = "ACCESSIBLE";
    })(AccessLevel = ListAuditEventAnalyticsRequest.AccessLevel || (ListAuditEventAnalyticsRequest.AccessLevel = {}));
    let SummaryField;
    (function (SummaryField) {
        SummaryField["AuditEventTime"] = "auditEventTime";
        SummaryField["DbUserName"] = "dbUserName";
        SummaryField["TargetId"] = "targetId";
        SummaryField["TargetName"] = "targetName";
        SummaryField["TargetClass"] = "targetClass";
        SummaryField["ObjectType"] = "objectType";
        SummaryField["ClientHostname"] = "clientHostname";
        SummaryField["ClientProgram"] = "clientProgram";
        SummaryField["ClientId"] = "clientId";
        SummaryField["AuditType"] = "auditType";
        SummaryField["EventName"] = "eventName";
        SummaryField["AllRecord"] = "allRecord";
        SummaryField["AuditSettingsChange"] = "auditSettingsChange";
        SummaryField["DbSchemaChange"] = "dbSchemaChange";
        SummaryField["EntitlementChange"] = "entitlementChange";
        SummaryField["LoginFailure"] = "loginFailure";
        SummaryField["LoginSuccess"] = "loginSuccess";
        SummaryField["AllViolations"] = "allViolations";
        SummaryField["RealmViolations"] = "realmViolations";
        SummaryField["RuleViolations"] = "ruleViolations";
        SummaryField["DvconfigActivities"] = "dvconfigActivities";
        SummaryField["Ddls"] = "ddls";
        SummaryField["Dmls"] = "dmls";
        SummaryField["PrivilegeChanges"] = "privilegeChanges";
        SummaryField["AuditSettingsEnables"] = "auditSettingsEnables";
        SummaryField["AuditSettingsDisables"] = "auditSettingsDisables";
        SummaryField["Selects"] = "selects";
        SummaryField["Creates"] = "creates";
        SummaryField["Alters"] = "alters";
        SummaryField["Drops"] = "drops";
        SummaryField["Grants"] = "grants";
        SummaryField["Revokes"] = "revokes";
    })(SummaryField = ListAuditEventAnalyticsRequest.SummaryField || (ListAuditEventAnalyticsRequest.SummaryField = {}));
    let GroupBy;
    (function (GroupBy) {
        GroupBy["AuditEventTime"] = "auditEventTime";
        GroupBy["DbUserName"] = "dbUserName";
        GroupBy["TargetId"] = "targetId";
        GroupBy["TargetName"] = "targetName";
        GroupBy["TargetClass"] = "targetClass";
        GroupBy["ObjectType"] = "objectType";
        GroupBy["ClientHostname"] = "clientHostname";
        GroupBy["ClientProgram"] = "clientProgram";
        GroupBy["ClientId"] = "clientId";
        GroupBy["AuditType"] = "auditType";
        GroupBy["EventName"] = "eventName";
    })(GroupBy = ListAuditEventAnalyticsRequest.GroupBy || (ListAuditEventAnalyticsRequest.GroupBy = {}));
    let SortOrder;
    (function (SortOrder) {
        SortOrder["Asc"] = "ASC";
        SortOrder["Desc"] = "DESC";
    })(SortOrder = ListAuditEventAnalyticsRequest.SortOrder || (ListAuditEventAnalyticsRequest.SortOrder = {}));
    let SortBy;
    (function (SortBy) {
        SortBy["TargetId"] = "targetId";
        SortBy["TargetClass"] = "targetClass";
        SortBy["TargetName"] = "targetName";
        SortBy["ObjectType"] = "objectType";
        SortBy["DbUserName"] = "dbUserName";
        SortBy["EventName"] = "eventName";
        SortBy["AuditEventTime"] = "auditEventTime";
        SortBy["ClientHostname"] = "clientHostname";
        SortBy["ClientProgram"] = "clientProgram";
        SortBy["ClientId"] = "clientId";
        SortBy["AuditType"] = "auditType";
    })(SortBy = ListAuditEventAnalyticsRequest.SortBy || (ListAuditEventAnalyticsRequest.SortBy = {}));
})(ListAuditEventAnalyticsRequest = exports.ListAuditEventAnalyticsRequest || (exports.ListAuditEventAnalyticsRequest = {}));
//# sourceMappingURL=list-audit-event-analytics-request.js.map