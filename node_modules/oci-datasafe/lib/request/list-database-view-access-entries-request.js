"use strict";
/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListDatabaseViewAccessEntriesRequest = void 0;
var ListDatabaseViewAccessEntriesRequest;
(function (ListDatabaseViewAccessEntriesRequest) {
    let SortBy;
    (function (SortBy) {
        SortBy["Key"] = "key";
        SortBy["Grantee"] = "grantee";
        SortBy["AccessType"] = "accessType";
        SortBy["TableSchema"] = "tableSchema";
        SortBy["TableName"] = "tableName";
        SortBy["ViewSchema"] = "viewSchema";
        SortBy["ViewName"] = "viewName";
        SortBy["PrivilegeType"] = "privilegeType";
        SortBy["Privilege"] = "privilege";
        SortBy["PrivilegeGrantable"] = "privilegeGrantable";
        SortBy["GrantFromRole"] = "grantFromRole";
        SortBy["AccessThroughObject"] = "accessThroughObject";
        SortBy["ColumnName"] = "columnName";
        SortBy["Grantor"] = "grantor";
        SortBy["IsAccessConstrainedByDatabaseVault"] = "isAccessConstrainedByDatabaseVault";
        SortBy["IsAccessConstrainedByVirtualPrivateDatabase"] = "isAccessConstrainedByVirtualPrivateDatabase";
        SortBy["IsAccessConstrainedByRedaction"] = "isAccessConstrainedByRedaction";
        SortBy["IsAccessConstrainedByRealApplicationSecurity"] = "isAccessConstrainedByRealApplicationSecurity";
        SortBy["IsAccessConstrainedBySqlFirewall"] = "isAccessConstrainedBySqlFirewall";
    })(SortBy = ListDatabaseViewAccessEntriesRequest.SortBy || (ListDatabaseViewAccessEntriesRequest.SortBy = {}));
    let SortOrder;
    (function (SortOrder) {
        SortOrder["Asc"] = "ASC";
        SortOrder["Desc"] = "DESC";
    })(SortOrder = ListDatabaseViewAccessEntriesRequest.SortOrder || (ListDatabaseViewAccessEntriesRequest.SortOrder = {}));
})(ListDatabaseViewAccessEntriesRequest = exports.ListDatabaseViewAccessEntriesRequest || (exports.ListDatabaseViewAccessEntriesRequest = {}));
//# sourceMappingURL=list-database-view-access-entries-request.js.map