/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datasafe/ListMaskingPolicyHealthReportLogs.ts.html |here} to see how to use ListMaskingPolicyHealthReportLogsRequest.
 */
export interface ListMaskingPolicyHealthReportLogsRequest extends common.BaseRequest {
    /**
     * The OCID of the masking health report.
     */
    "maskingPolicyHealthReportId": string;
    /**
     * For list pagination. The maximum number of items to return per page in a paginated \"List\" call. For details about how pagination works, see [List Pagination](https://docs.oracle.com/iaas/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
     */
    "limit"?: number;
    /**
     * For list pagination. The page token representing the page at which to start retrieving results. It is usually retrieved from a previous \"List\" call. For details about how pagination works, see [List Pagination](https://docs.oracle.com/iaas/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
     */
    "page"?: string;
    /**
     * The sort order to use, either ascending (ASC) or descending (DESC).
     */
    "sortOrder"?: ListMaskingPolicyHealthReportLogsRequest.SortOrder;
    /**
     * Unique identifier for the request.
     */
    "opcRequestId"?: string;
    /**
     * sort by
     */
    "sortBy"?: ListMaskingPolicyHealthReportLogsRequest.SortBy;
    /**
     * A filter to return only the resources that match the specified log message type.
     */
    "messageType"?: ListMaskingPolicyHealthReportLogsRequest.MessageType;
}
export declare namespace ListMaskingPolicyHealthReportLogsRequest {
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        LogType = "logType"
    }
    enum MessageType {
        Pass = "PASS",
        Warning = "WARNING",
        Error = "ERROR"
    }
}
