"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserSummary = void 0;
var UserSummary;
(function (UserSummary) {
    let UserCategory;
    (function (UserCategory) {
        UserCategory["Critical"] = "CRITICAL";
        UserCategory["High"] = "HIGH";
        UserCategory["Medium"] = "MEDIUM";
        UserCategory["Low"] = "LOW";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UserCategory["UnknownValue"] = "UNKNOWN_VALUE";
    })(UserCategory = UserSummary.UserCategory || (UserSummary.UserCategory = {}));
    let AccountStatus;
    (function (AccountStatus) {
        AccountStatus["Open"] = "OPEN";
        AccountStatus["Locked"] = "LOCKED";
        AccountStatus["Expired"] = "EXPIRED";
        AccountStatus["ExpiredAndLocked"] = "EXPIRED_AND_LOCKED";
        AccountStatus["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AccountStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(AccountStatus = UserSummary.AccountStatus || (UserSummary.AccountStatus = {}));
    let AuthenticationType;
    (function (AuthenticationType) {
        AuthenticationType["Password"] = "PASSWORD";
        AuthenticationType["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AuthenticationType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AuthenticationType = UserSummary.AuthenticationType || (UserSummary.AuthenticationType = {}));
    let UserTypes;
    (function (UserTypes) {
        UserTypes["AdminPrivileged"] = "ADMIN_PRIVILEGED";
        UserTypes["Application"] = "APPLICATION";
        UserTypes["Privileged"] = "PRIVILEGED";
        UserTypes["Schema"] = "SCHEMA";
        UserTypes["NonPrivileged"] = "NON_PRIVILEGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UserTypes["UnknownValue"] = "UNKNOWN_VALUE";
    })(UserTypes = UserSummary.UserTypes || (UserSummary.UserTypes = {}));
    let AdminRoles;
    (function (AdminRoles) {
        AdminRoles["PdbDba"] = "PDB_DBA";
        AdminRoles["Dba"] = "DBA";
        AdminRoles["DvAdmin"] = "DV_ADMIN";
        AdminRoles["AuditAdmin"] = "AUDIT_ADMIN";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AdminRoles["UnknownValue"] = "UNKNOWN_VALUE";
    })(AdminRoles = UserSummary.AdminRoles || (UserSummary.AdminRoles = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    UserSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    UserSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(UserSummary = exports.UserSummary || (exports.UserSummary = {}));
//# sourceMappingURL=user-summary.js.map