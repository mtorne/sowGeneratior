"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityFeatureSummary = void 0;
var SecurityFeatureSummary;
(function (SecurityFeatureSummary) {
    let UnifiedAudit;
    (function (UnifiedAudit) {
        UnifiedAudit["Enabled"] = "ENABLED";
        UnifiedAudit["Disabled"] = "DISABLED";
        UnifiedAudit["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnifiedAudit["UnknownValue"] = "UNKNOWN_VALUE";
    })(UnifiedAudit = SecurityFeatureSummary.UnifiedAudit || (SecurityFeatureSummary.UnifiedAudit = {}));
    let FineGrainedAudit;
    (function (FineGrainedAudit) {
        FineGrainedAudit["Enabled"] = "ENABLED";
        FineGrainedAudit["Disabled"] = "DISABLED";
        FineGrainedAudit["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        FineGrainedAudit["UnknownValue"] = "UNKNOWN_VALUE";
    })(FineGrainedAudit = SecurityFeatureSummary.FineGrainedAudit || (SecurityFeatureSummary.FineGrainedAudit = {}));
    let TraditionalAudit;
    (function (TraditionalAudit) {
        TraditionalAudit["Enabled"] = "ENABLED";
        TraditionalAudit["Disabled"] = "DISABLED";
        TraditionalAudit["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TraditionalAudit["UnknownValue"] = "UNKNOWN_VALUE";
    })(TraditionalAudit = SecurityFeatureSummary.TraditionalAudit || (SecurityFeatureSummary.TraditionalAudit = {}));
    let DatabaseVault;
    (function (DatabaseVault) {
        DatabaseVault["Enabled"] = "ENABLED";
        DatabaseVault["Disabled"] = "DISABLED";
        DatabaseVault["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseVault["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseVault = SecurityFeatureSummary.DatabaseVault || (SecurityFeatureSummary.DatabaseVault = {}));
    let PrivilegeAnalysis;
    (function (PrivilegeAnalysis) {
        PrivilegeAnalysis["Enabled"] = "ENABLED";
        PrivilegeAnalysis["Disabled"] = "DISABLED";
        PrivilegeAnalysis["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PrivilegeAnalysis["UnknownValue"] = "UNKNOWN_VALUE";
    })(PrivilegeAnalysis = SecurityFeatureSummary.PrivilegeAnalysis || (SecurityFeatureSummary.PrivilegeAnalysis = {}));
    let TablespaceEncryption;
    (function (TablespaceEncryption) {
        TablespaceEncryption["Enabled"] = "ENABLED";
        TablespaceEncryption["Disabled"] = "DISABLED";
        TablespaceEncryption["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TablespaceEncryption["UnknownValue"] = "UNKNOWN_VALUE";
    })(TablespaceEncryption = SecurityFeatureSummary.TablespaceEncryption || (SecurityFeatureSummary.TablespaceEncryption = {}));
    let ColumnEncryption;
    (function (ColumnEncryption) {
        ColumnEncryption["Enabled"] = "ENABLED";
        ColumnEncryption["Disabled"] = "DISABLED";
        ColumnEncryption["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ColumnEncryption["UnknownValue"] = "UNKNOWN_VALUE";
    })(ColumnEncryption = SecurityFeatureSummary.ColumnEncryption || (SecurityFeatureSummary.ColumnEncryption = {}));
    let NetworkEncryption;
    (function (NetworkEncryption) {
        NetworkEncryption["Enabled"] = "ENABLED";
        NetworkEncryption["Disabled"] = "DISABLED";
        NetworkEncryption["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        NetworkEncryption["UnknownValue"] = "UNKNOWN_VALUE";
    })(NetworkEncryption = SecurityFeatureSummary.NetworkEncryption || (SecurityFeatureSummary.NetworkEncryption = {}));
    let PasswordAuthentication;
    (function (PasswordAuthentication) {
        PasswordAuthentication["Enabled"] = "ENABLED";
        PasswordAuthentication["Disabled"] = "DISABLED";
        PasswordAuthentication["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PasswordAuthentication["UnknownValue"] = "UNKNOWN_VALUE";
    })(PasswordAuthentication = SecurityFeatureSummary.PasswordAuthentication || (SecurityFeatureSummary.PasswordAuthentication = {}));
    let GlobalAuthentication;
    (function (GlobalAuthentication) {
        GlobalAuthentication["Enabled"] = "ENABLED";
        GlobalAuthentication["Disabled"] = "DISABLED";
        GlobalAuthentication["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        GlobalAuthentication["UnknownValue"] = "UNKNOWN_VALUE";
    })(GlobalAuthentication = SecurityFeatureSummary.GlobalAuthentication || (SecurityFeatureSummary.GlobalAuthentication = {}));
    let ExternalAuthentication;
    (function (ExternalAuthentication) {
        ExternalAuthentication["Enabled"] = "ENABLED";
        ExternalAuthentication["Disabled"] = "DISABLED";
        ExternalAuthentication["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ExternalAuthentication["UnknownValue"] = "UNKNOWN_VALUE";
    })(ExternalAuthentication = SecurityFeatureSummary.ExternalAuthentication || (SecurityFeatureSummary.ExternalAuthentication = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    SecurityFeatureSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    SecurityFeatureSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(SecurityFeatureSummary = exports.SecurityFeatureSummary || (exports.SecurityFeatureSummary = {}));
//# sourceMappingURL=security-feature-summary.js.map