"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditSpecification = void 0;
var AuditSpecification;
(function (AuditSpecification) {
    let EnableStatus;
    (function (EnableStatus) {
        EnableStatus["Enabled"] = "ENABLED";
        EnableStatus["Disabled"] = "DISABLED";
        EnableStatus["PartiallyEnabled"] = "PARTIALLY_ENABLED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        EnableStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(EnableStatus = AuditSpecification.EnableStatus || (AuditSpecification.EnableStatus = {}));
    let EnabledEntities;
    (function (EnabledEntities) {
        EnabledEntities["AllUsers"] = "ALL_USERS";
        EnabledEntities["IncludeUsers"] = "INCLUDE_USERS";
        EnabledEntities["IncludeRoles"] = "INCLUDE_ROLES";
        EnabledEntities["ExcludeUsers"] = "EXCLUDE_USERS";
        EnabledEntities["IncludeUsersRoles"] = "INCLUDE_USERS_ROLES";
        EnabledEntities["Disabled"] = "DISABLED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        EnabledEntities["UnknownValue"] = "UNKNOWN_VALUE";
    })(EnabledEntities = AuditSpecification.EnabledEntities || (AuditSpecification.EnabledEntities = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AuditSpecification.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AuditSpecification.getDeserializedJsonObj = getDeserializedJsonObj;
})(AuditSpecification = exports.AuditSpecification || (exports.AuditSpecification = {}));
//# sourceMappingURL=audit-specification.js.map