"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequest = void 0;
const model = __importStar(require("../model"));
var WorkRequest;
(function (WorkRequest) {
    let OperationType;
    (function (OperationType) {
        OperationType["EnableDataSafeConfiguration"] = "ENABLE_DATA_SAFE_CONFIGURATION";
        OperationType["CreatePrivateEndpoint"] = "CREATE_PRIVATE_ENDPOINT";
        OperationType["UpdatePrivateEndpoint"] = "UPDATE_PRIVATE_ENDPOINT";
        OperationType["DeletePrivateEndpoint"] = "DELETE_PRIVATE_ENDPOINT";
        OperationType["ChangePrivateEndpointCompartment"] = "CHANGE_PRIVATE_ENDPOINT_COMPARTMENT";
        OperationType["CreateOnpremConnector"] = "CREATE_ONPREM_CONNECTOR";
        OperationType["UpdateOnpremConnector"] = "UPDATE_ONPREM_CONNECTOR";
        OperationType["DeleteOnpremConnector"] = "DELETE_ONPREM_CONNECTOR";
        OperationType["UpdateOnpremConnectorWallet"] = "UPDATE_ONPREM_CONNECTOR_WALLET";
        OperationType["ChangeOnpremConnectorCompartment"] = "CHANGE_ONPREM_CONNECTOR_COMPARTMENT";
        OperationType["CreateTargetDatabase"] = "CREATE_TARGET_DATABASE";
        OperationType["UpdateTargetDatabase"] = "UPDATE_TARGET_DATABASE";
        OperationType["ActivateTargetDatabase"] = "ACTIVATE_TARGET_DATABASE";
        OperationType["DeactivateTargetDatabase"] = "DEACTIVATE_TARGET_DATABASE";
        OperationType["DeleteTargetDatabase"] = "DELETE_TARGET_DATABASE";
        OperationType["ChangeTargetDatabaseCompartment"] = "CHANGE_TARGET_DATABASE_COMPARTMENT";
        OperationType["CreatePeerTargetDatabase"] = "CREATE_PEER_TARGET_DATABASE";
        OperationType["UpdatePeerTargetDatabase"] = "UPDATE_PEER_TARGET_DATABASE";
        OperationType["DeletePeerTargetDatabase"] = "DELETE_PEER_TARGET_DATABASE";
        OperationType["RefreshTargetDatabase"] = "REFRESH_TARGET_DATABASE";
        OperationType["ProvisionPolicy"] = "PROVISION_POLICY";
        OperationType["RetrievePolicy"] = "RETRIEVE_POLICY";
        OperationType["UpdatePolicy"] = "UPDATE_POLICY";
        OperationType["ChangePolicyCompartment"] = "CHANGE_POLICY_COMPARTMENT";
        OperationType["CreateUserAssessment"] = "CREATE_USER_ASSESSMENT";
        OperationType["AssessUserAssessment"] = "ASSESS_USER_ASSESSMENT";
        OperationType["CreateSnapshotUserAssessment"] = "CREATE_SNAPSHOT_USER_ASSESSMENT";
        OperationType["CreateScheduleUserAssessment"] = "CREATE_SCHEDULE_USER_ASSESSMENT";
        OperationType["CompareWithBaselineUserAssessment"] = "COMPARE_WITH_BASELINE_USER_ASSESSMENT";
        OperationType["DeleteUserAssessment"] = "DELETE_USER_ASSESSMENT";
        OperationType["UpdateUserAssessment"] = "UPDATE_USER_ASSESSMENT";
        OperationType["ChangeUserAssessmentCompartment"] = "CHANGE_USER_ASSESSMENT_COMPARTMENT";
        OperationType["SetUserAssessmentBaseline"] = "SET_USER_ASSESSMENT_BASELINE";
        OperationType["UnsetUserAssessmentBaseline"] = "UNSET_USER_ASSESSMENT_BASELINE";
        OperationType["GenerateUserAssessmentReport"] = "GENERATE_USER_ASSESSMENT_REPORT";
        OperationType["CreateSecurityAssessment"] = "CREATE_SECURITY_ASSESSMENT";
        OperationType["CreateSecurityAssessmentNow"] = "CREATE_SECURITY_ASSESSMENT_NOW";
        OperationType["AssessSecurityAssessment"] = "ASSESS_SECURITY_ASSESSMENT";
        OperationType["CreateSnapshotSecurityAssessment"] = "CREATE_SNAPSHOT_SECURITY_ASSESSMENT";
        OperationType["CreateScheduleSecurityAssessment"] = "CREATE_SCHEDULE_SECURITY_ASSESSMENT";
        OperationType["CompareWithBaselineSecurityAssessment"] = "COMPARE_WITH_BASELINE_SECURITY_ASSESSMENT";
        OperationType["DeleteSecurityAssessment"] = "DELETE_SECURITY_ASSESSMENT";
        OperationType["UpdateSecurityAssessment"] = "UPDATE_SECURITY_ASSESSMENT";
        OperationType["UpdateFindingRisk"] = "UPDATE_FINDING_RISK";
        OperationType["ChangeSecurityAssessmentCompartment"] = "CHANGE_SECURITY_ASSESSMENT_COMPARTMENT";
        OperationType["SetSecurityAssessmentBaseline"] = "SET_SECURITY_ASSESSMENT_BASELINE";
        OperationType["UnsetSecurityAssessmentBaseline"] = "UNSET_SECURITY_ASSESSMENT_BASELINE";
        OperationType["GenerateSecurityAssessmentReport"] = "GENERATE_SECURITY_ASSESSMENT_REPORT";
        OperationType["DeleteSqlFirewallAllowedSql"] = "DELETE_SQL_FIREWALL_ALLOWED_SQL";
        OperationType["BulkCreateSqlFirewallAllowedSql"] = "BULK_CREATE_SQL_FIREWALL_ALLOWED_SQL";
        OperationType["BulkDeleteSqlFirewallAllowedSql"] = "BULK_DELETE_SQL_FIREWALL_ALLOWED_SQL";
        OperationType["CreateAuditProfile"] = "CREATE_AUDIT_PROFILE";
        OperationType["CalculateVolume"] = "CALCULATE_VOLUME";
        OperationType["CalculateCollectedVolume"] = "CALCULATE_COLLECTED_VOLUME";
        OperationType["CreateDbSecurityConfig"] = "CREATE_DB_SECURITY_CONFIG";
        OperationType["RefreshDbSecurityConfig"] = "REFRESH_DB_SECURITY_CONFIG";
        OperationType["UpdateDbSecurityConfig"] = "UPDATE_DB_SECURITY_CONFIG";
        OperationType["ChangeDbSecurityConfigCompartment"] = "CHANGE_DB_SECURITY_CONFIG_COMPARTMENT";
        OperationType["GenerateFirewallPolicy"] = "GENERATE_FIREWALL_POLICY";
        OperationType["UpdateFirewallPolicy"] = "UPDATE_FIREWALL_POLICY";
        OperationType["ChangeFirewallPolicyCompartment"] = "CHANGE_FIREWALL_POLICY_COMPARTMENT";
        OperationType["DeleteFirewallPolicy"] = "DELETE_FIREWALL_POLICY";
        OperationType["CreateSqlCollection"] = "CREATE_SQL_COLLECTION";
        OperationType["UpdateSqlCollection"] = "UPDATE_SQL_COLLECTION";
        OperationType["StartSqlCollection"] = "START_SQL_COLLECTION";
        OperationType["StopSqlCollection"] = "STOP_SQL_COLLECTION";
        OperationType["DeleteSqlCollection"] = "DELETE_SQL_COLLECTION";
        OperationType["ChangeSqlCollectionCompartment"] = "CHANGE_SQL_COLLECTION_COMPARTMENT";
        OperationType["RefreshSqlCollectionLogInsights"] = "REFRESH_SQL_COLLECTION_LOG_INSIGHTS";
        OperationType["PurgeSqlCollectionLogs"] = "PURGE_SQL_COLLECTION_LOGS";
        OperationType["RefreshViolations"] = "REFRESH_VIOLATIONS";
        OperationType["CreateArchival"] = "CREATE_ARCHIVAL";
        OperationType["UpdateSecurityPolicy"] = "UPDATE_SECURITY_POLICY";
        OperationType["ChangeSecurityPolicyCompartment"] = "CHANGE_SECURITY_POLICY_COMPARTMENT";
        OperationType["UpdateSecurityPolicyDeployment"] = "UPDATE_SECURITY_POLICY_DEPLOYMENT";
        OperationType["ChangeSecurityPolicyDeploymentCompartment"] = "CHANGE_SECURITY_POLICY_DEPLOYMENT_COMPARTMENT";
        OperationType["AuditTrail"] = "AUDIT_TRAIL";
        OperationType["DeleteAuditTrail"] = "DELETE_AUDIT_TRAIL";
        OperationType["DiscoverAuditTrails"] = "DISCOVER_AUDIT_TRAILS";
        OperationType["UpdateAuditTrail"] = "UPDATE_AUDIT_TRAIL";
        OperationType["UpdateAuditProfile"] = "UPDATE_AUDIT_PROFILE";
        OperationType["AuditChangeCompartment"] = "AUDIT_CHANGE_COMPARTMENT";
        OperationType["CreateReportDefinition"] = "CREATE_REPORT_DEFINITION";
        OperationType["UpdateReportDefinition"] = "UPDATE_REPORT_DEFINITION";
        OperationType["ChangeReportDefinitionCompartment"] = "CHANGE_REPORT_DEFINITION_COMPARTMENT";
        OperationType["DeleteReportDefinition"] = "DELETE_REPORT_DEFINITION";
        OperationType["GenerateReport"] = "GENERATE_REPORT";
        OperationType["ChangeReportCompartment"] = "CHANGE_REPORT_COMPARTMENT";
        OperationType["DeleteArchiveRetrieval"] = "DELETE_ARCHIVE_RETRIEVAL";
        OperationType["CreateArchiveRetrieval"] = "CREATE_ARCHIVE_RETRIEVAL";
        OperationType["UpdateArchiveRetrieval"] = "UPDATE_ARCHIVE_RETRIEVAL";
        OperationType["ChangeArchiveRetrievalCompartment"] = "CHANGE_ARCHIVE_RETRIEVAL_COMPARTMENT";
        OperationType["UpdateAlert"] = "UPDATE_ALERT";
        OperationType["TargetAlertPolicyAssociation"] = "TARGET_ALERT_POLICY_ASSOCIATION";
        OperationType["CreateSensitiveDataModel"] = "CREATE_SENSITIVE_DATA_MODEL";
        OperationType["UpdateSensitiveDataModel"] = "UPDATE_SENSITIVE_DATA_MODEL";
        OperationType["DeleteSensitiveDataModel"] = "DELETE_SENSITIVE_DATA_MODEL";
        OperationType["UploadSensitiveDataModel"] = "UPLOAD_SENSITIVE_DATA_MODEL";
        OperationType["GenerateSensitiveDataModelForDownload"] = "GENERATE_SENSITIVE_DATA_MODEL_FOR_DOWNLOAD";
        OperationType["CreateSensitiveColumn"] = "CREATE_SENSITIVE_COLUMN";
        OperationType["UpdateSensitiveColumn"] = "UPDATE_SENSITIVE_COLUMN";
        OperationType["PatchSensitiveColumns"] = "PATCH_SENSITIVE_COLUMNS";
        OperationType["CreateDiscoveryJob"] = "CREATE_DISCOVERY_JOB";
        OperationType["DeleteDiscoveryJob"] = "DELETE_DISCOVERY_JOB";
        OperationType["PatchDiscoveryJobResult"] = "PATCH_DISCOVERY_JOB_RESULT";
        OperationType["ApplyDiscoveryJobResult"] = "APPLY_DISCOVERY_JOB_RESULT";
        OperationType["GenerateDiscoveryReport"] = "GENERATE_DISCOVERY_REPORT";
        OperationType["CreateSensitiveType"] = "CREATE_SENSITIVE_TYPE";
        OperationType["UpdateSensitiveType"] = "UPDATE_SENSITIVE_TYPE";
        OperationType["CreateMaskingPolicy"] = "CREATE_MASKING_POLICY";
        OperationType["UpdateMaskingPolicy"] = "UPDATE_MASKING_POLICY";
        OperationType["DeleteMaskingPolicy"] = "DELETE_MASKING_POLICY";
        OperationType["UploadMaskingPolicy"] = "UPLOAD_MASKING_POLICY";
        OperationType["GenerateMaskingPolicyForDownload"] = "GENERATE_MASKING_POLICY_FOR_DOWNLOAD";
        OperationType["CreateMaskingColumn"] = "CREATE_MASKING_COLUMN";
        OperationType["UpdateMaskingColumn"] = "UPDATE_MASKING_COLUMN";
        OperationType["PatchMaskingColumns"] = "PATCH_MASKING_COLUMNS";
        OperationType["GenerateMaskingReport"] = "GENERATE_MASKING_REPORT";
        OperationType["CreateLibraryMaskingFormat"] = "CREATE_LIBRARY_MASKING_FORMAT";
        OperationType["UpdateLibraryMaskingFormat"] = "UPDATE_LIBRARY_MASKING_FORMAT";
        OperationType["AddColumnsFromSdm"] = "ADD_COLUMNS_FROM_SDM";
        OperationType["MaskingJob"] = "MASKING_JOB";
        OperationType["CreateDifference"] = "CREATE_DIFFERENCE";
        OperationType["DeleteDifference"] = "DELETE_DIFFERENCE";
        OperationType["UpdateDifference"] = "UPDATE_DIFFERENCE";
        OperationType["PatchDifference"] = "PATCH_DIFFERENCE";
        OperationType["ApplyDifference"] = "APPLY_DIFFERENCE";
        OperationType["MaskPolicyGenerateHealthReport"] = "MASK_POLICY_GENERATE_HEALTH_REPORT";
        OperationType["MaskPolicyDeleteHealthReport"] = "MASK_POLICY_DELETE_HEALTH_REPORT";
        OperationType["CreateSensitiveTypesExport"] = "CREATE_SENSITIVE_TYPES_EXPORT";
        OperationType["UpdateSensitiveTypesExport"] = "UPDATE_SENSITIVE_TYPES_EXPORT";
        OperationType["BulkCreateSensitiveTypes"] = "BULK_CREATE_SENSITIVE_TYPES";
        OperationType["AbortMasking"] = "ABORT_MASKING";
        OperationType["CreateSecurityPolicyReport"] = "CREATE_SECURITY_POLICY_REPORT";
        OperationType["RefreshSecurityPolicyCache"] = "REFRESH_SECURITY_POLICY_CACHE";
        OperationType["DeleteSecurityPolicyCache"] = "DELETE_SECURITY_POLICY_CACHE";
        OperationType["CreateSchedule"] = "CREATE_SCHEDULE";
        OperationType["RemoveScheduleReport"] = "REMOVE_SCHEDULE_REPORT";
        OperationType["UpdateAllAlert"] = "UPDATE_ALL_ALERT";
        OperationType["PatchTargetAlertPolicyAssociation"] = "PATCH_TARGET_ALERT_POLICY_ASSOCIATION";
        OperationType["CreateAlertPolicy"] = "CREATE_ALERT_POLICY";
        OperationType["UpdateAlertPolicy"] = "UPDATE_ALERT_POLICY";
        OperationType["DeleteAlertPolicy"] = "DELETE_ALERT_POLICY";
        OperationType["CreateAlertPolicyRule"] = "CREATE_ALERT_POLICY_RULE";
        OperationType["UpdateAlertPolicyRule"] = "UPDATE_ALERT_POLICY_RULE";
        OperationType["DeleteAlertPolicyRule"] = "DELETE_ALERT_POLICY_RULE";
        OperationType["ChangeAlertPolicyCompartment"] = "CHANGE_ALERT_POLICY_COMPARTMENT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OperationType["UnknownValue"] = "UNKNOWN_VALUE";
    })(OperationType = WorkRequest.OperationType || (WorkRequest.OperationType = {}));
    let Status;
    (function (Status) {
        Status["Accepted"] = "ACCEPTED";
        Status["InProgress"] = "IN_PROGRESS";
        Status["Failed"] = "FAILED";
        Status["Succeeded"] = "SUCCEEDED";
        Status["Canceling"] = "CANCELING";
        Status["Canceled"] = "CANCELED";
        Status["Suspending"] = "SUSPENDING";
        Status["Suspended"] = "SUSPENDED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = WorkRequest.Status || (WorkRequest.Status = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "resources": obj.resources
                ? obj.resources.map(item => {
                    return model.WorkRequestResource.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    WorkRequest.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "resources": obj.resources
                ? obj.resources.map(item => {
                    return model.WorkRequestResource.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    WorkRequest.getDeserializedJsonObj = getDeserializedJsonObj;
})(WorkRequest = exports.WorkRequest || (exports.WorkRequest = {}));
//# sourceMappingURL=work-request.js.map