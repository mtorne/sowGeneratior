/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A list of basic masking formats compatible with a supported data type.
 */
export interface FormatsForDataType {
    /**
     * The data type category, which can be one of the following -
     *   Character - Includes CHAR, NCHAR, VARCHAR2, and NVARCHAR2
     *   Numeric - Includes NUMBER, FLOAT, RAW, BINARY_FLOAT, and BINARY_DOUBLE
     *   Date - Includes DATE and TIMESTAMP
     *   LOB - Includes BLOB, CLOB, and NCLOB
     *   All - Includes all the supported data types
     *
     */
    "dataType": string;
    /**
     * An array of the basic masking formats compatible with the data type category.
     */
    "maskingFormats"?: Array<model.FormatSummary>;
}
export declare namespace FormatsForDataType {
    function getJsonObj(obj: FormatsForDataType): object;
    function getDeserializedJsonObj(obj: FormatsForDataType): object;
}
