/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of a masking report.
 */
export interface MaskingReportSummary {
    /**
     * The OCID of the masking report.
     */
    "id": string;
    /**
     * The OCID of the compartment that contains the masking report.
     */
    "compartmentId": string;
    /**
     * The OCID of the masking work request that resulted in this masking report.
     */
    "maskingWorkRequestId": string;
    /**
     * The OCID of the masking policy used.
     */
    "maskingPolicyId": string;
    /**
     * The OCID of the target database masked.
     */
    "targetId": string;
    /**
     * The total number of unique sensitive types associated with the masked columns. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedSensitiveTypes": number;
    /**
     * The total number of unique schemas that contain the masked columns. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedSchemas": number;
    /**
     * The total number of unique objects (tables and editioning views) that contain the masked columns. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedObjects": number;
    /**
     * The total number of masked columns. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedColumns": number;
    /**
     * The total number of masked values. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedValues": number;
    /**
     * The date and time data masking started, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     */
    "timeMaskingStarted": Date;
    /**
     * The date and time data masking finished, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     */
    "timeMaskingFinished": Date;
    /**
     * The current state of the masking report.
     */
    "lifecycleState": model.MaskingLifecycleState;
    /**
     * The date and time the masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     *
     */
    "timeCreated"?: Date;
    /**
     * Indicates if the temporary tables created during the masking operation were dropped after masking.
     *
     */
    "isDropTempTablesEnabled"?: boolean;
    /**
     * Indicates if redo logging was enabled during the masking operation.
     *
     */
    "isRedoLoggingEnabled"?: boolean;
    /**
     * Indicates if statistics gathering was enabled during the masking operation.
     *
     */
    "isRefreshStatsEnabled"?: boolean;
    /**
     * Indicates if parallel execution was enabled during the masking operation.
     *
     */
    "parallelDegree"?: string;
    /**
     * Indicates how invalid objects were recompiled post the masking operation.
     *
     */
    "recompile"?: string;
    /**
     * The status of the masking job.
     */
    "maskingStatus": MaskingReportSummary.MaskingStatus;
    /**
     * The total number of errors in pre-masking script. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalPreMaskingScriptErrors"?: number;
    /**
     * The total number of errors in post-masking script. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalPostMaskingScriptErrors"?: number;
}
export declare namespace MaskingReportSummary {
    enum MaskingStatus {
        Failed = "FAILED",
        Success = "SUCCESS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: MaskingReportSummary): object;
    function getDeserializedJsonObj(obj: MaskingReportSummary): object;
}
