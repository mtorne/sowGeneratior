/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The Regular Expression masking format gives the flexibility to use regular
 * expressions to search for sensitive data in a column of Large Object data
 * type (LOB), and replace the data with a fixed string, fixed number, null
 * value, or SQL expression. It can also be used for columns of VARCHAR2 type
 * to mask parts of strings. To learn more, check Regular Expressions in the
 * Data Safe documentation.
 *
 */
export interface RegularExpressionFormatEntry extends model.FormatEntry {
    /**
     * The pattern that should be used to search for data.
     */
    "regularExpression": string;
    /**
     * The value that should be used to replace the data matching the regular
     * expression. It can be a fixed string, fixed number or null value.
     *
     */
    "replaceWith": string;
    "type": string;
}
export declare namespace RegularExpressionFormatEntry {
    function getJsonObj(obj: RegularExpressionFormatEntry, isParentJsonObj?: boolean): object;
    const type = "REGULAR_EXPRESSION";
    function getDeserializedJsonObj(obj: RegularExpressionFormatEntry, isParentJsonObj?: boolean): object;
}
