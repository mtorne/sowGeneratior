"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DifferenceColumn = void 0;
var DifferenceColumn;
(function (DifferenceColumn) {
    let DifferenceType;
    (function (DifferenceType) {
        DifferenceType["New"] = "NEW";
        DifferenceType["Modified"] = "MODIFIED";
        DifferenceType["Deleted"] = "DELETED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DifferenceType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DifferenceType = DifferenceColumn.DifferenceType || (DifferenceColumn.DifferenceType = {}));
    let PlannedAction;
    (function (PlannedAction) {
        PlannedAction["Sync"] = "SYNC";
        PlannedAction["NoSync"] = "NO_SYNC";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PlannedAction["UnknownValue"] = "UNKNOWN_VALUE";
    })(PlannedAction = DifferenceColumn.PlannedAction || (DifferenceColumn.PlannedAction = {}));
    let SyncStatus;
    (function (SyncStatus) {
        SyncStatus["Synced"] = "SYNCED";
        SyncStatus["NotSynced"] = "NOT_SYNCED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        SyncStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(SyncStatus = DifferenceColumn.SyncStatus || (DifferenceColumn.SyncStatus = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DifferenceColumn.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DifferenceColumn.getDeserializedJsonObj = getDeserializedJsonObj;
})(DifferenceColumn = exports.DifferenceColumn || (exports.DifferenceColumn = {}));
//# sourceMappingURL=difference-column.js.map