"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrantSummary = void 0;
var GrantSummary;
(function (GrantSummary) {
    let PrivilegeType;
    (function (PrivilegeType) {
        PrivilegeType["SystemPrivilege"] = "SYSTEM_PRIVILEGE";
        PrivilegeType["ObjectPrivilege"] = "OBJECT_PRIVILEGE";
        PrivilegeType["AdminPrivilege"] = "ADMIN_PRIVILEGE";
        PrivilegeType["Role"] = "ROLE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PrivilegeType["UnknownValue"] = "UNKNOWN_VALUE";
    })(PrivilegeType = GrantSummary.PrivilegeType || (GrantSummary.PrivilegeType = {}));
    let PrivilegeCategory;
    (function (PrivilegeCategory) {
        PrivilegeCategory["Critical"] = "CRITICAL";
        PrivilegeCategory["High"] = "HIGH";
        PrivilegeCategory["Medium"] = "MEDIUM";
        PrivilegeCategory["Low"] = "LOW";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PrivilegeCategory["UnknownValue"] = "UNKNOWN_VALUE";
    })(PrivilegeCategory = GrantSummary.PrivilegeCategory || (GrantSummary.PrivilegeCategory = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    GrantSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    GrantSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(GrantSummary = exports.GrantSummary || (exports.GrantSummary = {}));
//# sourceMappingURL=grant-summary.js.map