"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnFilter = void 0;
var ColumnFilter;
(function (ColumnFilter) {
    let Operator;
    (function (Operator) {
        Operator["In"] = "IN";
        Operator["Eq"] = "EQ";
        Operator["EqCs"] = "EQ_CS";
        Operator["Gt"] = "GT";
        Operator["Ge"] = "GE";
        Operator["Lt"] = "LT";
        Operator["Le"] = "LE";
        Operator["And"] = "AND";
        Operator["Or"] = "OR";
        Operator["Ne"] = "NE";
        Operator["Co"] = "CO";
        Operator["CoCs"] = "CO_CS";
        Operator["Not"] = "NOT";
        Operator["NotIn"] = "NOT_IN";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Operator["UnknownValue"] = "UNKNOWN_VALUE";
    })(Operator = ColumnFilter.Operator || (ColumnFilter.Operator = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ColumnFilter.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ColumnFilter.getDeserializedJsonObj = getDeserializedJsonObj;
})(ColumnFilter = exports.ColumnFilter || (exports.ColumnFilter = {}));
//# sourceMappingURL=column-filter.js.map