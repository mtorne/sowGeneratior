/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
* The Random Substitution masking format uses the specified substitution column
* as the source of masked values. The values in the substitution column are randomly
* ordered before mapping them to the original column values. As a masking operation
* renames tables temporarily, the substitution column must be in a table that has
* no masking column. Also, you may want to ensure that the substitution column has
* sufficient values to uniquely mask the target column.
* <p>
Unlike Deterministic Substitution, Random Substitution doesn't do deterministic
* masking, and thus, doesn't require a seed value. To learn more, check Random
* Substitution in the Data Safe documentation.
*
*/
export interface RandomSubstitutionFormatEntry extends model.FormatEntry {
    /**
     * The name of the schema that contains the substitution column.
     */
    "schemaName": string;
    /**
     * The name of the table that contains the substitution column.
     */
    "tableName": string;
    /**
     * The name of the substitution column.
     */
    "columnName": string;
    "type": string;
}
export declare namespace RandomSubstitutionFormatEntry {
    function getJsonObj(obj: RandomSubstitutionFormatEntry, isParentJsonObj?: boolean): object;
    const type = "RANDOM_SUBSTITUTION";
    function getDeserializedJsonObj(obj: RandomSubstitutionFormatEntry, isParentJsonObj?: boolean): object;
}
