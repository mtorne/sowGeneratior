/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of a masked column. A masked column is a database column masked by a data masking request.
 */
export interface MaskedColumnSummary {
    /**
     * The unique key that identifies the masked column. It's numeric and unique within a masking policy.
     */
    "key": string;
    /**
     * The unique key that identifies the parent column of the masked column.
     */
    "parentColumnKey"?: string;
    /**
     * The OCID of the sensitive type associated with the masked column.
     */
    "sensitiveTypeId"?: string;
    /**
     * The name of the schema that contains the masked column.
     */
    "schemaName": string;
    /**
     * The name of the object (table or editioning view) that contains the masked column.
     */
    "objectName": string;
    /**
     * The type of the object (table or editioning view) that contains the masked column.
     */
    "objectType": model.ObjectType;
    /**
     * The name of the masked column.
     */
    "columnName": string;
    /**
     * The masking group of the masked column.
     */
    "maskingColumnGroup"?: string;
    /**
     * The masking format used for masking the column.
     */
    "maskingFormatUsed": string;
    /**
     * The total number of values masked in the column. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMaskedValues": number;
}
export declare namespace MaskedColumnSummary {
    function getJsonObj(obj: MaskedColumnSummary): object;
    function getDeserializedJsonObj(obj: MaskedColumnSummary): object;
}
