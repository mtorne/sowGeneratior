/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The resource represents the SQL violations collected from the target database by Oracle Data Safe.
 */
export interface SqlFirewallViolationSummary {
    /**
     * The OCID of the SQL violation.
     */
    "id": string;
    /**
     * The OCID of the compartment containing the SQL violation.
     */
    "compartmentId": string;
    /**
     * The name of the database user.
     */
    "dbUserName"?: string;
    /**
     * The OCID of the target database.
     */
    "targetId": string;
    /**
     * The name of the target database.
     */
    "targetName": string;
    /**
     * The time of the SQL violation occurrence in the target database.
     */
    "operationTime": Date;
    /**
     * The timestamp when this SQL violation was collected from the target database by Data Safe.
     */
    "timeCollected": Date;
    /**
     * The name of the operating system user for the database session.
     */
    "clientOsUserName"?: string;
    /**
     * The name of the action executed by the user on the target database. For example, ALTER, CREATE, DROP.
     */
    "operation"?: string;
    /**
     * The SQL text caught by the firewall.
     */
    "sqlText"?: string;
    /**
     * The objects accessed by the SQL.
     */
    "sqlAccessedObjects"?: string;
    /**
     * The name of the user that SQL was executed as.
     */
    "currentDbUserName"?: string;
    /**
     * Specifies the level of SQL for this violation.
     * USER_ISSUED_SQL - User issued SQL statements only.
     * ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     *
     */
    "sqlLevel"?: SqlFirewallViolationSummary.SqlLevel;
    /**
     * The IP address of the host machine from which the session was generated.
     */
    "clientIp"?: string;
    /**
     * The application from which the SQL violation was generated. Examples include SQL Plus or SQL Developer.
     */
    "clientProgram"?: string;
    /**
     * Indicates whether SQL or context violation.
     */
    "violationCause"?: string;
    /**
     * The action taken for this SQL violation.
     */
    "violationAction": SqlFirewallViolationSummary.ViolationAction;
}
export declare namespace SqlFirewallViolationSummary {
    enum SqlLevel {
        UserIssuedSql = "USER_ISSUED_SQL",
        AllSql = "ALL_SQL",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ViolationAction {
        Blocked = "BLOCKED",
        Allowed = "ALLOWED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SqlFirewallViolationSummary): object;
    function getDeserializedJsonObj(obj: SqlFirewallViolationSummary): object;
}
