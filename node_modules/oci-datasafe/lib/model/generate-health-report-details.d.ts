/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Details to use when performing health check on a masking policy.
 */
export interface GenerateHealthReportDetails {
    /**
     * The type of health check. The default behaviour is to perform all health checks.
     *
     */
    "checkType"?: GenerateHealthReportDetails.CheckType;
    /**
     * The OCID of the target database to use for the masking policy
     * health check. The targetId associated with the masking policy
     * is used if this is not passed.
     *
     */
    "targetId"?: string;
    /**
     * The OCID of the compartment where the health report resource should be created.
     */
    "compartmentId"?: string;
    /**
     * The tablespace that should be used to estimate space.
     * If no tablespace is provided, the DEFAULT tablespace is used.
     *
     */
    "tablespace"?: string;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
  * <p>
  Example: {@code {\"Department\": \"Finance\"}}
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace GenerateHealthReportDetails {
    enum CheckType {
        All = "ALL"
    }
    function getJsonObj(obj: GenerateHealthReportDetails): object;
    function getDeserializedJsonObj(obj: GenerateHealthReportDetails): object;
}
