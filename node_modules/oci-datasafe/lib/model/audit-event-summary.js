"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditEventSummary = void 0;
var AuditEventSummary;
(function (AuditEventSummary) {
    let DatabaseType;
    (function (DatabaseType) {
        DatabaseType["DatabaseCloudService"] = "DATABASE_CLOUD_SERVICE";
        DatabaseType["AutonomousDatabase"] = "AUTONOMOUS_DATABASE";
        DatabaseType["InstalledDatabase"] = "INSTALLED_DATABASE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseType = AuditEventSummary.DatabaseType || (AuditEventSummary.DatabaseType = {}));
    let TargetClass;
    (function (TargetClass) {
        TargetClass["Database"] = "DATABASE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TargetClass["UnknownValue"] = "UNKNOWN_VALUE";
    })(TargetClass = AuditEventSummary.TargetClass || (AuditEventSummary.TargetClass = {}));
    let OperationStatus;
    (function (OperationStatus) {
        OperationStatus["Success"] = "SUCCESS";
        OperationStatus["Failure"] = "FAILURE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OperationStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(OperationStatus = AuditEventSummary.OperationStatus || (AuditEventSummary.OperationStatus = {}));
    let AuditLocation;
    (function (AuditLocation) {
        AuditLocation["AuditTable"] = "AUDIT_TABLE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AuditLocation["UnknownValue"] = "UNKNOWN_VALUE";
    })(AuditLocation = AuditEventSummary.AuditLocation || (AuditEventSummary.AuditLocation = {}));
    let AuditType;
    (function (AuditType) {
        AuditType["Standard"] = "STANDARD";
        AuditType["FineGrained"] = "FINE_GRAINED";
        AuditType["Xs"] = "XS";
        AuditType["DatabaseVault"] = "DATABASE_VAULT";
        AuditType["LabelSecurity"] = "LABEL_SECURITY";
        AuditType["Rman"] = "RMAN";
        AuditType["Datapump"] = "DATAPUMP";
        AuditType["DirectPathApi"] = "DIRECT_PATH_API";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AuditType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AuditType = AuditEventSummary.AuditType || (AuditEventSummary.AuditType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AuditEventSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AuditEventSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(AuditEventSummary = exports.AuditEventSummary || (exports.AuditEventSummary = {}));
//# sourceMappingURL=audit-event-summary.js.map