"use strict";
/**
 * Oracle Delegate Access Control API
 * Oracle Delegate Access Control allows ExaCC and ExaCS customers to delegate management of their Exadata resources operators outside their tenancies.
With Delegate Access Control, Support Providers can deliver managed services using comprehensive and robust tooling built on the OCI platform.
Customers maintain control over who has access to the delegated resources in their tenancy and what actions can be taken.
Enterprises managing resources across multiple tenants can use Delegate Access Control to streamline management tasks.
Using logging service, customers can view a near real-time audit report of all actions performed by a Service Provider operator.

 * OpenAPI spec version: 20230801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListWorkRequestsRequest = exports.ListWorkRequestLogsRequest = exports.ListWorkRequestErrorsRequest = exports.ListServiceProvidersRequest = exports.ListServiceProviderActionsRequest = exports.ListDelegationSubscriptionsRequest = exports.ListDelegationControlsRequest = exports.ListDelegatedResourceAccessRequestsRequest = exports.ListDelegatedResourceAccessRequestHistoriesRequest = void 0;
const ListDelegatedResourceAccessRequestHistoriesRequest = __importStar(require("./list-delegated-resource-access-request-histories-request"));
exports.ListDelegatedResourceAccessRequestHistoriesRequest = ListDelegatedResourceAccessRequestHistoriesRequest.ListDelegatedResourceAccessRequestHistoriesRequest;
const ListDelegatedResourceAccessRequestsRequest = __importStar(require("./list-delegated-resource-access-requests-request"));
exports.ListDelegatedResourceAccessRequestsRequest = ListDelegatedResourceAccessRequestsRequest.ListDelegatedResourceAccessRequestsRequest;
const ListDelegationControlsRequest = __importStar(require("./list-delegation-controls-request"));
exports.ListDelegationControlsRequest = ListDelegationControlsRequest.ListDelegationControlsRequest;
const ListDelegationSubscriptionsRequest = __importStar(require("./list-delegation-subscriptions-request"));
exports.ListDelegationSubscriptionsRequest = ListDelegationSubscriptionsRequest.ListDelegationSubscriptionsRequest;
const ListServiceProviderActionsRequest = __importStar(require("./list-service-provider-actions-request"));
exports.ListServiceProviderActionsRequest = ListServiceProviderActionsRequest.ListServiceProviderActionsRequest;
const ListServiceProvidersRequest = __importStar(require("./list-service-providers-request"));
exports.ListServiceProvidersRequest = ListServiceProvidersRequest.ListServiceProvidersRequest;
const ListWorkRequestErrorsRequest = __importStar(require("./list-work-request-errors-request"));
exports.ListWorkRequestErrorsRequest = ListWorkRequestErrorsRequest.ListWorkRequestErrorsRequest;
const ListWorkRequestLogsRequest = __importStar(require("./list-work-request-logs-request"));
exports.ListWorkRequestLogsRequest = ListWorkRequestLogsRequest.ListWorkRequestLogsRequest;
const ListWorkRequestsRequest = __importStar(require("./list-work-requests-request"));
exports.ListWorkRequestsRequest = ListWorkRequestsRequest.ListWorkRequestsRequest;
//# sourceMappingURL=index.js.map