/**
 * Anomaly Detection API
 * OCI AI Service solutions can help Enterprise customers integrate AI into their products immediately by using our proven,
pre-trained/custom models or containers, and without a need to set up in house team of AI and ML experts.
This allows enterprises to focus on business drivers and development work rather than AI/ML operations, shortening the time to market.

 * OpenAPI spec version: 20210101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * An object to hold detection result for one timestamp/row.
 */
export interface DetectionResultItem {
    /**
     * The time stamp associated with a list of anomaly points, format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    "timestamp"?: Date;
    /**
     * The index number to indicate where anomaly points are located among all rows when there are no timestamps provided. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "rowIndex"?: number;
    /**
     * A significant score across multiple signals at timestamp/row level Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "score"?: number;
    /**
     * An array of anomalies associated with a given timestamp/row.
     */
    "anomalies": Array<model.Anomaly>;
}
export declare namespace DetectionResultItem {
    function getJsonObj(obj: DetectionResultItem): object;
    function getDeserializedJsonObj(obj: DetectionResultItem): object;
}
