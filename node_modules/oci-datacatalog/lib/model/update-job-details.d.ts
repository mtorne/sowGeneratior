/**
 * Data Catalog API
 * Use the Data Catalog APIs to collect, organize, find, access, understand, enrich, and activate technical, business, and operational metadata.
For more information, see [Data Catalog](https://docs.oracle.com/iaas/data-catalog/home.htm).

 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Job properties that can be updated.
 */
export interface UpdateJobDetails {
    /**
     * A user-friendly display name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
     * Detailed description of the job.
     */
    "description"?: string;
    /**
     * Interval on which the job will be run. Value is specified as a cron-supported time specification \"nickname\".
     * The following subset of those is supported: @monthly, @weekly, @daily, @hourly.
     * For metastore sync, an additional option @default is supported, which will schedule jobs at a more granular frequency.
     *
     */
    "scheduleCronExpression"?: string;
    /**
     * Date that the schedule should be operational. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    "timeScheduleBegin"?: Date;
    /**
     * Date that the schedule should end from being operational. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    "timeScheduleEnd"?: Date;
    /**
     * The key of the connection resource that is used for the harvest by this job.
     */
    "connectionKey"?: string;
}
export declare namespace UpdateJobDetails {
    function getJsonObj(obj: UpdateJobDetails): object;
    function getDeserializedJsonObj(obj: UpdateJobDetails): object;
}
