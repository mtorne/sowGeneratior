"use strict";
/**
 * Data Labeling Management API
 * Use Data Labeling Management API to create, list, edit & delete datasets.
 * OpenAPI spec version: 20211001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextDatasetFormatDetails = exports.ObjectStorageSourceDetails = exports.ObjectStorageSnapshotExportDetails = exports.ObjectStorageImportMetadataPath = exports.ImageDatasetFormatDetails = exports.DocumentDatasetFormatDetails = exports.DelimitedFileTypeMetadata = exports.WorkRequestSummaryCollection = exports.WorkRequestSummary = exports.WorkRequestResourceMetadataKey = exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequest = exports.UpdateDatasetDetails = exports.TextFileTypeMetadata = exports.SortOrder = exports.SnapshotExportDetails = exports.SnapshotDatasetDetails = exports.RenameDatasetLabelsDetails = exports.RemoveDatasetLabelsDetails = exports.OperationType = exports.OperationStatus = exports.LabelSet = exports.Label = exports.InitialRecordGenerationConfiguration = exports.InitialImportDatasetConfiguration = exports.ImportPreAnnotatedDataDetails = exports.ImportMetadataPath = exports.ImportFormat = exports.GenerateDatasetRecordsDetails = exports.ExportFormat = exports.DatasetSummary = exports.DatasetSourceDetails = exports.DatasetFormatDetails = exports.DatasetCollection = exports.Dataset = exports.CreateDatasetDetails = exports.ChangeDatasetCompartmentDetails = exports.AnnotationFormatSummary = exports.AnnotationFormatCollection = exports.AnnotationFormat = exports.AddDatasetLabelsDetails = exports.ActionType = void 0;
const ActionType = __importStar(require("./action-type"));
exports.ActionType = ActionType.ActionType;
const AddDatasetLabelsDetails = __importStar(require("./add-dataset-labels-details"));
exports.AddDatasetLabelsDetails = AddDatasetLabelsDetails.AddDatasetLabelsDetails;
const AnnotationFormat = __importStar(require("./annotation-format"));
exports.AnnotationFormat = AnnotationFormat.AnnotationFormat;
const AnnotationFormatCollection = __importStar(require("./annotation-format-collection"));
exports.AnnotationFormatCollection = AnnotationFormatCollection.AnnotationFormatCollection;
const AnnotationFormatSummary = __importStar(require("./annotation-format-summary"));
exports.AnnotationFormatSummary = AnnotationFormatSummary.AnnotationFormatSummary;
const ChangeDatasetCompartmentDetails = __importStar(require("./change-dataset-compartment-details"));
exports.ChangeDatasetCompartmentDetails = ChangeDatasetCompartmentDetails.ChangeDatasetCompartmentDetails;
const CreateDatasetDetails = __importStar(require("./create-dataset-details"));
exports.CreateDatasetDetails = CreateDatasetDetails.CreateDatasetDetails;
const Dataset = __importStar(require("./dataset"));
exports.Dataset = Dataset.Dataset;
const DatasetCollection = __importStar(require("./dataset-collection"));
exports.DatasetCollection = DatasetCollection.DatasetCollection;
const DatasetFormatDetails = __importStar(require("./dataset-format-details"));
exports.DatasetFormatDetails = DatasetFormatDetails.DatasetFormatDetails;
const DatasetSourceDetails = __importStar(require("./dataset-source-details"));
exports.DatasetSourceDetails = DatasetSourceDetails.DatasetSourceDetails;
const DatasetSummary = __importStar(require("./dataset-summary"));
exports.DatasetSummary = DatasetSummary.DatasetSummary;
const ExportFormat = __importStar(require("./export-format"));
exports.ExportFormat = ExportFormat.ExportFormat;
const GenerateDatasetRecordsDetails = __importStar(require("./generate-dataset-records-details"));
exports.GenerateDatasetRecordsDetails = GenerateDatasetRecordsDetails.GenerateDatasetRecordsDetails;
const ImportFormat = __importStar(require("./import-format"));
exports.ImportFormat = ImportFormat.ImportFormat;
const ImportMetadataPath = __importStar(require("./import-metadata-path"));
exports.ImportMetadataPath = ImportMetadataPath.ImportMetadataPath;
const ImportPreAnnotatedDataDetails = __importStar(require("./import-pre-annotated-data-details"));
exports.ImportPreAnnotatedDataDetails = ImportPreAnnotatedDataDetails.ImportPreAnnotatedDataDetails;
const InitialImportDatasetConfiguration = __importStar(require("./initial-import-dataset-configuration"));
exports.InitialImportDatasetConfiguration = InitialImportDatasetConfiguration.InitialImportDatasetConfiguration;
const InitialRecordGenerationConfiguration = __importStar(require("./initial-record-generation-configuration"));
exports.InitialRecordGenerationConfiguration = InitialRecordGenerationConfiguration.InitialRecordGenerationConfiguration;
const Label = __importStar(require("./label"));
exports.Label = Label.Label;
const LabelSet = __importStar(require("./label-set"));
exports.LabelSet = LabelSet.LabelSet;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationType = __importStar(require("./operation-type"));
exports.OperationType = OperationType.OperationType;
const RemoveDatasetLabelsDetails = __importStar(require("./remove-dataset-labels-details"));
exports.RemoveDatasetLabelsDetails = RemoveDatasetLabelsDetails.RemoveDatasetLabelsDetails;
const RenameDatasetLabelsDetails = __importStar(require("./rename-dataset-labels-details"));
exports.RenameDatasetLabelsDetails = RenameDatasetLabelsDetails.RenameDatasetLabelsDetails;
const SnapshotDatasetDetails = __importStar(require("./snapshot-dataset-details"));
exports.SnapshotDatasetDetails = SnapshotDatasetDetails.SnapshotDatasetDetails;
const SnapshotExportDetails = __importStar(require("./snapshot-export-details"));
exports.SnapshotExportDetails = SnapshotExportDetails.SnapshotExportDetails;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const TextFileTypeMetadata = __importStar(require("./text-file-type-metadata"));
exports.TextFileTypeMetadata = TextFileTypeMetadata.TextFileTypeMetadata;
const UpdateDatasetDetails = __importStar(require("./update-dataset-details"));
exports.UpdateDatasetDetails = UpdateDatasetDetails.UpdateDatasetDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestResourceMetadataKey = __importStar(require("./work-request-resource-metadata-key"));
exports.WorkRequestResourceMetadataKey = WorkRequestResourceMetadataKey.WorkRequestResourceMetadataKey;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const WorkRequestSummaryCollection = __importStar(require("./work-request-summary-collection"));
exports.WorkRequestSummaryCollection = WorkRequestSummaryCollection.WorkRequestSummaryCollection;
const DelimitedFileTypeMetadata = __importStar(require("./delimited-file-type-metadata"));
exports.DelimitedFileTypeMetadata = DelimitedFileTypeMetadata.DelimitedFileTypeMetadata;
const DocumentDatasetFormatDetails = __importStar(require("./document-dataset-format-details"));
exports.DocumentDatasetFormatDetails = DocumentDatasetFormatDetails.DocumentDatasetFormatDetails;
const ImageDatasetFormatDetails = __importStar(require("./image-dataset-format-details"));
exports.ImageDatasetFormatDetails = ImageDatasetFormatDetails.ImageDatasetFormatDetails;
const ObjectStorageImportMetadataPath = __importStar(require("./object-storage-import-metadata-path"));
exports.ObjectStorageImportMetadataPath = ObjectStorageImportMetadataPath.ObjectStorageImportMetadataPath;
const ObjectStorageSnapshotExportDetails = __importStar(require("./object-storage-snapshot-export-details"));
exports.ObjectStorageSnapshotExportDetails = ObjectStorageSnapshotExportDetails.ObjectStorageSnapshotExportDetails;
const ObjectStorageSourceDetails = __importStar(require("./object-storage-source-details"));
exports.ObjectStorageSourceDetails = ObjectStorageSourceDetails.ObjectStorageSourceDetails;
const TextDatasetFormatDetails = __importStar(require("./text-dataset-format-details"));
exports.TextDatasetFormatDetails = TextDatasetFormatDetails.TextDatasetFormatDetails;
//# sourceMappingURL=index.js.map