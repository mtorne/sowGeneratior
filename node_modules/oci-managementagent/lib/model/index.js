"use strict";
/**
 * Management Agent API
 * Use the Management Agent API to manage your infrastructure's management agents, including their plugins and install keys.
For more information, see [Management Agent](https://docs.oracle.com/iaas/management-agents/index.html).

 * OpenAPI spec version: 20200202
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestResource = exports.WorkRequestLogEntry = exports.WorkRequestError = exports.WorkRequest = exports.WorkDeliveryStatus = exports.UpdateManagementAgentInstallKeyDetails = exports.UpdateManagementAgentDetails = exports.UpdateDataSourceDetails = exports.SetAutoUpgradableConfigDetails = exports.PropertyUnits = exports.PluginStatus = exports.PlatformTypes = exports.PackageTypes = exports.OperationTypes = exports.OperationStatus = exports.ObjectDetails = exports.MetricDimension = exports.ManagementAgentSummary = exports.ManagementAgentProperty = exports.ManagementAgentPluginSummary = exports.ManagementAgentPluginGroupBy = exports.ManagementAgentPluginDetails = exports.ManagementAgentPluginAggregationDimensions = exports.ManagementAgentPluginAggregationCollection = exports.ManagementAgentPluginAggregation = exports.ManagementAgentPlugin = exports.ManagementAgentInstallKeySummary = exports.ManagementAgentInstallKey = exports.ManagementAgentImageSummary = exports.ManagementAgentImage = exports.ManagementAgentGroupBy = exports.ManagementAgentError = exports.ManagementAgentAggregationDimensions = exports.ManagementAgentAggregationCollection = exports.ManagementAgentAggregation = exports.ManagementAgent = exports.LifecycleStates = exports.InstallTypes = exports.DeployPluginsDetails = exports.DataSourceTypes = exports.DataSourceSummaryItem = exports.DataSourceSummary = exports.DataSource = exports.CreateManagementAgentInstallKeyDetails = exports.CreateDataSourceDetails = exports.AvailabilityStatus = exports.AvailabilityHistorySummary = exports.AutoUpgradableConfig = exports.ArchitectureTypes = exports.ActionTypes = void 0;
exports.UpdatePrometheusEmitterDataSourceDetails = exports.PrometheusEmitterDataSourceSummaryItem = exports.PrometheusEmitterDataSourceSummary = exports.PrometheusEmitterDataSource = exports.KubernetesClusterDataSourceSummaryItem = exports.KubernetesClusterDataSourceSummary = exports.KubernetesClusterDataSource = exports.CreatePrometheusEmitterDataSourceDetails = exports.WorkSubmissionKey = exports.WorkRequestSummary = void 0;
const ActionTypes = __importStar(require("./action-types"));
exports.ActionTypes = ActionTypes.ActionTypes;
const ArchitectureTypes = __importStar(require("./architecture-types"));
exports.ArchitectureTypes = ArchitectureTypes.ArchitectureTypes;
const AutoUpgradableConfig = __importStar(require("./auto-upgradable-config"));
exports.AutoUpgradableConfig = AutoUpgradableConfig.AutoUpgradableConfig;
const AvailabilityHistorySummary = __importStar(require("./availability-history-summary"));
exports.AvailabilityHistorySummary = AvailabilityHistorySummary.AvailabilityHistorySummary;
const AvailabilityStatus = __importStar(require("./availability-status"));
exports.AvailabilityStatus = AvailabilityStatus.AvailabilityStatus;
const CreateDataSourceDetails = __importStar(require("./create-data-source-details"));
exports.CreateDataSourceDetails = CreateDataSourceDetails.CreateDataSourceDetails;
const CreateManagementAgentInstallKeyDetails = __importStar(require("./create-management-agent-install-key-details"));
exports.CreateManagementAgentInstallKeyDetails = CreateManagementAgentInstallKeyDetails.CreateManagementAgentInstallKeyDetails;
const DataSource = __importStar(require("./data-source"));
exports.DataSource = DataSource.DataSource;
const DataSourceSummary = __importStar(require("./data-source-summary"));
exports.DataSourceSummary = DataSourceSummary.DataSourceSummary;
const DataSourceSummaryItem = __importStar(require("./data-source-summary-item"));
exports.DataSourceSummaryItem = DataSourceSummaryItem.DataSourceSummaryItem;
const DataSourceTypes = __importStar(require("./data-source-types"));
exports.DataSourceTypes = DataSourceTypes.DataSourceTypes;
const DeployPluginsDetails = __importStar(require("./deploy-plugins-details"));
exports.DeployPluginsDetails = DeployPluginsDetails.DeployPluginsDetails;
const InstallTypes = __importStar(require("./install-types"));
exports.InstallTypes = InstallTypes.InstallTypes;
const LifecycleStates = __importStar(require("./lifecycle-states"));
exports.LifecycleStates = LifecycleStates.LifecycleStates;
const ManagementAgent = __importStar(require("./management-agent"));
exports.ManagementAgent = ManagementAgent.ManagementAgent;
const ManagementAgentAggregation = __importStar(require("./management-agent-aggregation"));
exports.ManagementAgentAggregation = ManagementAgentAggregation.ManagementAgentAggregation;
const ManagementAgentAggregationCollection = __importStar(require("./management-agent-aggregation-collection"));
exports.ManagementAgentAggregationCollection = ManagementAgentAggregationCollection.ManagementAgentAggregationCollection;
const ManagementAgentAggregationDimensions = __importStar(require("./management-agent-aggregation-dimensions"));
exports.ManagementAgentAggregationDimensions = ManagementAgentAggregationDimensions.ManagementAgentAggregationDimensions;
const ManagementAgentError = __importStar(require("./management-agent-error"));
exports.ManagementAgentError = ManagementAgentError.ManagementAgentError;
const ManagementAgentGroupBy = __importStar(require("./management-agent-group-by"));
exports.ManagementAgentGroupBy = ManagementAgentGroupBy.ManagementAgentGroupBy;
const ManagementAgentImage = __importStar(require("./management-agent-image"));
exports.ManagementAgentImage = ManagementAgentImage.ManagementAgentImage;
const ManagementAgentImageSummary = __importStar(require("./management-agent-image-summary"));
exports.ManagementAgentImageSummary = ManagementAgentImageSummary.ManagementAgentImageSummary;
const ManagementAgentInstallKey = __importStar(require("./management-agent-install-key"));
exports.ManagementAgentInstallKey = ManagementAgentInstallKey.ManagementAgentInstallKey;
const ManagementAgentInstallKeySummary = __importStar(require("./management-agent-install-key-summary"));
exports.ManagementAgentInstallKeySummary = ManagementAgentInstallKeySummary.ManagementAgentInstallKeySummary;
const ManagementAgentPlugin = __importStar(require("./management-agent-plugin"));
exports.ManagementAgentPlugin = ManagementAgentPlugin.ManagementAgentPlugin;
const ManagementAgentPluginAggregation = __importStar(require("./management-agent-plugin-aggregation"));
exports.ManagementAgentPluginAggregation = ManagementAgentPluginAggregation.ManagementAgentPluginAggregation;
const ManagementAgentPluginAggregationCollection = __importStar(require("./management-agent-plugin-aggregation-collection"));
exports.ManagementAgentPluginAggregationCollection = ManagementAgentPluginAggregationCollection.ManagementAgentPluginAggregationCollection;
const ManagementAgentPluginAggregationDimensions = __importStar(require("./management-agent-plugin-aggregation-dimensions"));
exports.ManagementAgentPluginAggregationDimensions = ManagementAgentPluginAggregationDimensions.ManagementAgentPluginAggregationDimensions;
const ManagementAgentPluginDetails = __importStar(require("./management-agent-plugin-details"));
exports.ManagementAgentPluginDetails = ManagementAgentPluginDetails.ManagementAgentPluginDetails;
const ManagementAgentPluginGroupBy = __importStar(require("./management-agent-plugin-group-by"));
exports.ManagementAgentPluginGroupBy = ManagementAgentPluginGroupBy.ManagementAgentPluginGroupBy;
const ManagementAgentPluginSummary = __importStar(require("./management-agent-plugin-summary"));
exports.ManagementAgentPluginSummary = ManagementAgentPluginSummary.ManagementAgentPluginSummary;
const ManagementAgentProperty = __importStar(require("./management-agent-property"));
exports.ManagementAgentProperty = ManagementAgentProperty.ManagementAgentProperty;
const ManagementAgentSummary = __importStar(require("./management-agent-summary"));
exports.ManagementAgentSummary = ManagementAgentSummary.ManagementAgentSummary;
const MetricDimension = __importStar(require("./metric-dimension"));
exports.MetricDimension = MetricDimension.MetricDimension;
const ObjectDetails = __importStar(require("./object-details"));
exports.ObjectDetails = ObjectDetails.ObjectDetails;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationTypes = __importStar(require("./operation-types"));
exports.OperationTypes = OperationTypes.OperationTypes;
const PackageTypes = __importStar(require("./package-types"));
exports.PackageTypes = PackageTypes.PackageTypes;
const PlatformTypes = __importStar(require("./platform-types"));
exports.PlatformTypes = PlatformTypes.PlatformTypes;
const PluginStatus = __importStar(require("./plugin-status"));
exports.PluginStatus = PluginStatus.PluginStatus;
const PropertyUnits = __importStar(require("./property-units"));
exports.PropertyUnits = PropertyUnits.PropertyUnits;
const SetAutoUpgradableConfigDetails = __importStar(require("./set-auto-upgradable-config-details"));
exports.SetAutoUpgradableConfigDetails = SetAutoUpgradableConfigDetails.SetAutoUpgradableConfigDetails;
const UpdateDataSourceDetails = __importStar(require("./update-data-source-details"));
exports.UpdateDataSourceDetails = UpdateDataSourceDetails.UpdateDataSourceDetails;
const UpdateManagementAgentDetails = __importStar(require("./update-management-agent-details"));
exports.UpdateManagementAgentDetails = UpdateManagementAgentDetails.UpdateManagementAgentDetails;
const UpdateManagementAgentInstallKeyDetails = __importStar(require("./update-management-agent-install-key-details"));
exports.UpdateManagementAgentInstallKeyDetails = UpdateManagementAgentInstallKeyDetails.UpdateManagementAgentInstallKeyDetails;
const WorkDeliveryStatus = __importStar(require("./work-delivery-status"));
exports.WorkDeliveryStatus = WorkDeliveryStatus.WorkDeliveryStatus;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const WorkSubmissionKey = __importStar(require("./work-submission-key"));
exports.WorkSubmissionKey = WorkSubmissionKey.WorkSubmissionKey;
const CreatePrometheusEmitterDataSourceDetails = __importStar(require("./create-prometheus-emitter-data-source-details"));
exports.CreatePrometheusEmitterDataSourceDetails = CreatePrometheusEmitterDataSourceDetails.CreatePrometheusEmitterDataSourceDetails;
const KubernetesClusterDataSource = __importStar(require("./kubernetes-cluster-data-source"));
exports.KubernetesClusterDataSource = KubernetesClusterDataSource.KubernetesClusterDataSource;
const KubernetesClusterDataSourceSummary = __importStar(require("./kubernetes-cluster-data-source-summary"));
exports.KubernetesClusterDataSourceSummary = KubernetesClusterDataSourceSummary.KubernetesClusterDataSourceSummary;
const KubernetesClusterDataSourceSummaryItem = __importStar(require("./kubernetes-cluster-data-source-summary-item"));
exports.KubernetesClusterDataSourceSummaryItem = KubernetesClusterDataSourceSummaryItem.KubernetesClusterDataSourceSummaryItem;
const PrometheusEmitterDataSource = __importStar(require("./prometheus-emitter-data-source"));
exports.PrometheusEmitterDataSource = PrometheusEmitterDataSource.PrometheusEmitterDataSource;
const PrometheusEmitterDataSourceSummary = __importStar(require("./prometheus-emitter-data-source-summary"));
exports.PrometheusEmitterDataSourceSummary = PrometheusEmitterDataSourceSummary.PrometheusEmitterDataSourceSummary;
const PrometheusEmitterDataSourceSummaryItem = __importStar(require("./prometheus-emitter-data-source-summary-item"));
exports.PrometheusEmitterDataSourceSummaryItem = PrometheusEmitterDataSourceSummaryItem.PrometheusEmitterDataSourceSummaryItem;
const UpdatePrometheusEmitterDataSourceDetails = __importStar(require("./update-prometheus-emitter-data-source-details"));
exports.UpdatePrometheusEmitterDataSourceDetails = UpdatePrometheusEmitterDataSourceDetails.UpdatePrometheusEmitterDataSourceDetails;
//# sourceMappingURL=index.js.map