/**
 *
 *
 * OpenAPI spec version: 20200202
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListManagementAgentPlugins.ts.html |here} to see how to use ListManagementAgentPluginsRequest.
 */
export interface ListManagementAgentPluginsRequest extends common.BaseRequest {
    /**
     * The OCID of the compartment to which a request will be scoped.
     */
    "compartmentId": string;
    /**
     * Filter to return only Management Agent Plugins having the particular display name.
     */
    "displayName"?: string;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * The sort order to use, either 'asc' or 'desc'.
     */
    "sortOrder"?: ListManagementAgentPluginsRequest.SortOrder;
    /**
     * The field to sort by. Default order for displayName is ascending. If no value is specified displayName is default.
     *
     */
    "sortBy"?: ListManagementAgentPluginsRequest.SortBy;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     */
    "lifecycleState"?: model.LifecycleStates;
    /**
     * Filter to return only results having the particular platform type.
     */
    "platformType"?: Array<model.PlatformTypes>;
    /**
     * The ManagementAgentID of the agent from which the Management Agents to be filtered.
     */
    "agentId"?: string;
}
export declare namespace ListManagementAgentPluginsRequest {
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        DisplayName = "displayName"
    }
}
