/**
 * Management Agent API
 * Use the Management Agent API to manage your infrastructure's management agents, including their plugins and install keys.
For more information, see [Management Agent](https://docs.oracle.com/iaas/management-agents/index.html).

 * OpenAPI spec version: 20200202
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { ManagementAgentWaiter } from "./managementagent-waiter";
declare const Breaker: any;
export declare enum ManagementAgentApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagementAgentClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ManagementAgentWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ManagementAgentWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ManagementAgentWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ManagementAgentWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Datasource creation request to given Management Agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDataSourceRequest
     * @return CreateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/CreateDataSource.ts.html |here} to see how to use CreateDataSource API.
     */
    createDataSource(createDataSourceRequest: requests.CreateDataSourceRequest): Promise<responses.CreateDataSourceResponse>;
    /**
     * User creates a new install key as part of this API.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateManagementAgentInstallKeyRequest
     * @return CreateManagementAgentInstallKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/CreateManagementAgentInstallKey.ts.html |here} to see how to use CreateManagementAgentInstallKey API.
     */
    createManagementAgentInstallKey(createManagementAgentInstallKeyRequest: requests.CreateManagementAgentInstallKeyRequest): Promise<responses.CreateManagementAgentInstallKeyResponse>;
    /**
     * Datasource delete request to given Management Agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDataSourceRequest
     * @return DeleteDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/DeleteDataSource.ts.html |here} to see how to use DeleteDataSource API.
     */
    deleteDataSource(deleteDataSourceRequest: requests.DeleteDataSourceRequest): Promise<responses.DeleteDataSourceResponse>;
    /**
     * Deletes a Management Agent resource by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteManagementAgentRequest
     * @return DeleteManagementAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/DeleteManagementAgent.ts.html |here} to see how to use DeleteManagementAgent API.
     */
    deleteManagementAgent(deleteManagementAgentRequest: requests.DeleteManagementAgentRequest): Promise<responses.DeleteManagementAgentResponse>;
    /**
     * Deletes a Management Agent install Key resource by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteManagementAgentInstallKeyRequest
     * @return DeleteManagementAgentInstallKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/DeleteManagementAgentInstallKey.ts.html |here} to see how to use DeleteManagementAgentInstallKey API.
     */
    deleteManagementAgentInstallKey(deleteManagementAgentInstallKeyRequest: requests.DeleteManagementAgentInstallKeyRequest): Promise<responses.DeleteManagementAgentInstallKeyResponse>;
    /**
     * Cancel the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteWorkRequestRequest
     * @return DeleteWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/DeleteWorkRequest.ts.html |here} to see how to use DeleteWorkRequest API.
     */
    deleteWorkRequest(deleteWorkRequestRequest: requests.DeleteWorkRequestRequest): Promise<responses.DeleteWorkRequestResponse>;
    /**
     * Deploys Plugins to a given list of agentIds.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeployPluginsRequest
     * @return DeployPluginsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/DeployPlugins.ts.html |here} to see how to use DeployPlugins API.
     */
    deployPlugins(deployPluginsRequest: requests.DeployPluginsRequest): Promise<responses.DeployPluginsResponse>;
    /**
     * Get the AutoUpgradable configuration for all agents in a tenancy.
     * The supplied compartmentId must be a tenancy root.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAutoUpgradableConfigRequest
     * @return GetAutoUpgradableConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetAutoUpgradableConfig.ts.html |here} to see how to use GetAutoUpgradableConfig API.
     */
    getAutoUpgradableConfig(getAutoUpgradableConfigRequest: requests.GetAutoUpgradableConfigRequest): Promise<responses.GetAutoUpgradableConfigResponse>;
    /**
     * Get Datasource details for given Id and given Management Agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDataSourceRequest
     * @return GetDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetDataSource.ts.html |here} to see how to use GetDataSource API.
     */
    getDataSource(getDataSourceRequest: requests.GetDataSourceRequest): Promise<responses.GetDataSourceResponse>;
    /**
     * Gets complete details of the inventory of a given agent id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagementAgentRequest
     * @return GetManagementAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetManagementAgent.ts.html |here} to see how to use GetManagementAgent API.
     */
    getManagementAgent(getManagementAgentRequest: requests.GetManagementAgentRequest): Promise<responses.GetManagementAgentResponse>;
    /**
     * Gets complete details of the Agent install Key for a given key id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagementAgentInstallKeyRequest
     * @return GetManagementAgentInstallKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetManagementAgentInstallKey.ts.html |here} to see how to use GetManagementAgentInstallKey API.
     */
    getManagementAgentInstallKey(getManagementAgentInstallKeyRequest: requests.GetManagementAgentInstallKeyRequest): Promise<responses.GetManagementAgentInstallKeyResponse>;
    /**
     * Returns a file with Management Agent install Key in it
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagementAgentInstallKeyContentRequest
     * @return GetManagementAgentInstallKeyContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetManagementAgentInstallKeyContent.ts.html |here} to see how to use GetManagementAgentInstallKeyContent API.
     */
    getManagementAgentInstallKeyContent(getManagementAgentInstallKeyContentRequest: requests.GetManagementAgentInstallKeyContentRequest): Promise<responses.GetManagementAgentInstallKeyContentResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists the availability history records of Management Agent
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAvailabilityHistoriesRequest
     * @return ListAvailabilityHistoriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListAvailabilityHistories.ts.html |here} to see how to use ListAvailabilityHistories API.
     */
    listAvailabilityHistories(listAvailabilityHistoriesRequest: requests.ListAvailabilityHistoriesRequest): Promise<responses.ListAvailabilityHistoriesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAvailabilityHistoriesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AvailabilityHistorySummary objects
     * contained in responses from the listAvailabilityHistories operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailabilityHistories(request: requests.ListAvailabilityHistoriesRequest): AsyncIterableIterator<model.AvailabilityHistorySummary>;
    /**
     * NOTE: This function is deprecated in favor of listAvailabilityHistoriesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAvailabilityHistories operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailabilityHistoriesResponses(request: requests.ListAvailabilityHistoriesRequest): AsyncIterableIterator<responses.ListAvailabilityHistoriesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AvailabilityHistorySummary objects
     * contained in responses from the listAvailabilityHistories operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAvailabilityHistoriesRecordIterator(request: requests.ListAvailabilityHistoriesRequest): AsyncIterableIterator<model.AvailabilityHistorySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAvailabilityHistories operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAvailabilityHistoriesResponseIterator(request: requests.ListAvailabilityHistoriesRequest): AsyncIterableIterator<responses.ListAvailabilityHistoriesResponse>;
    /**
     * A list of Management Agent Data Sources for the given Management Agent Id.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDataSourcesRequest
     * @return ListDataSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListDataSources.ts.html |here} to see how to use ListDataSources API.
     */
    listDataSources(listDataSourcesRequest: requests.ListDataSourcesRequest): Promise<responses.ListDataSourcesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listDataSourcesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.DataSourceSummary objects
     * contained in responses from the listDataSources operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllDataSources(request: requests.ListDataSourcesRequest): AsyncIterableIterator<model.DataSourceSummary>;
    /**
     * NOTE: This function is deprecated in favor of listDataSourcesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listDataSources operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllDataSourcesResponses(request: requests.ListDataSourcesRequest): AsyncIterableIterator<responses.ListDataSourcesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.DataSourceSummary objects
     * contained in responses from the listDataSources operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listDataSourcesRecordIterator(request: requests.ListDataSourcesRequest): AsyncIterableIterator<model.DataSourceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listDataSources operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listDataSourcesResponseIterator(request: requests.ListDataSourcesRequest): AsyncIterableIterator<responses.ListDataSourcesResponse>;
    /**
     * Get supported agent image information
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagementAgentImagesRequest
     * @return ListManagementAgentImagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListManagementAgentImages.ts.html |here} to see how to use ListManagementAgentImages API.
     */
    listManagementAgentImages(listManagementAgentImagesRequest: requests.ListManagementAgentImagesRequest): Promise<responses.ListManagementAgentImagesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentImagesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ManagementAgentImageSummary objects
     * contained in responses from the listManagementAgentImages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentImages(request: requests.ListManagementAgentImagesRequest): AsyncIterableIterator<model.ManagementAgentImageSummary>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentImagesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentImages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentImagesResponses(request: requests.ListManagementAgentImagesRequest): AsyncIterableIterator<responses.ListManagementAgentImagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagementAgentImageSummary objects
     * contained in responses from the listManagementAgentImages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentImagesRecordIterator(request: requests.ListManagementAgentImagesRequest): AsyncIterableIterator<model.ManagementAgentImageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentImages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentImagesResponseIterator(request: requests.ListManagementAgentImagesRequest): AsyncIterableIterator<responses.ListManagementAgentImagesResponse>;
    /**
     * Returns a list of Management Agent installed Keys.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagementAgentInstallKeysRequest
     * @return ListManagementAgentInstallKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListManagementAgentInstallKeys.ts.html |here} to see how to use ListManagementAgentInstallKeys API.
     */
    listManagementAgentInstallKeys(listManagementAgentInstallKeysRequest: requests.ListManagementAgentInstallKeysRequest): Promise<responses.ListManagementAgentInstallKeysResponse>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentInstallKeysRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ManagementAgentInstallKeySummary objects
     * contained in responses from the listManagementAgentInstallKeys operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentInstallKeys(request: requests.ListManagementAgentInstallKeysRequest): AsyncIterableIterator<model.ManagementAgentInstallKeySummary>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentInstallKeysResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentInstallKeys operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentInstallKeysResponses(request: requests.ListManagementAgentInstallKeysRequest): AsyncIterableIterator<responses.ListManagementAgentInstallKeysResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagementAgentInstallKeySummary objects
     * contained in responses from the listManagementAgentInstallKeys operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentInstallKeysRecordIterator(request: requests.ListManagementAgentInstallKeysRequest): AsyncIterableIterator<model.ManagementAgentInstallKeySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentInstallKeys operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentInstallKeysResponseIterator(request: requests.ListManagementAgentInstallKeysRequest): AsyncIterableIterator<responses.ListManagementAgentInstallKeysResponse>;
    /**
     * Returns a list of managementAgentPlugins.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagementAgentPluginsRequest
     * @return ListManagementAgentPluginsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListManagementAgentPlugins.ts.html |here} to see how to use ListManagementAgentPlugins API.
     */
    listManagementAgentPlugins(listManagementAgentPluginsRequest: requests.ListManagementAgentPluginsRequest): Promise<responses.ListManagementAgentPluginsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentPluginsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ManagementAgentPluginSummary objects
     * contained in responses from the listManagementAgentPlugins operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentPlugins(request: requests.ListManagementAgentPluginsRequest): AsyncIterableIterator<model.ManagementAgentPluginSummary>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentPluginsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentPlugins operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentPluginsResponses(request: requests.ListManagementAgentPluginsRequest): AsyncIterableIterator<responses.ListManagementAgentPluginsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagementAgentPluginSummary objects
     * contained in responses from the listManagementAgentPlugins operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentPluginsRecordIterator(request: requests.ListManagementAgentPluginsRequest): AsyncIterableIterator<model.ManagementAgentPluginSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgentPlugins operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentPluginsResponseIterator(request: requests.ListManagementAgentPluginsRequest): AsyncIterableIterator<responses.ListManagementAgentPluginsResponse>;
    /**
     * Returns a list of Management Agents.
     * If no explicit page size limit is specified, it will default to 1000 when compartmentIdInSubtree is true and 5000 otherwise.
     * The response is limited to maximum 1000 records when compartmentIdInSubtree is true.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagementAgentsRequest
     * @return ListManagementAgentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListManagementAgents.ts.html |here} to see how to use ListManagementAgents API.
     */
    listManagementAgents(listManagementAgentsRequest: requests.ListManagementAgentsRequest): Promise<responses.ListManagementAgentsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ManagementAgentSummary objects
     * contained in responses from the listManagementAgents operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgents(request: requests.ListManagementAgentsRequest): AsyncIterableIterator<model.ManagementAgentSummary>;
    /**
     * NOTE: This function is deprecated in favor of listManagementAgentsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgents operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagementAgentsResponses(request: requests.ListManagementAgentsRequest): AsyncIterableIterator<responses.ListManagementAgentsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagementAgentSummary objects
     * contained in responses from the listManagementAgents operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentsRecordIterator(request: requests.ListManagementAgentsRequest): AsyncIterableIterator<model.ManagementAgentSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagementAgents operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listManagementAgentsResponseIterator(request: requests.ListManagementAgentsRequest): AsyncIterableIterator<responses.ListManagementAgentsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsRecordIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsResponseIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsRecordIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsResponseIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Sets the AutoUpgradable configuration for all agents in a tenancy.
     * The supplied compartmentId must be a tenancy root.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SetAutoUpgradableConfigRequest
     * @return SetAutoUpgradableConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/SetAutoUpgradableConfig.ts.html |here} to see how to use SetAutoUpgradableConfig API.
     */
    setAutoUpgradableConfig(setAutoUpgradableConfigRequest: requests.SetAutoUpgradableConfigRequest): Promise<responses.SetAutoUpgradableConfigResponse>;
    /**
     * Gets count of the inventory of agents for a given compartment id, group by, and isPluginDeployed parameters.
     * Supported groupBy parameters: availabilityStatus, platformType, version
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeManagementAgentCountsRequest
     * @return SummarizeManagementAgentCountsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/SummarizeManagementAgentCounts.ts.html |here} to see how to use SummarizeManagementAgentCounts API.
     */
    summarizeManagementAgentCounts(summarizeManagementAgentCountsRequest: requests.SummarizeManagementAgentCountsRequest): Promise<responses.SummarizeManagementAgentCountsResponse>;
    /**
     * Gets count of the inventory of management agent plugins for a given compartment id and group by parameter.
     * Supported groupBy parameter: pluginName
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeManagementAgentPluginCountsRequest
     * @return SummarizeManagementAgentPluginCountsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/SummarizeManagementAgentPluginCounts.ts.html |here} to see how to use SummarizeManagementAgentPluginCounts API.
     */
    summarizeManagementAgentPluginCounts(summarizeManagementAgentPluginCountsRequest: requests.SummarizeManagementAgentPluginCountsRequest): Promise<responses.SummarizeManagementAgentPluginCountsResponse>;
    /**
     * Datasource update request to given Management Agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDataSourceRequest
     * @return UpdateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/UpdateDataSource.ts.html |here} to see how to use UpdateDataSource API.
     */
    updateDataSource(updateDataSourceRequest: requests.UpdateDataSourceRequest): Promise<responses.UpdateDataSourceResponse>;
    /**
     * API to update the console managed properties of the Management Agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateManagementAgentRequest
     * @return UpdateManagementAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/UpdateManagementAgent.ts.html |here} to see how to use UpdateManagementAgent API.
     */
    updateManagementAgent(updateManagementAgentRequest: requests.UpdateManagementAgentRequest): Promise<responses.UpdateManagementAgentResponse>;
    /**
     * API to update the modifiable properties of the Management Agent install key.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateManagementAgentInstallKeyRequest
     * @return UpdateManagementAgentInstallKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/managementagent/UpdateManagementAgentInstallKey.ts.html |here} to see how to use UpdateManagementAgentInstallKey API.
     */
    updateManagementAgentInstallKey(updateManagementAgentInstallKeyRequest: requests.UpdateManagementAgentInstallKeyRequest): Promise<responses.UpdateManagementAgentInstallKeyResponse>;
}
export {};
