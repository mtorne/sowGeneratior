/**
 * Managed Access API
 * Use the Managed Access API to approve access requests, create and manage templates, and manage resource approval settings. For more information, see [Managed Access Overview](https://docs.oracle.com/iaas/Content/managed-access/home.htm).

Use the table of contents and search tool to explore the Managed Access API.

 * OpenAPI spec version: 20220126
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of the Lockbox.
 */
export interface LockboxSummary {
    /**
     * Unique identifier that is immutable on creation
     */
    "id": string;
    /**
     * Lockbox Identifier, can be renamed
     */
    "displayName": string;
    /**
     * The partner using this lockbox to lock a resource.
     */
    "lockboxPartner"?: model.LockboxPartner;
    /**
     * Compartment Identifier
     */
    "compartmentId": string;
    /**
     * The unique identifier (OCID) of partner resource using this lockbox to lock a resource
     */
    "partnerId"?: string;
    /**
     * Compartment Identifier
     */
    "partnerCompartmentId"?: string;
    /**
     * The unique identifier (OCID) of associated resource that the lockbox is created for.
     */
    "resourceId": string;
    /**
     * Approval template ID
     */
    "approvalTemplateId"?: string;
    /**
     * The maximum amount of time operator has access to associated resources.
     */
    "maxAccessDuration"?: string;
    /**
     * The time the the Lockbox was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the Lockbox was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the Lockbox.
     */
    "lifecycleState": string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace LockboxSummary {
    function getJsonObj(obj: LockboxSummary): object;
    function getDeserializedJsonObj(obj: LockboxSummary): object;
}
