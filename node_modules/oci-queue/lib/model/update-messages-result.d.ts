/**
 * Queue API
 * Use the Queue API to produce and consume messages, create queues, and manage related items. For more information, see [Queue](https://docs.oracle.com/iaas/Content/queue/overview.htm).
 * OpenAPI spec version: 20210201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The response to a UpdateMessages request. It indicates the number of server and client failures as well as an array of entries for successful and failed actions.
 */
export interface UpdateMessagesResult {
    /**
     * The number of messages that failed to be updated in the queue because of a server failure. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "serverFailures": number;
    /**
     * The number of messages that failed to be updated in the queue because of a client failure such as an invalid receipt or invalid {@code visibilityInSeconds}. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clientFailures": number;
    /**
     * An array of items representing the result of each action.
     * The order is guaranteed to be the same as in the {@code UpdateMessagesDetails} object.
     * If a message was successfully updated in the queue, the entry includes the {@code id} and {@code visibleAfter} fields.
     * If a message failed to be updated in the queue, the entry includes the {@code errorCode} and {@code errorMessage} fields.
     *
     */
    "entries": Array<model.UpdateMessagesResultEntry>;
}
export declare namespace UpdateMessagesResult {
    function getJsonObj(obj: UpdateMessagesResult): object;
    function getDeserializedJsonObj(obj: UpdateMessagesResult): object;
}
