/**
 *
 *
 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAttentionLogs.ts.html |here} to see how to use ListAttentionLogsRequest.
 */
export interface ListAttentionLogsRequest extends common.BaseRequest {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    "managedDatabaseId": string;
    /**
     * The optional greater than or equal to timestamp to filter the logs.
     */
    "timeGreaterThanOrEqualTo"?: Date;
    /**
     * The optional less than or equal to timestamp to filter the logs.
     */
    "timeLessThanOrEqualTo"?: Date;
    /**
     * The optional parameter to filter the attention logs by urgency.
     */
    "urgencyFilter"?: ListAttentionLogsRequest.UrgencyFilter;
    /**
     * The optional parameter to filter the attention or alert logs by type.
     */
    "typeFilter"?: ListAttentionLogsRequest.TypeFilter;
    /**
     * The optional query parameter to filter the attention or alert logs by search text.
     */
    "logSearchText"?: string;
    /**
     * The flag to indicate whether the search text is regular expression or not.
     */
    "isRegularExpression"?: boolean;
    /**
     * The possible sortBy values of attention logs.
     */
    "sortBy"?: ListAttentionLogsRequest.SortBy;
    /**
     * The option to sort information in ascending (\u2018ASC\u2019) or descending (\u2018DESC\u2019) order. Ascending order is the default order.
     */
    "sortOrder"?: model.SortOrders;
    /**
     * The page token representing the page from where the next set of paginated results
     * are retrieved. This is usually retrieved from a previous list call.
     *
     */
    "page"?: string;
    /**
     * The maximum number of records returned in the paginated response.
     */
    "limit"?: number;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
    /**
     * The OCID of the Named Credential.
     */
    "opcNamedCredentialId"?: string;
}
export declare namespace ListAttentionLogsRequest {
    enum UrgencyFilter {
        Immediate = "IMMEDIATE",
        Soon = "SOON",
        Deferrable = "DEFERRABLE",
        Info = "INFO",
        All = "ALL"
    }
    enum TypeFilter {
        Unknown = "UNKNOWN",
        IncidentError = "INCIDENT_ERROR",
        Error = "ERROR",
        Warning = "WARNING",
        Notification = "NOTIFICATION",
        Trace = "TRACE",
        All = "ALL"
    }
    enum SortBy {
        Urgency = "URGENCY",
        Type = "TYPE",
        Message = "MESSAGE",
        Timestamp = "TIMESTAMP",
        Scope = "SCOPE",
        TargetUser = "TARGET_USER"
    }
}
