/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The summary of a SQL plan baseline.
 */
export interface SqlPlanBaselineSummary {
    /**
     * The unique plan identifier.
     */
    "planName": string;
    /**
     * The unique SQL identifier.
     */
    "sqlHandle": string;
    /**
     * The SQL text (truncated to the first 50 characters).
     */
    "sqlText": string;
    /**
     * The origin of the SQL plan baseline.
     */
    "origin"?: model.SqlPlanBaselineOrigin;
    /**
     * The date and time when the plan baseline was created.
     */
    "timeCreated": Date;
    /**
     * The date and time when the plan baseline was last modified.
     */
    "timeLastModified"?: Date;
    /**
     * The date and time when the plan baseline was last executed.
     * <p>
     **Note:** For performance reasons, database does not update this value
     * immediately after each execution of the plan baseline. Therefore, the plan
     * baseline may have been executed more recently than this value indicates.
     *
     */
    "timeLastExecuted"?: Date;
    /**
     * Indicates whether the plan baseline is enabled ({@code YES}) or disabled ({@code NO}).
     */
    "enabled"?: SqlPlanBaselineSummary.Enabled;
    /**
     * Indicates whether the plan baseline is accepted ({@code YES}) or not ({@code NO}).
     */
    "accepted"?: SqlPlanBaselineSummary.Accepted;
    /**
     * Indicates whether the plan baseline is fixed ({@code YES}) or not ({@code NO}).
     */
    "fixed"?: SqlPlanBaselineSummary.Fixed;
    /**
     * Indicates whether the optimizer was able to reproduce the plan ({@code YES}) or not ({@code NO}).
     * The value is set to {@code YES} when a plan is initially added to the plan baseline.
     *
     */
    "reproduced"?: SqlPlanBaselineSummary.Reproduced;
    /**
     * Indicates whether the plan baseline is auto-purged ({@code YES}) or not ({@code NO}).
     */
    "autoPurge"?: SqlPlanBaselineSummary.AutoPurge;
    /**
      * Indicates whether a plan that is automatically captured by SQL plan management is marked adaptive or not.
  * <p>
  When a new adaptive plan is found for a SQL statement that has an existing SQL plan baseline, that new plan
  * will be added to the SQL plan baseline as an unaccepted plan, and the {@code ADAPTIVE} property will be marked {@code YES}.
  * When this new plan is verified (either manually or via the auto evolve task), the plan will be test executed
  * and the final plan determined at execution will become an accepted plan if its performance is better than
  * the existing plan baseline. At this point, the value of the {@code ADAPTIVE} property is set to {@code NO} since the plan
  * is no longer adaptive, but resolved.
  *
      */
    "adaptive"?: SqlPlanBaselineSummary.Adaptive;
}
export declare namespace SqlPlanBaselineSummary {
    enum Enabled {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Accepted {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Fixed {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Reproduced {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AutoPurge {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Adaptive {
        Yes = "YES",
        No = "NO",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SqlPlanBaselineSummary): object;
    function getDeserializedJsonObj(obj: SqlPlanBaselineSummary): object;
}
