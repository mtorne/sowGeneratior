"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeploymentType = void 0;
/**
 * A list of the supported infrastructure that can be used to deploy the database:
* <p>
- ONPREMISE: External infrastructure on premises.
* - BM: Bare metal infrastructure in Oracle Cloud.
* - VM: Virtual machines in Oracle Cloud.
* - EXADATA: Exadata infrastructure in Oracle Cloud.
* - EXADATA_CC: Exadata Cloud@Customer infrastructure in customer's data center.
* - AUTONOMOUS: Oracle Autonomous Cloud infrastructure
* - EXADATA_XS: Exadata Exascale on virtual infrastructure
*
**/
var DeploymentType;
(function (DeploymentType) {
    DeploymentType["Onpremise"] = "ONPREMISE";
    DeploymentType["Bm"] = "BM";
    DeploymentType["Vm"] = "VM";
    DeploymentType["Exadata"] = "EXADATA";
    DeploymentType["ExadataCc"] = "EXADATA_CC";
    DeploymentType["Autonomous"] = "AUTONOMOUS";
    DeploymentType["ExadataXs"] = "EXADATA_XS";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    DeploymentType["UnknownValue"] = "UNKNOWN_VALUE";
})(DeploymentType = exports.DeploymentType || (exports.DeploymentType = {}));
(function (DeploymentType) {
    function getJsonObj(obj) {
        return obj;
    }
    DeploymentType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    DeploymentType.getDeserializedJsonObj = getDeserializedJsonObj;
})(DeploymentType = exports.DeploymentType || (exports.DeploymentType = {}));
//# sourceMappingURL=deployment-type.js.map