"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwrQueryResult = void 0;
const model = __importStar(require("../model"));
const common = require("oci-common");
var AwrQueryResult;
(function (AwrQueryResult) {
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        if (obj && "awrResultType" in obj && obj.awrResultType) {
            switch (obj.awrResultType) {
                case "AWRDB_DB_PARAMETER_CHANGE":
                    return model.AwrDbParameterChangeCollection.getJsonObj(jsonObj, true);
                case "AWRDB_ASH_CPU_USAGE_SET":
                    return model.AwrDbCpuUsageCollection.getJsonObj(jsonObj, true);
                case "AWRDB_EVENT_HISTOGRAM_SET":
                    return model.AwrDbWaitEventBucketCollection.getJsonObj(jsonObj, true);
                case "AWRDB_DB_PARAMETER_SET":
                    return model.AwrDbParameterCollection.getJsonObj(jsonObj, true);
                case "AWRDB_SYSSTAT_SET":
                    return model.AwrDbSysstatCollection.getJsonObj(jsonObj, true);
                case "AWRDB_TOP_EVENT_SET":
                    return model.AwrDbTopWaitEventCollection.getJsonObj(jsonObj, true);
                case "AWRDB_SNAPSHOT_SET":
                    return model.AwrDbSnapshotCollection.getJsonObj(jsonObj, true);
                case "AWRDB_SET":
                    return model.AwrDbCollection.getJsonObj(jsonObj, true);
                case "AWRDB_SNAPSHOT_RANGE_SET":
                    return model.AwrDbSnapshotRangeCollection.getJsonObj(jsonObj, true);
                case "AWRDB_DB_REPORT":
                    return model.AwrDbReport.getJsonObj(jsonObj, true);
                case "AWRDB_METRICS_SET":
                    return model.AwrDbMetricCollection.getJsonObj(jsonObj, true);
                case "AWRDB_EVENT_SET":
                    return model.AwrDbWaitEventCollection.getJsonObj(jsonObj, true);
                case "AWRDB_SQL_REPORT":
                    return model.AwrDbSqlReport.getJsonObj(jsonObj, true);
                default:
                    if (common.LOG.logger)
                        common.LOG.logger.info(`Unknown value for: ${obj.awrResultType}`);
            }
        }
        return jsonObj;
    }
    AwrQueryResult.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        if (obj && "awrResultType" in obj && obj.awrResultType) {
            switch (obj.awrResultType) {
                case "AWRDB_DB_PARAMETER_CHANGE":
                    return model.AwrDbParameterChangeCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_ASH_CPU_USAGE_SET":
                    return model.AwrDbCpuUsageCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_EVENT_HISTOGRAM_SET":
                    return model.AwrDbWaitEventBucketCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_DB_PARAMETER_SET":
                    return model.AwrDbParameterCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_SYSSTAT_SET":
                    return model.AwrDbSysstatCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_TOP_EVENT_SET":
                    return model.AwrDbTopWaitEventCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_SNAPSHOT_SET":
                    return model.AwrDbSnapshotCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_SET":
                    return model.AwrDbCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_SNAPSHOT_RANGE_SET":
                    return model.AwrDbSnapshotRangeCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_DB_REPORT":
                    return model.AwrDbReport.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_METRICS_SET":
                    return model.AwrDbMetricCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_EVENT_SET":
                    return model.AwrDbWaitEventCollection.getDeserializedJsonObj(jsonObj, true);
                case "AWRDB_SQL_REPORT":
                    return model.AwrDbSqlReport.getDeserializedJsonObj(jsonObj, true);
                default:
                    if (common.LOG.logger)
                        common.LOG.logger.info(`Unknown value for: ${obj.awrResultType}`);
            }
        }
        return jsonObj;
    }
    AwrQueryResult.getDeserializedJsonObj = getDeserializedJsonObj;
})(AwrQueryResult = exports.AwrQueryResult || (exports.AwrQueryResult = {}));
//# sourceMappingURL=awr-query-result.js.map