/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of external database connector.
 */
export interface ExternalMySqlDatabaseConnector {
    /**
     * External MySQL Database Connector Name.
     */
    "name"?: string;
    /**
     * OCID of compartment for the External MySQL connector.
     */
    "compartmentId"?: string;
    /**
     * OCI Services associated with this connector.
     */
    "associatedServices"?: string;
    /**
     * OCID of MySQL Database resource
     */
    "externalDatabaseId"?: string;
    /**
     * OCID of MySQL Database Connector.
     */
    "id": string;
    /**
     * Connector update time.
     */
    "timeUpdated"?: Date;
    /**
     * Connector creation time.
     */
    "timeCreated"?: Date;
    /**
     * Indicates lifecycle  state of the resource.
     */
    "lifecycleState"?: model.LifecycleStates;
    /**
     * Name of MySQL Database.
     */
    "sourceDatabase"?: string;
    /**
     * Type of MySQL Database.
     */
    "sourceDatabaseType"?: model.MySqlType;
    /**
     * Agent Id of the MACS agent.
     */
    "macsAgentId"?: string;
    /**
     * Connection Status
     */
    "connectionStatus"?: string;
    /**
     * Time when connection status was last updated.
     */
    "timeConnectionStatusUpdated"?: Date;
    /**
     * Host name for Connector.
     */
    "hostName"?: string;
    /**
     * Connector port. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "port"?: number;
    /**
     * Connector Type.
     */
    "connectorType"?: model.MySqlConnectorType;
    /**
     * Network Protocol.
     */
    "networkProtocol"?: model.MySqlNetworkProtocolType;
    /**
     * Credential type used to connect to database.
     */
    "credentialType"?: model.MySqlCredType;
    /**
     * OCID of the SSL secret, if TCPS with SSL is used to connect to database.
     */
    "sslSecretId"?: string;
    /**
     * Name of the SSL secret, if TCPS with SSL is used to connect to database.
     */
    "sslSecretName"?: string;
}
export declare namespace ExternalMySqlDatabaseConnector {
    function getJsonObj(obj: ExternalMySqlDatabaseConnector): object;
    function getDeserializedJsonObj(obj: ExternalMySqlDatabaseConnector): object;
}
