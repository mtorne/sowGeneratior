"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalClusterInstance = void 0;
var ExternalClusterInstance;
(function (ExternalClusterInstance) {
    let NodeRole;
    (function (NodeRole) {
        NodeRole["Hub"] = "HUB";
        NodeRole["Leaf"] = "LEAF";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        NodeRole["UnknownValue"] = "UNKNOWN_VALUE";
    })(NodeRole = ExternalClusterInstance.NodeRole || (ExternalClusterInstance.NodeRole = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["NotConnected"] = "NOT_CONNECTED";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Inactive"] = "INACTIVE";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = ExternalClusterInstance.LifecycleState || (ExternalClusterInstance.LifecycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ExternalClusterInstance.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ExternalClusterInstance.getDeserializedJsonObj = getDeserializedJsonObj;
})(ExternalClusterInstance = exports.ExternalClusterInstance || (exports.ExternalClusterInstance = {}));
//# sourceMappingURL=external-cluster-instance.js.map