/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The list of aggregated metrics for a HeatWave cluster in the fleet.
 */
export interface HeatWaveClusterUsageMetrics {
    /**
     * The status of the HeatWave cluster. Indicates whether the status of the cluster is UP, DOWN, or UNKNOWN at the current time.
     */
    "status": model.HeatWaveClusterStatus;
    /**
     * The OCID of the MySQL Database System associated with the HeatWave cluster.
     */
    "dbSystemId": string;
    /**
     * The name of the MySQL Database System associated with the HeatWave cluster.
     */
    "dbSystemName": string;
    /**
     * The name of the HeatWave cluster.
     */
    "heatWaveClusterDisplayName": string;
    /**
     * The number of nodes in the HeatWave cluster. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "nodeCount": number;
    /**
     * Indicates whether Lakehouse is enabled for the HeatWave cluster or not.
     */
    "isLakehouseEnabled": boolean;
    /**
     * The shape of the nodes in the HeatWave cluster.
     */
    "heatWaveNodeShape": string;
    /**
     * The total memory belonging to the HeatWave cluster in GBs. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "memorySize": number;
    /**
     * A list of the HeatWave cluster health metrics like CPU and Memory.
     */
    "metrics": Array<model.HeatWaveFleetMetricDefinition>;
}
export declare namespace HeatWaveClusterUsageMetrics {
    function getJsonObj(obj: HeatWaveClusterUsageMetrics): object;
    function getDeserializedJsonObj(obj: HeatWaveClusterUsageMetrics): object;
}
