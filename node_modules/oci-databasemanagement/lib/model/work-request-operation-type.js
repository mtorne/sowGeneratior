"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestOperationType = void 0;
/**
 * The type of work request operation.
 **/
var WorkRequestOperationType;
(function (WorkRequestOperationType) {
    WorkRequestOperationType["CreateDbManagementPrivateEndpoint"] = "CREATE_DB_MANAGEMENT_PRIVATE_ENDPOINT";
    WorkRequestOperationType["DeleteDbManagementPrivateEndpoint"] = "DELETE_DB_MANAGEMENT_PRIVATE_ENDPOINT";
    WorkRequestOperationType["CreateDbSystemDiscovery"] = "CREATE_DB_SYSTEM_DISCOVERY";
    WorkRequestOperationType["CreateDbSystem"] = "CREATE_DB_SYSTEM";
    WorkRequestOperationType["UpdateDbSystem"] = "UPDATE_DB_SYSTEM";
    WorkRequestOperationType["DbSystemEnableDbmgmt"] = "DB_SYSTEM_ENABLE_DBMGMT";
    WorkRequestOperationType["DbSystemDisableDbmgmt"] = "DB_SYSTEM_DISABLE_DBMGMT";
    WorkRequestOperationType["DeleteDbSystem"] = "DELETE_DB_SYSTEM";
    WorkRequestOperationType["UpdateExternalDbSystemConnector"] = "UPDATE_EXTERNAL_DB_SYSTEM_CONNECTOR";
    WorkRequestOperationType["ChangeExternalDbSystemCompartment"] = "CHANGE_EXTERNAL_DB_SYSTEM_COMPARTMENT";
    WorkRequestOperationType["DisableExadataInfrasturcture"] = "DISABLE_EXADATA_INFRASTURCTURE";
    WorkRequestOperationType["EnableExadataInfrastructure"] = "ENABLE_EXADATA_INFRASTRUCTURE";
    WorkRequestOperationType["DeleteExadataInfrastructure"] = "DELETE_EXADATA_INFRASTRUCTURE";
    WorkRequestOperationType["ChangeExadataCompartment"] = "CHANGE_EXADATA_COMPARTMENT";
    WorkRequestOperationType["EnableSqlWatch"] = "ENABLE_SQL_WATCH";
    WorkRequestOperationType["DisableSqlWatch"] = "DISABLE_SQL_WATCH";
    WorkRequestOperationType["ModifySqlWatch"] = "MODIFY_SQL_WATCH";
    WorkRequestOperationType["EnableDblm"] = "ENABLE_DBLM";
    WorkRequestOperationType["DisableDblm"] = "DISABLE_DBLM";
    WorkRequestOperationType["ModifyDblm"] = "MODIFY_DBLM";
    WorkRequestOperationType["EnableDbmgmt"] = "ENABLE_DBMGMT";
    WorkRequestOperationType["DisableDbmgmt"] = "DISABLE_DBMGMT";
    WorkRequestOperationType["ModifyDbmgmt"] = "MODIFY_DBMGMT";
    WorkRequestOperationType["CheckExternalMysqlConnection"] = "CHECK_EXTERNAL_MYSQL_CONNECTION";
    WorkRequestOperationType["UpdateExternalMysqlCredential"] = "UPDATE_EXTERNAL_MYSQL_CREDENTIAL";
    WorkRequestOperationType["CreateExternalMysqlConnector"] = "CREATE_EXTERNAL_MYSQL_CONNECTOR";
    WorkRequestOperationType["DeleteExternalMysqlConnector"] = "DELETE_EXTERNAL_MYSQL_CONNECTOR";
    WorkRequestOperationType["DeleteExternalMysqlDatabase"] = "DELETE_EXTERNAL_MYSQL_DATABASE";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    WorkRequestOperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
(function (WorkRequestOperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
//# sourceMappingURL=work-request-operation-type.js.map