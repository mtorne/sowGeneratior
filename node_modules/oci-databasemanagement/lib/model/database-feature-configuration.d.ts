/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of an external database feature configuration.
 */
export interface DatabaseFeatureConfiguration {
    /**
     * The list of statuses for Database Management features.
     *
     */
    "featureStatus": DatabaseFeatureConfiguration.FeatureStatus;
    "connectorDetails"?: model.ExternalConnectorDetails | model.DirectConnectorDetails | model.MacsConnectorDetails | model.PrivateEndPointConnectorDetails;
    "databaseConnectionDetails"?: model.DatabaseConnectionDetails;
    "feature": string;
}
export declare namespace DatabaseFeatureConfiguration {
    enum FeatureStatus {
        Enabled = "ENABLED",
        NotEnabled = "NOT_ENABLED",
        Unsupported = "UNSUPPORTED",
        FailedEnabling = "FAILED_ENABLING",
        FailedDisabling = "FAILED_DISABLING",
        Failed = "FAILED",
        EnabledWithWarnings = "ENABLED_WITH_WARNINGS",
        PendingDisable = "PENDING_DISABLE",
        Enabling = "ENABLING",
        Disabling = "DISABLING",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DatabaseFeatureConfiguration): object;
    function getDeserializedJsonObj(obj: DatabaseFeatureConfiguration): object;
}
