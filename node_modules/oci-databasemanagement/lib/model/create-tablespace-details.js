"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateTablespaceDetails = void 0;
const model = __importStar(require("../model"));
var CreateTablespaceDetails;
(function (CreateTablespaceDetails) {
    let Type;
    (function (Type) {
        Type["Permanent"] = "PERMANENT";
        Type["Temporary"] = "TEMPORARY";
    })(Type = CreateTablespaceDetails.Type || (CreateTablespaceDetails.Type = {}));
    let DefaultCompress;
    (function (DefaultCompress) {
        DefaultCompress["NoCompress"] = "NO_COMPRESS";
        DefaultCompress["BasicCompress"] = "BASIC_COMPRESS";
    })(DefaultCompress = CreateTablespaceDetails.DefaultCompress || (CreateTablespaceDetails.DefaultCompress = {}));
    let Status;
    (function (Status) {
        Status["ReadOnly"] = "READ_ONLY";
        Status["ReadWrite"] = "READ_WRITE";
    })(Status = CreateTablespaceDetails.Status || (CreateTablespaceDetails.Status = {}));
    let ExtentManagement;
    (function (ExtentManagement) {
        ExtentManagement["Autoallocate"] = "AUTOALLOCATE";
        ExtentManagement["Uniform"] = "UNIFORM";
    })(ExtentManagement = CreateTablespaceDetails.ExtentManagement || (CreateTablespaceDetails.ExtentManagement = {}));
    let SegmentManagement;
    (function (SegmentManagement) {
        SegmentManagement["Auto"] = "AUTO";
        SegmentManagement["Manual"] = "MANUAL";
    })(SegmentManagement = CreateTablespaceDetails.SegmentManagement || (CreateTablespaceDetails.SegmentManagement = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "credentialDetails": obj.credentialDetails
                ? model.TablespaceAdminCredentialDetails.getJsonObj(obj.credentialDetails)
                : undefined,
            "databaseCredential": obj.databaseCredential
                ? model.DatabaseCredentialDetails.getJsonObj(obj.databaseCredential)
                : undefined,
            "fileSize": obj.fileSize ? model.TablespaceStorageSize.getJsonObj(obj.fileSize) : undefined,
            "autoExtendNextSize": obj.autoExtendNextSize
                ? model.TablespaceStorageSize.getJsonObj(obj.autoExtendNextSize)
                : undefined,
            "autoExtendMaxSize": obj.autoExtendMaxSize
                ? model.TablespaceStorageSize.getJsonObj(obj.autoExtendMaxSize)
                : undefined,
            "extentUniformSize": obj.extentUniformSize
                ? model.TablespaceStorageSize.getJsonObj(obj.extentUniformSize)
                : undefined
        });
        return jsonObj;
    }
    CreateTablespaceDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "credentialDetails": obj.credentialDetails
                ? model.TablespaceAdminCredentialDetails.getDeserializedJsonObj(obj.credentialDetails)
                : undefined,
            "databaseCredential": obj.databaseCredential
                ? model.DatabaseCredentialDetails.getDeserializedJsonObj(obj.databaseCredential)
                : undefined,
            "fileSize": obj.fileSize
                ? model.TablespaceStorageSize.getDeserializedJsonObj(obj.fileSize)
                : undefined,
            "autoExtendNextSize": obj.autoExtendNextSize
                ? model.TablespaceStorageSize.getDeserializedJsonObj(obj.autoExtendNextSize)
                : undefined,
            "autoExtendMaxSize": obj.autoExtendMaxSize
                ? model.TablespaceStorageSize.getDeserializedJsonObj(obj.autoExtendMaxSize)
                : undefined,
            "extentUniformSize": obj.extentUniformSize
                ? model.TablespaceStorageSize.getDeserializedJsonObj(obj.extentUniformSize)
                : undefined
        });
        return jsonObj;
    }
    CreateTablespaceDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(CreateTablespaceDetails = exports.CreateTablespaceDetails || (exports.CreateTablespaceDetails = {}));
//# sourceMappingURL=create-tablespace-details.js.map