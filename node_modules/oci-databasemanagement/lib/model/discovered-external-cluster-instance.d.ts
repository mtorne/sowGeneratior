/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of an external cluster instance discovered in an external DB system discovery run.
 */
export interface DiscoveredExternalClusterInstance extends model.DiscoveredExternalDbSystemComponent {
    /**
     * The name of the host on which the cluster instance is running.
     */
    "hostName": string;
    /**
     * The unique identifier of the Oracle cluster.
     */
    "clusterId"?: string;
    /**
     * The role of the cluster node.
     */
    "nodeRole"?: DiscoveredExternalClusterInstance.NodeRole;
    /**
     * The Oracle base location of Cluster Ready Services (CRS).
     */
    "crsBaseDirectory"?: string;
    /**
     * The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     */
    "adrHomeDirectory"?: string;
    "connector"?: model.ExternalDbSystemDiscoveryMacsConnector;
    "componentType": string;
}
export declare namespace DiscoveredExternalClusterInstance {
    enum NodeRole {
        Hub = "HUB",
        Leaf = "LEAF",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DiscoveredExternalClusterInstance, isParentJsonObj?: boolean): object;
    const componentType = "CLUSTER_INSTANCE";
    function getDeserializedJsonObj(obj: DiscoveredExternalClusterInstance, isParentJsonObj?: boolean): object;
}
