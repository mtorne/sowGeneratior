/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of an external cluster discovered in an external DB system discovery run.
 */
export interface DiscoveredExternalCluster extends model.DiscoveredExternalDbSystemComponent {
    /**
     * The directory in which Oracle Grid Infrastructure is installed.
     */
    "gridHome"?: string;
    /**
     * The version of Oracle Clusterware running in the cluster.
     */
    "version"?: string;
    /**
     * Indicates whether the cluster is an Oracle Flex Cluster or not.
     */
    "isFlexCluster"?: boolean;
    /**
     * The list of network address configurations of the external cluster.
     */
    "networkConfigurations"?: Array<model.ExternalClusterNetworkConfiguration>;
    /**
     * The list of Virtual IP (VIP) configurations of the external cluster.
     */
    "vipConfigurations"?: Array<model.ExternalClusterVipConfiguration>;
    /**
     * The list of Single Client Access Name (SCAN) configurations of the external cluster.
     */
    "scanConfigurations"?: Array<model.ExternalClusterScanListenerConfiguration>;
    /**
     * The location of the Oracle Cluster Registry (OCR) file.
     */
    "ocrFileLocation"?: string;
    "clusterInstances"?: Array<model.DiscoveredExternalClusterInstance>;
    "componentType": string;
}
export declare namespace DiscoveredExternalCluster {
    function getJsonObj(obj: DiscoveredExternalCluster, isParentJsonObj?: boolean): object;
    const componentType = "CLUSTER";
    function getDeserializedJsonObj(obj: DiscoveredExternalCluster, isParentJsonObj?: boolean): object;
}
