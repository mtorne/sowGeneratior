"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyUserSummary = void 0;
var ProxyUserSummary;
(function (ProxyUserSummary) {
    let Authentication;
    (function (Authentication) {
        Authentication["Yes"] = "YES";
        Authentication["No"] = "NO";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Authentication["UnknownValue"] = "UNKNOWN_VALUE";
    })(Authentication = ProxyUserSummary.Authentication || (ProxyUserSummary.Authentication = {}));
    let Flags;
    (function (Flags) {
        Flags["ProxyMayActivateAllClientRoles"] = "PROXY_MAY_ACTIVATE_ALL_CLIENT_ROLES";
        Flags["NoClientRolesMayBeActivated"] = "NO_CLIENT_ROLES_MAY_BE_ACTIVATED";
        Flags["ProxyMayActivateRole"] = "PROXY_MAY_ACTIVATE_ROLE";
        Flags["ProxyMayNotActivateRole"] = "PROXY_MAY_NOT_ACTIVATE_ROLE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Flags["UnknownValue"] = "UNKNOWN_VALUE";
    })(Flags = ProxyUserSummary.Flags || (ProxyUserSummary.Flags = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ProxyUserSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ProxyUserSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(ProxyUserSummary = exports.ProxyUserSummary || (exports.ProxyUserSummary = {}));
//# sourceMappingURL=proxy-user-summary.js.map