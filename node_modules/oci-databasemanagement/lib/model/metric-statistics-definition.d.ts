/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The metric statistics values with dimension details.
 */
export interface MetricStatisticsDefinition {
    /**
     * The minimum value of the metric. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "min"?: number;
    /**
     * The maximum value of the metric. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "max"?: number;
    /**
     * The median value of the metric. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "median"?: number;
    /**
     * The first quartile value of the metric. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "lowerQuartile"?: number;
    /**
     * The third quartile value of the metric. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "upperQuartile"?: number;
    /**
     * The unit of the metric value.
     */
    "unit"?: string;
    /**
     * The dimensions of the metric.
     */
    "dimensions"?: Array<model.MetricDimensionDefinition>;
}
export declare namespace MetricStatisticsDefinition {
    function getJsonObj(obj: MetricStatisticsDefinition): object;
    function getDeserializedJsonObj(obj: MetricStatisticsDefinition): object;
}
