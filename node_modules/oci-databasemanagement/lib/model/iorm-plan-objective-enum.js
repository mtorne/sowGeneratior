"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IormPlanObjectiveEnum = void 0;
/**
 * The objective of the IORM plan of an Exadata storage server. The following is an excerpt from Exadata documentation:
 * auto - Use this setting for IORM to determine the best mode based on active workloads and resource plans.
 *        IORM continuously and dynamically determines the optimization objective, based on the observed workloads
 *        and enabled resource plans. This is the recommended value for most use cases, and starting with
 *        Oracle Exadata System Software release 21.2.0, this is the default setting.
 * high_throughput - Use this setting to optimize critical DSS workloads that require high throughput.
 *       This setting improves throughput at the cost of I/O latency.
 * low_latency - Use this setting to optimize critical OLTP workloads that require extremely good disk latency.
 *       This setting provides the lowest possible latency at the cost of throughput by limiting disk utilization.
 * balanced - Use this setting for a mixture of critical OLTP and DSS workloads. This setting balances low disk
 *       latency and high throughput. This setting limits disk utilization of large I/Os to a lesser extent than
 *       low_latency to achieve a balance between latency and throughput.
 * basic - Use this setting to limit the maximum small I/O latency and otherwise disable I/O prioritization.
 *       This is the default setting in Oracle Exadata System Software release 20.1.0 and earlier.
 * other - Temporarily handle the case when Exadata side adds new value, should not be used as input
 *       when to make change to IORM plan.
 *
 **/
var IormPlanObjectiveEnum;
(function (IormPlanObjectiveEnum) {
    IormPlanObjectiveEnum["Auto"] = "AUTO";
    IormPlanObjectiveEnum["HighThroughput"] = "HIGH_THROUGHPUT";
    IormPlanObjectiveEnum["LowLatency"] = "LOW_LATENCY";
    IormPlanObjectiveEnum["Balanced"] = "BALANCED";
    IormPlanObjectiveEnum["Basic"] = "BASIC";
    IormPlanObjectiveEnum["Other"] = "OTHER";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    IormPlanObjectiveEnum["UnknownValue"] = "UNKNOWN_VALUE";
})(IormPlanObjectiveEnum = exports.IormPlanObjectiveEnum || (exports.IormPlanObjectiveEnum = {}));
(function (IormPlanObjectiveEnum) {
    function getJsonObj(obj) {
        return obj;
    }
    IormPlanObjectiveEnum.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    IormPlanObjectiveEnum.getDeserializedJsonObj = getDeserializedJsonObj;
})(IormPlanObjectiveEnum = exports.IormPlanObjectiveEnum || (exports.IormPlanObjectiveEnum = {}));
//# sourceMappingURL=iorm-plan-objective-enum.js.map