/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * General information about replication of a MySQL server.
 */
export interface ManagedMySqlDatabaseGeneralReplicationInformation {
    /**
     * The type of the instance. Source, Replica, Primary Group Member, Secondary Group Member, and so on. If the instance is replicating from one or more sources and has one or more replicas, i.e., it belongs to a replication chain, the instance type can be Replica/Source.
     */
    "instanceType"?: string;
    /**
     * This server's host name.
     */
    "hostName"?: string;
    /**
     * The number of the port on which the server listens for TCP/IP connections. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "port"?: number;
    /**
     * This server's ID. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "serverId": number;
    /**
     * This server's Universally Unique Identifier (UUID).
     */
    "serverUuid": string;
    /**
     * The number of seconds the replica is behind the source. When multiple sources are involved, this is the maximum value across all sources. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "secondsBehindSourceMax"?: number;
    /**
     * A summary of the current status of fetch operations.
     */
    "fetchStatusSummary"?: string;
    /**
     * A summary of the current status of apply operations.
     */
    "applyStatusSummary"?: string;
    /**
     * Specifies if high availability is enabled on this server.
     */
    "isHighAvailabilityEnabled"?: boolean;
    /**
     * The state of this server as a group replication member.
     */
    "highAvailabilityMemberState"?: string;
    /**
     * The number of sources this server is replicating from. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "inboundReplicationsCount"?: number;
    /**
     * If the value is ON, the instance is configured as read_only. If the value is SUPER, the instance is configured as super_read_only. If the value is OFF, the instance is neither read_only nor super_read_only.
     */
    "readOnly": model.MySqlReadOnly;
    /**
     * Global Transaction Identifier (GTID) mode of this server.
     */
    "gtidMode"?: string;
    /**
     * The set of global transaction identifiers for transactions that have been executed on this source server.
     */
    "executedGtidSet"?: string;
    /**
     * Status of binary logging on this server.
     */
    "binaryLogging"?: string;
    /**
     * The binary logging format used by this server.
     */
    "binaryLogFormat"?: string;
    /**
     * The number of replicas replicating from this server. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "outboundReplicationsCount"?: number;
}
export declare namespace ManagedMySqlDatabaseGeneralReplicationInformation {
    function getJsonObj(obj: ManagedMySqlDatabaseGeneralReplicationInformation): object;
    function getDeserializedJsonObj(obj: ManagedMySqlDatabaseGeneralReplicationInformation): object;
}
