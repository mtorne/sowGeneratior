"use strict";
/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HistoricAddmResult = void 0;
var HistoricAddmResult;
(function (HistoricAddmResult) {
    let Status;
    (function (Status) {
        Status["Initial"] = "INITIAL";
        Status["Executing"] = "EXECUTING";
        Status["Interrupted"] = "INTERRUPTED";
        Status["Completed"] = "COMPLETED";
        Status["Error"] = "ERROR";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = HistoricAddmResult.Status || (HistoricAddmResult.Status = {}));
    let HowCreated;
    (function (HowCreated) {
        HowCreated["Auto"] = "AUTO";
        HowCreated["Manual"] = "MANUAL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        HowCreated["UnknownValue"] = "UNKNOWN_VALUE";
    })(HowCreated = HistoricAddmResult.HowCreated || (HistoricAddmResult.HowCreated = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    HistoricAddmResult.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    HistoricAddmResult.getDeserializedJsonObj = getDeserializedJsonObj;
})(HistoricAddmResult = exports.HistoricAddmResult || (exports.HistoricAddmResult = {}));
//# sourceMappingURL=historic-addm-result.js.map