/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The list of aggregated metrics for Managed MySQL Databases in the fleet.
 */
export interface MySqlDatabaseUsageMetrics {
    /**
     * The OCID of the compartment where the Managed MySQL Database resides.
     */
    "compartmentId": string;
    /**
     * The display name of the Managed MySQL Database.
     */
    "databaseName": string;
    /**
     * Indicates MySQL Database type, ONPREMISE or MySQL Database System.
     */
    "databaseType": string;
    /**
     * The type of MySQL Database System.
     */
    "mdsDeploymentType": string;
    /**
     * The lifecycle state of the MySQL Database System.
     */
    "mdslifecycleState": string;
    /**
     * The version of the MySQL Database.
     */
    "databaseVersion": string;
    /**
     * The OCID of the Managed MySQL Database.
     */
    "dbId": string;
    /**
     * The status of the MySQL Database. Indicates whether the status of the database
     * is UP, DOWN, or UNKNOWN at the current time.
     *
     */
    "databaseStatus": model.MySqlDatabaseStatus;
    /**
     * The customer's selected type for HeatWave management.
     */
    "heatWaveManagementType"?: string;
    /**
     * Indicates whether HeatWave is enabled for the MySQL Database System or not.
     */
    "isHeatWaveEnabled"?: boolean;
    /**
     * The name of the HeatWave cluster.
     */
    "heatWaveClusterDisplayName"?: string;
    /**
     * The number of nodes in the HeatWave cluster. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "heatWaveNodeCount"?: number;
    /**
     * A list of the database health metrics like CPU, Storage, and Memory.
     */
    "metrics": Array<model.MySqlFleetMetricDefinition>;
}
export declare namespace MySqlDatabaseUsageMetrics {
    function getJsonObj(obj: MySqlDatabaseUsageMetrics): object;
    function getDeserializedJsonObj(obj: MySqlDatabaseUsageMetrics): object;
}
