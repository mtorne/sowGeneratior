/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The standby database details.
 */
export interface StandByDatabaseDataguardMetrics {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    "dbId": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the Managed Database resides.
     */
    "compartmentId": string;
    /**
     * The database ID of the Managed Database. Every database had its own ID and that value is captured here.
     */
    "databaseId"?: string;
    /**
     * The display name of the Managed Database.
     */
    "databaseName": string;
    /**
     * The database unique name of the Managed Database.
     */
    "dbUniqueName"?: string;
    /**
     * The database role of the Managed Database.
     */
    "dbRole": model.DbRole;
    /**
     * A list of standby databases with latest values for metrics such as ApplyLag, TransportLag, and RedoApplyRate.
     */
    "metrics": Array<model.HaMetricDefinition>;
}
export declare namespace StandByDatabaseDataguardMetrics {
    function getJsonObj(obj: StandByDatabaseDataguardMetrics): object;
    function getDeserializedJsonObj(obj: StandByDatabaseDataguardMetrics): object;
}
