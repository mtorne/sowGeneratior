/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems.
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { DbManagementWaiter } from "./dbmanagement-waiter";
import { ManagedMySqlDatabasesWaiter } from "./managedmysqldatabases-waiter";
declare const Breaker: any;
export declare enum DbManagementApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class DbManagementClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": DbManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new DbManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): DbManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): DbManagementWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Adds data files or temp files to the tablespace.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AddDataFilesRequest
     * @return AddDataFilesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/AddDataFiles.ts.html |here} to see how to use AddDataFiles API.
     */
    addDataFiles(addDataFilesRequest: requests.AddDataFilesRequest): Promise<responses.AddDataFilesResponse>;
    /**
     * Adds a Managed Database to a specific Managed Database Group.
     * After the database is added, it will be included in the
     * management activities performed on the Managed Database Group.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AddManagedDatabaseToManagedDatabaseGroupRequest
     * @return AddManagedDatabaseToManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/AddManagedDatabaseToManagedDatabaseGroup.ts.html |here} to see how to use AddManagedDatabaseToManagedDatabaseGroup API.
     */
    addManagedDatabaseToManagedDatabaseGroup(addManagedDatabaseToManagedDatabaseGroupRequest: requests.AddManagedDatabaseToManagedDatabaseGroupRequest): Promise<responses.AddManagedDatabaseToManagedDatabaseGroupResponse>;
    /**
     * Lists the metadata for each ADDM task who's end snapshot time falls within the provided start and end time. Details include
     * the name of the ADDM task, description, user, status and creation date time.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AddmTasksRequest
     * @return AddmTasksResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/AddmTasks.ts.html |here} to see how to use AddmTasks API.
     */
    addmTasks(addmTasksRequest: requests.AddmTasksRequest): Promise<responses.AddmTasksResponse>;
    /**
       * Changes database parameter values. There are two kinds of database
  * parameters:
  * <p>
  - Dynamic parameters: They can be changed for the current Oracle
  * Database instance. The changes take effect immediately.
  * - Static parameters: They cannot be changed for the current instance.
  * You must change these parameters and then restart the database before
  * changes take effect.
  * <p>
  **Note:** If the instance is started using a text initialization
  * parameter file, the parameter changes are applicable only for the
  * current instance. You must update them manually to be passed to
  * a future instance.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ChangeDatabaseParametersRequest
       * @return ChangeDatabaseParametersResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeDatabaseParameters.ts.html |here} to see how to use ChangeDatabaseParameters API.
       */
    changeDatabaseParameters(changeDatabaseParametersRequest: requests.ChangeDatabaseParametersRequest): Promise<responses.ChangeDatabaseParametersResponse>;
    /**
     * Moves the Database Management private endpoint and its dependent resources to the specified compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeDbManagementPrivateEndpointCompartmentRequest
     * @return ChangeDbManagementPrivateEndpointCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeDbManagementPrivateEndpointCompartment.ts.html |here} to see how to use ChangeDbManagementPrivateEndpointCompartment API.
     */
    changeDbManagementPrivateEndpointCompartment(changeDbManagementPrivateEndpointCompartmentRequest: requests.ChangeDbManagementPrivateEndpointCompartmentRequest): Promise<responses.ChangeDbManagementPrivateEndpointCompartmentResponse>;
    /**
     * Moves the external DB system and its related resources (excluding databases) to the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeExternalDbSystemCompartmentRequest
     * @return ChangeExternalDbSystemCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeExternalDbSystemCompartment.ts.html |here} to see how to use ChangeExternalDbSystemCompartment API.
     */
    changeExternalDbSystemCompartment(changeExternalDbSystemCompartmentRequest: requests.ChangeExternalDbSystemCompartmentRequest): Promise<responses.ChangeExternalDbSystemCompartmentResponse>;
    /**
     * Moves the Exadata infrastructure and its related resources (Exadata storage server, Exadata storage server connectors and Exadata storage server grid) to the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeExternalExadataInfrastructureCompartmentRequest
     * @return ChangeExternalExadataInfrastructureCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeExternalExadataInfrastructureCompartment.ts.html |here} to see how to use ChangeExternalExadataInfrastructureCompartment API.
     */
    changeExternalExadataInfrastructureCompartment(changeExternalExadataInfrastructureCompartmentRequest: requests.ChangeExternalExadataInfrastructureCompartmentRequest): Promise<responses.ChangeExternalExadataInfrastructureCompartmentResponse>;
    /**
     * Moves a job.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeJobCompartmentRequest
     * @return ChangeJobCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeJobCompartment.ts.html |here} to see how to use ChangeJobCompartment API.
     */
    changeJobCompartment(changeJobCompartmentRequest: requests.ChangeJobCompartmentRequest): Promise<responses.ChangeJobCompartmentResponse>;
    /**
     * Moves a Managed Database Group to a different compartment.
     * The destination compartment must not have a Managed Database Group
     * with the same name.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeManagedDatabaseGroupCompartmentRequest
     * @return ChangeManagedDatabaseGroupCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeManagedDatabaseGroupCompartment.ts.html |here} to see how to use ChangeManagedDatabaseGroupCompartment API.
     */
    changeManagedDatabaseGroupCompartment(changeManagedDatabaseGroupCompartmentRequest: requests.ChangeManagedDatabaseGroupCompartmentRequest): Promise<responses.ChangeManagedDatabaseGroupCompartmentResponse>;
    /**
     * Moves a named credential to a different compartment.
     * The destination compartment must not have a named credential
     * with the same name.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeNamedCredentialCompartmentRequest
     * @return ChangeNamedCredentialCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeNamedCredentialCompartment.ts.html |here} to see how to use ChangeNamedCredentialCompartment API.
     */
    changeNamedCredentialCompartment(changeNamedCredentialCompartmentRequest: requests.ChangeNamedCredentialCompartmentRequest): Promise<responses.ChangeNamedCredentialCompartmentResponse>;
    /**
       * Changes the retention period of unused plans. The period can range
  * between 5 and 523 weeks.
  * <p>
  The database purges plans that have not been used for longer than
  * the plan retention period.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ChangePlanRetentionRequest
       * @return ChangePlanRetentionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangePlanRetention.ts.html |here} to see how to use ChangePlanRetention API.
       */
    changePlanRetention(changePlanRetentionRequest: requests.ChangePlanRetentionRequest): Promise<responses.ChangePlanRetentionResponse>;
    /**
     * Changes the disk space limit for the SQL Management Base. The allowable
     * range for this limit is between 1% and 50%.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSpaceBudgetRequest
     * @return ChangeSpaceBudgetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeSpaceBudget.ts.html |here} to see how to use ChangeSpaceBudget API.
     */
    changeSpaceBudget(changeSpaceBudgetRequest: requests.ChangeSpaceBudgetRequest): Promise<responses.ChangeSpaceBudgetResponse>;
    /**
     * Changes one or more attributes of a single plan or all plans associated with a SQL statement.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSqlPlanBaselinesAttributesRequest
     * @return ChangeSqlPlanBaselinesAttributesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeSqlPlanBaselinesAttributes.ts.html |here} to see how to use ChangeSqlPlanBaselinesAttributes API.
     */
    changeSqlPlanBaselinesAttributes(changeSqlPlanBaselinesAttributesRequest: requests.ChangeSqlPlanBaselinesAttributesRequest): Promise<responses.ChangeSqlPlanBaselinesAttributesResponse>;
    /**
     * Checks the status of the external DB system component connection specified in this connector.
     * This operation will refresh the connectionStatus and timeConnectionStatusLastUpdated fields.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CheckExternalDbSystemConnectorConnectionStatusRequest
     * @return CheckExternalDbSystemConnectorConnectionStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CheckExternalDbSystemConnectorConnectionStatus.ts.html |here} to see how to use CheckExternalDbSystemConnectorConnectionStatus API.
     */
    checkExternalDbSystemConnectorConnectionStatus(checkExternalDbSystemConnectorConnectionStatusRequest: requests.CheckExternalDbSystemConnectorConnectionStatusRequest): Promise<responses.CheckExternalDbSystemConnectorConnectionStatusResponse>;
    /**
     * Checks the status of the Exadata storage server connection specified by exadataStorageConnectorId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CheckExternalExadataStorageConnectorRequest
     * @return CheckExternalExadataStorageConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CheckExternalExadataStorageConnector.ts.html |here} to see how to use CheckExternalExadataStorageConnector API.
     */
    checkExternalExadataStorageConnector(checkExternalExadataStorageConnectorRequest: requests.CheckExternalExadataStorageConnectorRequest): Promise<responses.CheckExternalExadataStorageConnectorResponse>;
    /**
     * Check the status of the external database connection specified in this connector.
     * This operation will refresh the connectionStatus and timeConnectionStatusLastUpdated fields.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CheckExternalMySqlDatabaseConnectorConnectionStatusRequest
     * @return CheckExternalMySqlDatabaseConnectorConnectionStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CheckExternalMySqlDatabaseConnectorConnectionStatus.ts.html |here} to see how to use CheckExternalMySqlDatabaseConnectorConnectionStatus API.
     */
    checkExternalMySqlDatabaseConnectorConnectionStatus(checkExternalMySqlDatabaseConnectorConnectionStatusRequest: requests.CheckExternalMySqlDatabaseConnectorConnectionStatusRequest): Promise<responses.CheckExternalMySqlDatabaseConnectorConnectionStatusResponse>;
    /**
     * Configures automatic capture filters to capture only those statements
     * that match the filter criteria.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ConfigureAutomaticCaptureFiltersRequest
     * @return ConfigureAutomaticCaptureFiltersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ConfigureAutomaticCaptureFilters.ts.html |here} to see how to use ConfigureAutomaticCaptureFilters API.
     */
    configureAutomaticCaptureFilters(configureAutomaticCaptureFiltersRequest: requests.ConfigureAutomaticCaptureFiltersRequest): Promise<responses.ConfigureAutomaticCaptureFiltersResponse>;
    /**
     * Configures the Automatic SPM Evolve Advisor task `SYS_AUTO_SPM_EVOLVE_TASK`
     * by specifying task parameters. As the task is owned by `SYS`, only `SYS` can
     * set task parameters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ConfigureAutomaticSpmEvolveAdvisorTaskRequest
     * @return ConfigureAutomaticSpmEvolveAdvisorTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ConfigureAutomaticSpmEvolveAdvisorTask.ts.html |here} to see how to use ConfigureAutomaticSpmEvolveAdvisorTask API.
     */
    configureAutomaticSpmEvolveAdvisorTask(configureAutomaticSpmEvolveAdvisorTaskRequest: requests.ConfigureAutomaticSpmEvolveAdvisorTaskRequest): Promise<responses.ConfigureAutomaticSpmEvolveAdvisorTaskResponse>;
    /**
     * Creates a new Database Management private endpoint.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDbManagementPrivateEndpointRequest
     * @return CreateDbManagementPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateDbManagementPrivateEndpoint.ts.html |here} to see how to use CreateDbManagementPrivateEndpoint API.
     */
    createDbManagementPrivateEndpoint(createDbManagementPrivateEndpointRequest: requests.CreateDbManagementPrivateEndpointRequest): Promise<responses.CreateDbManagementPrivateEndpointResponse>;
    /**
     * Creates an external DB system and its related resources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalDbSystemRequest
     * @return CreateExternalDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalDbSystem.ts.html |here} to see how to use CreateExternalDbSystem API.
     */
    createExternalDbSystem(createExternalDbSystemRequest: requests.CreateExternalDbSystemRequest): Promise<responses.CreateExternalDbSystemResponse>;
    /**
     * Creates a new external connector.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalDbSystemConnectorRequest
     * @return CreateExternalDbSystemConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalDbSystemConnector.ts.html |here} to see how to use CreateExternalDbSystemConnector API.
     */
    createExternalDbSystemConnector(createExternalDbSystemConnectorRequest: requests.CreateExternalDbSystemConnectorRequest): Promise<responses.CreateExternalDbSystemConnectorResponse>;
    /**
     * Creates an external DB system discovery resource and initiates the discovery process.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalDbSystemDiscoveryRequest
     * @return CreateExternalDbSystemDiscoveryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalDbSystemDiscovery.ts.html |here} to see how to use CreateExternalDbSystemDiscovery API.
     */
    createExternalDbSystemDiscovery(createExternalDbSystemDiscoveryRequest: requests.CreateExternalDbSystemDiscoveryRequest): Promise<responses.CreateExternalDbSystemDiscoveryResponse>;
    /**
     * Creates an OCI resource for the Exadata infrastructure and enables the Monitoring service for the Exadata infrastructure.
     * The following resource/subresources are created:
     *   Infrastructure
     *   Storage server connectors
     *   Storage servers
     *   Storage grids
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalExadataInfrastructureRequest
     * @return CreateExternalExadataInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalExadataInfrastructure.ts.html |here} to see how to use CreateExternalExadataInfrastructure API.
     */
    createExternalExadataInfrastructure(createExternalExadataInfrastructureRequest: requests.CreateExternalExadataInfrastructureRequest): Promise<responses.CreateExternalExadataInfrastructureResponse>;
    /**
     * Creates the Exadata storage server connector after validating the connection information.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalExadataStorageConnectorRequest
     * @return CreateExternalExadataStorageConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalExadataStorageConnector.ts.html |here} to see how to use CreateExternalExadataStorageConnector API.
     */
    createExternalExadataStorageConnector(createExternalExadataStorageConnectorRequest: requests.CreateExternalExadataStorageConnectorRequest): Promise<responses.CreateExternalExadataStorageConnectorResponse>;
    /**
     * Creates an external MySQL database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalMySqlDatabaseRequest
     * @return CreateExternalMySqlDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalMySqlDatabase.ts.html |here} to see how to use CreateExternalMySqlDatabase API.
     */
    createExternalMySqlDatabase(createExternalMySqlDatabaseRequest: requests.CreateExternalMySqlDatabaseRequest): Promise<responses.CreateExternalMySqlDatabaseResponse>;
    /**
     * Creates an external MySQL connector resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateExternalMySqlDatabaseConnectorRequest
     * @return CreateExternalMySqlDatabaseConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateExternalMySqlDatabaseConnector.ts.html |here} to see how to use CreateExternalMySqlDatabaseConnector API.
     */
    createExternalMySqlDatabaseConnector(createExternalMySqlDatabaseConnectorRequest: requests.CreateExternalMySqlDatabaseConnectorRequest): Promise<responses.CreateExternalMySqlDatabaseConnectorResponse>;
    /**
     * Creates a job to be executed on a Managed Database or Managed Database Group. Only one
     * of the parameters, managedDatabaseId or managedDatabaseGroupId should be provided as
     * input in CreateJobDetails resource in request body.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateJobRequest
     * @return CreateJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateJob.ts.html |here} to see how to use CreateJob API.
     */
    createJob(createJobRequest: requests.CreateJobRequest): Promise<responses.CreateJobResponse>;
    /**
     * Creates a Managed Database Group. The group does not contain any
     * Managed Databases when it is created, and they must be added later.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateManagedDatabaseGroupRequest
     * @return CreateManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateManagedDatabaseGroup.ts.html |here} to see how to use CreateManagedDatabaseGroup API.
     */
    createManagedDatabaseGroup(createManagedDatabaseGroupRequest: requests.CreateManagedDatabaseGroupRequest): Promise<responses.CreateManagedDatabaseGroupResponse>;
    /**
     * Creates a named credential.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateNamedCredentialRequest
     * @return CreateNamedCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateNamedCredential.ts.html |here} to see how to use CreateNamedCredential API.
     */
    createNamedCredential(createNamedCredentialRequest: requests.CreateNamedCredentialRequest): Promise<responses.CreateNamedCredentialResponse>;
    /**
     * Creates a tablespace within the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateTablespaceRequest
     * @return CreateTablespaceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateTablespace.ts.html |here} to see how to use CreateTablespace API.
     */
    createTablespace(createTablespaceRequest: requests.CreateTablespaceRequest): Promise<responses.CreateTablespaceResponse>;
    /**
     * Deletes a specific Database Management private endpoint.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDbManagementPrivateEndpointRequest
     * @return DeleteDbManagementPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteDbManagementPrivateEndpoint.ts.html |here} to see how to use DeleteDbManagementPrivateEndpoint API.
     */
    deleteDbManagementPrivateEndpoint(deleteDbManagementPrivateEndpointRequest: requests.DeleteDbManagementPrivateEndpointRequest): Promise<responses.DeleteDbManagementPrivateEndpointResponse>;
    /**
     * Deletes the external DB system specified by `externalDbSystemId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalDbSystemRequest
     * @return DeleteExternalDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalDbSystem.ts.html |here} to see how to use DeleteExternalDbSystem API.
     */
    deleteExternalDbSystem(deleteExternalDbSystemRequest: requests.DeleteExternalDbSystemRequest): Promise<responses.DeleteExternalDbSystemResponse>;
    /**
     * Deletes the external connector specified by `externalDbSystemConnectorId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalDbSystemConnectorRequest
     * @return DeleteExternalDbSystemConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalDbSystemConnector.ts.html |here} to see how to use DeleteExternalDbSystemConnector API.
     */
    deleteExternalDbSystemConnector(deleteExternalDbSystemConnectorRequest: requests.DeleteExternalDbSystemConnectorRequest): Promise<responses.DeleteExternalDbSystemConnectorResponse>;
    /**
     * Deletes the external DB system discovery resource specified by `externalDbSystemDiscoveryId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalDbSystemDiscoveryRequest
     * @return DeleteExternalDbSystemDiscoveryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalDbSystemDiscovery.ts.html |here} to see how to use DeleteExternalDbSystemDiscovery API.
     */
    deleteExternalDbSystemDiscovery(deleteExternalDbSystemDiscoveryRequest: requests.DeleteExternalDbSystemDiscoveryRequest): Promise<responses.DeleteExternalDbSystemDiscoveryResponse>;
    /**
     * Deletes the Exadata infrastructure specified by externalExadataInfrastructureId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalExadataInfrastructureRequest
     * @return DeleteExternalExadataInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalExadataInfrastructure.ts.html |here} to see how to use DeleteExternalExadataInfrastructure API.
     */
    deleteExternalExadataInfrastructure(deleteExternalExadataInfrastructureRequest: requests.DeleteExternalExadataInfrastructureRequest): Promise<responses.DeleteExternalExadataInfrastructureResponse>;
    /**
     * Deletes the Exadata storage server connector specified by exadataStorageConnectorId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalExadataStorageConnectorRequest
     * @return DeleteExternalExadataStorageConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalExadataStorageConnector.ts.html |here} to see how to use DeleteExternalExadataStorageConnector API.
     */
    deleteExternalExadataStorageConnector(deleteExternalExadataStorageConnectorRequest: requests.DeleteExternalExadataStorageConnectorRequest): Promise<responses.DeleteExternalExadataStorageConnectorResponse>;
    /**
     * Deletes the Oracle Cloud Infrastructure resource representing an external MySQL database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalMySqlDatabaseRequest
     * @return DeleteExternalMySqlDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalMySqlDatabase.ts.html |here} to see how to use DeleteExternalMySqlDatabase API.
     */
    deleteExternalMySqlDatabase(deleteExternalMySqlDatabaseRequest: requests.DeleteExternalMySqlDatabaseRequest): Promise<responses.DeleteExternalMySqlDatabaseResponse>;
    /**
     * Deletes the Oracle Cloud Infrastructure resource representing an external MySQL database connector.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteExternalMySqlDatabaseConnectorRequest
     * @return DeleteExternalMySqlDatabaseConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteExternalMySqlDatabaseConnector.ts.html |here} to see how to use DeleteExternalMySqlDatabaseConnector API.
     */
    deleteExternalMySqlDatabaseConnector(deleteExternalMySqlDatabaseConnectorRequest: requests.DeleteExternalMySqlDatabaseConnectorRequest): Promise<responses.DeleteExternalMySqlDatabaseConnectorResponse>;
    /**
     * Deletes the job specified by jobId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteJobRequest
     * @return DeleteJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteJob.ts.html |here} to see how to use DeleteJob API.
     */
    deleteJob(deleteJobRequest: requests.DeleteJobRequest): Promise<responses.DeleteJobResponse>;
    /**
     * Deletes the Managed Database Group specified by managedDatabaseGroupId.
     * If the group contains Managed Databases, then it cannot be deleted.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteManagedDatabaseGroupRequest
     * @return DeleteManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteManagedDatabaseGroup.ts.html |here} to see how to use DeleteManagedDatabaseGroup API.
     */
    deleteManagedDatabaseGroup(deleteManagedDatabaseGroupRequest: requests.DeleteManagedDatabaseGroupRequest): Promise<responses.DeleteManagedDatabaseGroupResponse>;
    /**
     * Deletes the named credential specified by namedCredentialId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteNamedCredentialRequest
     * @return DeleteNamedCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeleteNamedCredential.ts.html |here} to see how to use DeleteNamedCredential API.
     */
    deleteNamedCredential(deleteNamedCredentialRequest: requests.DeleteNamedCredentialRequest): Promise<responses.DeleteNamedCredentialResponse>;
    /**
     * Deletes the preferred credential based on the credentialName.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeletePreferredCredentialRequest
     * @return DeletePreferredCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DeletePreferredCredential.ts.html |here} to see how to use DeletePreferredCredential API.
     */
    deletePreferredCredential(deletePreferredCredentialRequest: requests.DeletePreferredCredentialRequest): Promise<responses.DeletePreferredCredentialResponse>;
    /**
     * Disables automatic initial plan capture.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DisableAutomaticInitialPlanCaptureRequest
     * @return DisableAutomaticInitialPlanCaptureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableAutomaticInitialPlanCapture.ts.html |here} to see how to use DisableAutomaticInitialPlanCapture API.
     */
    disableAutomaticInitialPlanCapture(disableAutomaticInitialPlanCaptureRequest: requests.DisableAutomaticInitialPlanCaptureRequest): Promise<responses.DisableAutomaticInitialPlanCaptureResponse>;
    /**
       * Disables the Automatic SPM Evolve Advisor task.
  * <p>
  One client controls both Automatic SQL Tuning Advisor and Automatic SPM Evolve Advisor.
  * Thus, the same task enables or disables both.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DisableAutomaticSpmEvolveAdvisorTaskRequest
       * @return DisableAutomaticSpmEvolveAdvisorTaskResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableAutomaticSpmEvolveAdvisorTask.ts.html |here} to see how to use DisableAutomaticSpmEvolveAdvisorTask API.
       */
    disableAutomaticSpmEvolveAdvisorTask(disableAutomaticSpmEvolveAdvisorTaskRequest: requests.DisableAutomaticSpmEvolveAdvisorTaskRequest): Promise<responses.DisableAutomaticSpmEvolveAdvisorTaskResponse>;
    /**
     * Disables a Database Management feature for the specified Autonomous Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableAutonomousDatabaseManagementFeatureRequest
     * @return DisableAutonomousDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableAutonomousDatabaseManagementFeature.ts.html |here} to see how to use DisableAutonomousDatabaseManagementFeature API.
     */
    disableAutonomousDatabaseManagementFeature(disableAutonomousDatabaseManagementFeatureRequest: requests.DisableAutonomousDatabaseManagementFeatureRequest): Promise<responses.DisableAutonomousDatabaseManagementFeatureResponse>;
    /**
     * Disables a Database Management feature for the specified Oracle cloud database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableDatabaseManagementFeatureRequest
     * @return DisableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableDatabaseManagementFeature.ts.html |here} to see how to use DisableDatabaseManagementFeature API.
     */
    disableDatabaseManagementFeature(disableDatabaseManagementFeatureRequest: requests.DisableDatabaseManagementFeatureRequest): Promise<responses.DisableDatabaseManagementFeatureResponse>;
    /**
     * Disables a Database Management feature for the specified external container database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalContainerDatabaseManagementFeatureRequest
     * @return DisableExternalContainerDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalContainerDatabaseManagementFeature.ts.html |here} to see how to use DisableExternalContainerDatabaseManagementFeature API.
     */
    disableExternalContainerDatabaseManagementFeature(disableExternalContainerDatabaseManagementFeatureRequest: requests.DisableExternalContainerDatabaseManagementFeatureRequest): Promise<responses.DisableExternalContainerDatabaseManagementFeatureResponse>;
    /**
     * Disables Database Management service for all the components of the specified
     * external DB system (except databases).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalDbSystemDatabaseManagementRequest
     * @return DisableExternalDbSystemDatabaseManagementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalDbSystemDatabaseManagement.ts.html |here} to see how to use DisableExternalDbSystemDatabaseManagement API.
     */
    disableExternalDbSystemDatabaseManagement(disableExternalDbSystemDatabaseManagementRequest: requests.DisableExternalDbSystemDatabaseManagementRequest): Promise<responses.DisableExternalDbSystemDatabaseManagementResponse>;
    /**
     * Disables Stack Monitoring for all the components of the specified
     * external DB system (except databases).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalDbSystemStackMonitoringRequest
     * @return DisableExternalDbSystemStackMonitoringResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalDbSystemStackMonitoring.ts.html |here} to see how to use DisableExternalDbSystemStackMonitoring API.
     */
    disableExternalDbSystemStackMonitoring(disableExternalDbSystemStackMonitoringRequest: requests.DisableExternalDbSystemStackMonitoringRequest): Promise<responses.DisableExternalDbSystemStackMonitoringResponse>;
    /**
       * Disables Database Management for the Exadata infrastructure specified by externalExadataInfrastructureId.
  * It covers the following components:
  * <p>
  - Exadata infrastructure
  * - Exadata storage grid
  * - Exadata storage server
  * <p>
  Note that Database Management will not be disabled for the DB systems within the Exadata infrastructure and should be disabled explicitly, if required.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param DisableExternalExadataInfrastructureManagementRequest
       * @return DisableExternalExadataInfrastructureManagementResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalExadataInfrastructureManagement.ts.html |here} to see how to use DisableExternalExadataInfrastructureManagement API.
       */
    disableExternalExadataInfrastructureManagement(disableExternalExadataInfrastructureManagementRequest: requests.DisableExternalExadataInfrastructureManagementRequest): Promise<responses.DisableExternalExadataInfrastructureManagementResponse>;
    /**
     * Disables Database Management for an external MySQL Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalMySqlDatabaseManagementRequest
     * @return DisableExternalMySqlDatabaseManagementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalMySqlDatabaseManagement.ts.html |here} to see how to use DisableExternalMySqlDatabaseManagement API.
     */
    disableExternalMySqlDatabaseManagement(disableExternalMySqlDatabaseManagementRequest: requests.DisableExternalMySqlDatabaseManagementRequest): Promise<responses.DisableExternalMySqlDatabaseManagementResponse>;
    /**
     * Disables a Database Management feature for the specified external non-container database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalNonContainerDatabaseManagementFeatureRequest
     * @return DisableExternalNonContainerDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalNonContainerDatabaseManagementFeature.ts.html |here} to see how to use DisableExternalNonContainerDatabaseManagementFeature API.
     */
    disableExternalNonContainerDatabaseManagementFeature(disableExternalNonContainerDatabaseManagementFeatureRequest: requests.DisableExternalNonContainerDatabaseManagementFeatureRequest): Promise<responses.DisableExternalNonContainerDatabaseManagementFeatureResponse>;
    /**
     * Disables a Database Management feature for the specified external pluggable database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableExternalPluggableDatabaseManagementFeatureRequest
     * @return DisableExternalPluggableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableExternalPluggableDatabaseManagementFeature.ts.html |here} to see how to use DisableExternalPluggableDatabaseManagementFeature API.
     */
    disableExternalPluggableDatabaseManagementFeature(disableExternalPluggableDatabaseManagementFeatureRequest: requests.DisableExternalPluggableDatabaseManagementFeatureRequest): Promise<responses.DisableExternalPluggableDatabaseManagementFeatureResponse>;
    /**
       * Disables the high-frequency Automatic SPM Evolve Advisor task.
  * <p>
  It is available only on Oracle Exadata Database Machine, Oracle Database Exadata
  * Cloud Service (ExaCS) and Oracle Database Exadata Cloud@Customer (ExaCC).
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DisableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest
       * @return DisableHighFrequencyAutomaticSpmEvolveAdvisorTaskResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableHighFrequencyAutomaticSpmEvolveAdvisorTask.ts.html |here} to see how to use DisableHighFrequencyAutomaticSpmEvolveAdvisorTask API.
       */
    disableHighFrequencyAutomaticSpmEvolveAdvisorTask(disableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest: requests.DisableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest): Promise<responses.DisableHighFrequencyAutomaticSpmEvolveAdvisorTaskResponse>;
    /**
     * Disables a Database Management feature for the specified Oracle cloud pluggable database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisablePluggableDatabaseManagementFeatureRequest
     * @return DisablePluggableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisablePluggableDatabaseManagementFeature.ts.html |here} to see how to use DisablePluggableDatabaseManagementFeature API.
     */
    disablePluggableDatabaseManagementFeature(disablePluggableDatabaseManagementFeatureRequest: requests.DisablePluggableDatabaseManagementFeatureRequest): Promise<responses.DisablePluggableDatabaseManagementFeatureResponse>;
    /**
       * Disables the use of SQL plan baselines stored in SQL Management Base.
  * <p>
  When disabled, the optimizer does not use any SQL plan baselines.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param DisableSqlPlanBaselinesUsageRequest
       * @return DisableSqlPlanBaselinesUsageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DisableSqlPlanBaselinesUsage.ts.html |here} to see how to use DisableSqlPlanBaselinesUsage API.
       */
    disableSqlPlanBaselinesUsage(disableSqlPlanBaselinesUsageRequest: requests.DisableSqlPlanBaselinesUsageRequest): Promise<responses.DisableSqlPlanBaselinesUsageResponse>;
    /**
       * Completes the Exadata system prechecking on the following:
  * <p>
  - Verifies if the DB systems are valid RAC DB systems or return 400 status code with NON_RAC_DATABASE_SYSTEM error code.
  * - Verifies if the ASM connector defined for each DB system or return 400 status code with CONNECTOR_NOT_DEFINED error code.
  * - Verifies if the agents associated with ASM are valid and could be used for the Exadata storage servers or return 400 status code with
  * INVALID_AGENT error code.
  * - Verifies if it is an Exadata system or return 400 status code with INVALID_EXADATA_SYSTEM error code.
  * <p>
  Starts the discovery process for the Exadata system infrastructure. The following resources/components are discovered
  * <p>
  - Exadata storage servers from each DB systems
  * - Exadata storage grid for all Exadata storage servers
  * - Exadata infrastructure
  * <p>
  The same API covers both new discovery and rediscovery cases.
  *   For the new discovery case, new managed resources/sub-resources are created or the existing ones are overridden.
  *   For rediscovery case, the existing managed resources/sub-resources are checked to find out which ones should be added or which ones
  * should be
  *     removed based on the unique key defined for each resource/sub-resource.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param DiscoverExternalExadataInfrastructureRequest
       * @return DiscoverExternalExadataInfrastructureResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DiscoverExternalExadataInfrastructure.ts.html |here} to see how to use DiscoverExternalExadataInfrastructure API.
       */
    discoverExternalExadataInfrastructure(discoverExternalExadataInfrastructureRequest: requests.DiscoverExternalExadataInfrastructureRequest): Promise<responses.DiscoverExternalExadataInfrastructureResponse>;
    /**
     * Drops a single plan or all plans associated with a SQL statement.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DropSqlPlanBaselinesRequest
     * @return DropSqlPlanBaselinesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DropSqlPlanBaselines.ts.html |here} to see how to use DropSqlPlanBaselines API.
     */
    dropSqlPlanBaselines(dropSqlPlanBaselinesRequest: requests.DropSqlPlanBaselinesRequest): Promise<responses.DropSqlPlanBaselinesResponse>;
    /**
     * Drops the tablespace specified by tablespaceName within the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DropTablespaceRequest
     * @return DropTablespaceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DropTablespace.ts.html |here} to see how to use DropTablespace API.
     */
    dropTablespace(dropTablespaceRequest: requests.DropTablespaceRequest): Promise<responses.DropTablespaceResponse>;
    /**
       * Enables automatic initial plan capture. When enabled, the database checks whether
  * executed SQL statements are eligible for automatic capture. It creates initial
  * plan baselines for eligible statements.
  * <p>
  By default, the database creates a SQL plan baseline for every eligible repeatable
  * statement, including all recursive SQL and monitoring SQL. Thus, automatic capture
  * may result in the creation of an extremely large number of plan baselines. To limit
  * the statements that are eligible for plan baselines, configure filters.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param EnableAutomaticInitialPlanCaptureRequest
       * @return EnableAutomaticInitialPlanCaptureResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableAutomaticInitialPlanCapture.ts.html |here} to see how to use EnableAutomaticInitialPlanCapture API.
       */
    enableAutomaticInitialPlanCapture(enableAutomaticInitialPlanCaptureRequest: requests.EnableAutomaticInitialPlanCaptureRequest): Promise<responses.EnableAutomaticInitialPlanCaptureResponse>;
    /**
       * Enables the Automatic SPM Evolve Advisor task. By default, the automatic task
  * `SYS_AUTO_SPM_EVOLVE_TASK` runs every day in the scheduled maintenance window.
  * <p>
  The SPM Evolve Advisor performs the following tasks:
  * <p>
  - Checks AWR for top SQL
  * - Looks for alternative plans in all available sources
  * - Adds unaccepted plans to the plan history
  * - Tests the execution of as many plans as possible during the maintenance window
  * - Adds the alternative plan to the baseline if it performs better than the current plan
  * <p>
  One client controls both Automatic SQL Tuning Advisor and Automatic SPM Evolve Advisor.
  * Thus, the same task enables or disables both.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param EnableAutomaticSpmEvolveAdvisorTaskRequest
       * @return EnableAutomaticSpmEvolveAdvisorTaskResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableAutomaticSpmEvolveAdvisorTask.ts.html |here} to see how to use EnableAutomaticSpmEvolveAdvisorTask API.
       */
    enableAutomaticSpmEvolveAdvisorTask(enableAutomaticSpmEvolveAdvisorTaskRequest: requests.EnableAutomaticSpmEvolveAdvisorTaskRequest): Promise<responses.EnableAutomaticSpmEvolveAdvisorTaskResponse>;
    /**
     * Enables a Database Management feature for the specified Autonomous Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableAutonomousDatabaseManagementFeatureRequest
     * @return EnableAutonomousDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableAutonomousDatabaseManagementFeature.ts.html |here} to see how to use EnableAutonomousDatabaseManagementFeature API.
     */
    enableAutonomousDatabaseManagementFeature(enableAutonomousDatabaseManagementFeatureRequest: requests.EnableAutonomousDatabaseManagementFeatureRequest): Promise<responses.EnableAutonomousDatabaseManagementFeatureResponse>;
    /**
     * Enables a Database Management feature for the specified cloud database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableDatabaseManagementFeatureRequest
     * @return EnableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableDatabaseManagementFeature.ts.html |here} to see how to use EnableDatabaseManagementFeature API.
     */
    enableDatabaseManagementFeature(enableDatabaseManagementFeatureRequest: requests.EnableDatabaseManagementFeatureRequest): Promise<responses.EnableDatabaseManagementFeatureResponse>;
    /**
     * Enables a Database Management feature for the specified external container database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalContainerDatabaseManagementFeatureRequest
     * @return EnableExternalContainerDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalContainerDatabaseManagementFeature.ts.html |here} to see how to use EnableExternalContainerDatabaseManagementFeature API.
     */
    enableExternalContainerDatabaseManagementFeature(enableExternalContainerDatabaseManagementFeatureRequest: requests.EnableExternalContainerDatabaseManagementFeatureRequest): Promise<responses.EnableExternalContainerDatabaseManagementFeatureResponse>;
    /**
     * Enables Database Management service for all the components of the specified
     * external DB system (except databases).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalDbSystemDatabaseManagementRequest
     * @return EnableExternalDbSystemDatabaseManagementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalDbSystemDatabaseManagement.ts.html |here} to see how to use EnableExternalDbSystemDatabaseManagement API.
     */
    enableExternalDbSystemDatabaseManagement(enableExternalDbSystemDatabaseManagementRequest: requests.EnableExternalDbSystemDatabaseManagementRequest): Promise<responses.EnableExternalDbSystemDatabaseManagementResponse>;
    /**
     * Enables Stack Monitoring for all the components of the specified
     * external DB system (except databases).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalDbSystemStackMonitoringRequest
     * @return EnableExternalDbSystemStackMonitoringResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalDbSystemStackMonitoring.ts.html |here} to see how to use EnableExternalDbSystemStackMonitoring API.
     */
    enableExternalDbSystemStackMonitoring(enableExternalDbSystemStackMonitoringRequest: requests.EnableExternalDbSystemStackMonitoringRequest): Promise<responses.EnableExternalDbSystemStackMonitoringResponse>;
    /**
       * Enables Database Management for the Exadata infrastructure specified by externalExadataInfrastructureId. It covers the following
  * components:
  * <p>
  - Exadata infrastructure
  * - Exadata storage grid
  * - Exadata storage server
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param EnableExternalExadataInfrastructureManagementRequest
       * @return EnableExternalExadataInfrastructureManagementResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalExadataInfrastructureManagement.ts.html |here} to see how to use EnableExternalExadataInfrastructureManagement API.
       */
    enableExternalExadataInfrastructureManagement(enableExternalExadataInfrastructureManagementRequest: requests.EnableExternalExadataInfrastructureManagementRequest): Promise<responses.EnableExternalExadataInfrastructureManagementResponse>;
    /**
     * Enables Database Management for an external MySQL Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalMySqlDatabaseManagementRequest
     * @return EnableExternalMySqlDatabaseManagementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalMySqlDatabaseManagement.ts.html |here} to see how to use EnableExternalMySqlDatabaseManagement API.
     */
    enableExternalMySqlDatabaseManagement(enableExternalMySqlDatabaseManagementRequest: requests.EnableExternalMySqlDatabaseManagementRequest): Promise<responses.EnableExternalMySqlDatabaseManagementResponse>;
    /**
     * Enables Database Management feature for the specified external non-container database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalNonContainerDatabaseManagementFeatureRequest
     * @return EnableExternalNonContainerDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalNonContainerDatabaseManagementFeature.ts.html |here} to see how to use EnableExternalNonContainerDatabaseManagementFeature API.
     */
    enableExternalNonContainerDatabaseManagementFeature(enableExternalNonContainerDatabaseManagementFeatureRequest: requests.EnableExternalNonContainerDatabaseManagementFeatureRequest): Promise<responses.EnableExternalNonContainerDatabaseManagementFeatureResponse>;
    /**
     * Enables a Database Management feature for the specified external pluggable database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnableExternalPluggableDatabaseManagementFeatureRequest
     * @return EnableExternalPluggableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableExternalPluggableDatabaseManagementFeature.ts.html |here} to see how to use EnableExternalPluggableDatabaseManagementFeature API.
     */
    enableExternalPluggableDatabaseManagementFeature(enableExternalPluggableDatabaseManagementFeatureRequest: requests.EnableExternalPluggableDatabaseManagementFeatureRequest): Promise<responses.EnableExternalPluggableDatabaseManagementFeatureResponse>;
    /**
       * Enables the high-frequency Automatic SPM Evolve Advisor task. The high-frequency
  * task runs every hour and runs for no longer than 30 minutes. These settings
  * are not configurable.
  * <p>
  The high-frequency task complements the standard Automatic SPM Evolve Advisor task.
  * They are independent and are scheduled through two different frameworks.
  * <p>
  It is available only on Oracle Exadata Database Machine, Oracle Database Exadata
  * Cloud Service (ExaCS) and Oracle Database Exadata Cloud@Customer (ExaCC).
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param EnableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest
       * @return EnableHighFrequencyAutomaticSpmEvolveAdvisorTaskResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableHighFrequencyAutomaticSpmEvolveAdvisorTask.ts.html |here} to see how to use EnableHighFrequencyAutomaticSpmEvolveAdvisorTask API.
       */
    enableHighFrequencyAutomaticSpmEvolveAdvisorTask(enableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest: requests.EnableHighFrequencyAutomaticSpmEvolveAdvisorTaskRequest): Promise<responses.EnableHighFrequencyAutomaticSpmEvolveAdvisorTaskResponse>;
    /**
     * Enables a Database Management feature for the specified Oracle cloud pluggable database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EnablePluggableDatabaseManagementFeatureRequest
     * @return EnablePluggableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnablePluggableDatabaseManagementFeature.ts.html |here} to see how to use EnablePluggableDatabaseManagementFeature API.
     */
    enablePluggableDatabaseManagementFeature(enablePluggableDatabaseManagementFeatureRequest: requests.EnablePluggableDatabaseManagementFeatureRequest): Promise<responses.EnablePluggableDatabaseManagementFeatureResponse>;
    /**
       * Enables the use of SQL plan baselines stored in SQL Management Base.
  * <p>
  When enabled, the optimizer uses SQL plan baselines to select plans
  * to avoid potential performance regressions.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param EnableSqlPlanBaselinesUsageRequest
       * @return EnableSqlPlanBaselinesUsageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/EnableSqlPlanBaselinesUsage.ts.html |here} to see how to use EnableSqlPlanBaselinesUsage API.
       */
    enableSqlPlanBaselinesUsage(enableSqlPlanBaselinesUsageRequest: requests.EnableSqlPlanBaselinesUsageRequest): Promise<responses.EnableSqlPlanBaselinesUsageResponse>;
    /**
     * Creates an AWR snapshot for the target database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GenerateAwrSnapshotRequest
     * @return GenerateAwrSnapshotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GenerateAwrSnapshot.ts.html |here} to see how to use GenerateAwrSnapshot API.
     */
    generateAwrSnapshot(generateAwrSnapshotRequest: requests.GenerateAwrSnapshotRequest): Promise<responses.GenerateAwrSnapshotResponse>;
    /**
     * Gets the AWR report for the specific database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAwrDbReportRequest
     * @return GetAwrDbReportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetAwrDbReport.ts.html |here} to see how to use GetAwrDbReport API.
     */
    getAwrDbReport(getAwrDbReportRequest: requests.GetAwrDbReportRequest): Promise<responses.GetAwrDbReportResponse>;
    /**
     * Gets the SQL health check report for one SQL of the specific database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAwrDbSqlReportRequest
     * @return GetAwrDbSqlReportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetAwrDbSqlReport.ts.html |here} to see how to use GetAwrDbSqlReport API.
     */
    getAwrDbSqlReport(getAwrDbSqlReportRequest: requests.GetAwrDbSqlReportRequest): Promise<responses.GetAwrDbSqlReportResponse>;
    /**
     * Gets the metrics related to cluster cache for the Oracle
     * Real Application Clusters (Oracle RAC) database specified
     * by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetClusterCacheMetricRequest
     * @return GetClusterCacheMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetClusterCacheMetric.ts.html |here} to see how to use GetClusterCacheMetric API.
     */
    getClusterCacheMetric(getClusterCacheMetricRequest: requests.GetClusterCacheMetricRequest): Promise<responses.GetClusterCacheMetricResponse>;
    /**
     * Gets the fleet of container databases (CDBs) and their backup details and metrics, in a compartment or Database Group.
     * The databaseHostedIn query parameter must be provided to list either cloud or external databases.
     * Either the CompartmentId or the ManagedDatabaseGroupId query parameters must be provided to retrieve the HA and backup metrics.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDatabaseFleetBackupMetricsRequest
     * @return GetDatabaseFleetBackupMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseFleetBackupMetrics.ts.html |here} to see how to use GetDatabaseFleetBackupMetrics API.
     */
    getDatabaseFleetBackupMetrics(getDatabaseFleetBackupMetricsRequest: requests.GetDatabaseFleetBackupMetricsRequest): Promise<responses.GetDatabaseFleetBackupMetricsResponse>;
    /**
     * Gets the fleet of Oracle Data Guard-enabled container databases (CDBs) along with Data Guard metrics and standby databases, in a compartment or Database Group.
     * Either the CompartmentId or the ManagedDatabaseGroupId query parameters must be provided to retrieve the list of databases and Data Guard metrics.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDatabaseFleetDataguardMetricsRequest
     * @return GetDatabaseFleetDataguardMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseFleetDataguardMetrics.ts.html |here} to see how to use GetDatabaseFleetDataguardMetrics API.
     */
    getDatabaseFleetDataguardMetrics(getDatabaseFleetDataguardMetricsRequest: requests.GetDatabaseFleetDataguardMetricsRequest): Promise<responses.GetDatabaseFleetDataguardMetricsResponse>;
    /**
     * Gets the fleet of container databases (CDBs) and their HA and backup metrics in a compartment or in a Database Group.
     * Either the CompartmentId or the ManagedDatabaseGroupId query parameters must be provided to retrieve the HA and backup metrics.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDatabaseFleetHaOverviewMetricsRequest
     * @return GetDatabaseFleetHaOverviewMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseFleetHaOverviewMetrics.ts.html |here} to see how to use GetDatabaseFleetHaOverviewMetrics API.
     */
    getDatabaseFleetHaOverviewMetrics(getDatabaseFleetHaOverviewMetricsRequest: requests.GetDatabaseFleetHaOverviewMetricsRequest): Promise<responses.GetDatabaseFleetHaOverviewMetricsResponse>;
    /**
     * Gets the health metrics for a fleet of databases in a compartment or in a Managed Database Group.
     * Either the CompartmentId or the ManagedDatabaseGroupId query parameters must be provided to retrieve the health metrics.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDatabaseFleetHealthMetricsRequest
     * @return GetDatabaseFleetHealthMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseFleetHealthMetrics.ts.html |here} to see how to use GetDatabaseFleetHealthMetrics API.
     */
    getDatabaseFleetHealthMetrics(getDatabaseFleetHealthMetricsRequest: requests.GetDatabaseFleetHealthMetricsRequest): Promise<responses.GetDatabaseFleetHealthMetricsResponse>;
    /**
     * Gets HA and backup details with metrics and backup history for a single database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDatabaseHaBackupDetailsRequest
     * @return GetDatabaseHaBackupDetailsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseHaBackupDetails.ts.html |here} to see how to use GetDatabaseHaBackupDetails API.
     */
    getDatabaseHaBackupDetails(getDatabaseHaBackupDetailsRequest: requests.GetDatabaseHaBackupDetailsRequest): Promise<responses.GetDatabaseHaBackupDetailsResponse>;
    /**
     * Gets a summary of the activity and resource usage metrics like DB Time, CPU, User I/O, Wait, Storage, and Memory for a Managed Database.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDatabaseHomeMetricsRequest
     * @return GetDatabaseHomeMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDatabaseHomeMetrics.ts.html |here} to see how to use GetDatabaseHomeMetrics API.
     */
    getDatabaseHomeMetrics(getDatabaseHomeMetricsRequest: requests.GetDatabaseHomeMetricsRequest): Promise<responses.GetDatabaseHomeMetricsResponse>;
    /**
     * Gets a historical summary of the Database Guard performance metrics for Managed Databases.
     * If the peerDatabaseCompartmentId is specified, then the metrics are only retrieved from the specified compartment.
     * If the peerDatabaseCompartmentId is not specified, then the metrics are retrieved from the compartment of the Managed Database specified by the ManagedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDataguardPerformanceMetricsRequest
     * @return GetDataguardPerformanceMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDataguardPerformanceMetrics.ts.html |here} to see how to use GetDataguardPerformanceMetrics API.
     */
    getDataguardPerformanceMetrics(getDataguardPerformanceMetricsRequest: requests.GetDataguardPerformanceMetricsRequest): Promise<responses.GetDataguardPerformanceMetricsResponse>;
    /**
     * Gets the details of a specific Database Management private endpoint.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDbManagementPrivateEndpointRequest
     * @return GetDbManagementPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetDbManagementPrivateEndpoint.ts.html |here} to see how to use GetDbManagementPrivateEndpoint API.
     */
    getDbManagementPrivateEndpoint(getDbManagementPrivateEndpointRequest: requests.GetDbManagementPrivateEndpointRequest): Promise<responses.GetDbManagementPrivateEndpointResponse>;
    /**
     * Gets the details for the external ASM specified by `externalAsmId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalAsmRequest
     * @return GetExternalAsmResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalAsm.ts.html |here} to see how to use GetExternalAsm API.
     */
    getExternalAsm(getExternalAsmRequest: requests.GetExternalAsmRequest): Promise<responses.GetExternalAsmResponse>;
    /**
     * Gets configuration details including disk groups for the external ASM specified by `externalAsmId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalAsmConfigurationRequest
     * @return GetExternalAsmConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalAsmConfiguration.ts.html |here} to see how to use GetExternalAsmConfiguration API.
     */
    getExternalAsmConfiguration(getExternalAsmConfigurationRequest: requests.GetExternalAsmConfigurationRequest): Promise<responses.GetExternalAsmConfigurationResponse>;
    /**
     * Gets the details for the external ASM instance specified by `externalAsmInstanceId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalAsmInstanceRequest
     * @return GetExternalAsmInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalAsmInstance.ts.html |here} to see how to use GetExternalAsmInstance API.
     */
    getExternalAsmInstance(getExternalAsmInstanceRequest: requests.GetExternalAsmInstanceRequest): Promise<responses.GetExternalAsmInstanceResponse>;
    /**
     * Gets the details for the external cluster specified by `externalClusterId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalClusterRequest
     * @return GetExternalClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalCluster.ts.html |here} to see how to use GetExternalCluster API.
     */
    getExternalCluster(getExternalClusterRequest: requests.GetExternalClusterRequest): Promise<responses.GetExternalClusterResponse>;
    /**
     * Gets the details for the external cluster instance specified by `externalClusterInstanceId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalClusterInstanceRequest
     * @return GetExternalClusterInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalClusterInstance.ts.html |here} to see how to use GetExternalClusterInstance API.
     */
    getExternalClusterInstance(getExternalClusterInstanceRequest: requests.GetExternalClusterInstanceRequest): Promise<responses.GetExternalClusterInstanceResponse>;
    /**
     * Gets the details for the external DB home specified by `externalDbHomeId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalDbHomeRequest
     * @return GetExternalDbHomeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalDbHome.ts.html |here} to see how to use GetExternalDbHome API.
     */
    getExternalDbHome(getExternalDbHomeRequest: requests.GetExternalDbHomeRequest): Promise<responses.GetExternalDbHomeResponse>;
    /**
     * Gets the details for the external DB node specified by `externalDbNodeId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalDbNodeRequest
     * @return GetExternalDbNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalDbNode.ts.html |here} to see how to use GetExternalDbNode API.
     */
    getExternalDbNode(getExternalDbNodeRequest: requests.GetExternalDbNodeRequest): Promise<responses.GetExternalDbNodeResponse>;
    /**
     * Gets the details for the external DB system specified by `externalDbSystemId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalDbSystemRequest
     * @return GetExternalDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalDbSystem.ts.html |here} to see how to use GetExternalDbSystem API.
     */
    getExternalDbSystem(getExternalDbSystemRequest: requests.GetExternalDbSystemRequest): Promise<responses.GetExternalDbSystemResponse>;
    /**
     * Gets the details for the external connector specified by `externalDbSystemConnectorId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalDbSystemConnectorRequest
     * @return GetExternalDbSystemConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalDbSystemConnector.ts.html |here} to see how to use GetExternalDbSystemConnector API.
     */
    getExternalDbSystemConnector(getExternalDbSystemConnectorRequest: requests.GetExternalDbSystemConnectorRequest): Promise<responses.GetExternalDbSystemConnectorResponse>;
    /**
     * Gets the details for the external DB system discovery resource specified by `externalDbSystemDiscoveryId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalDbSystemDiscoveryRequest
     * @return GetExternalDbSystemDiscoveryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalDbSystemDiscovery.ts.html |here} to see how to use GetExternalDbSystemDiscovery API.
     */
    getExternalDbSystemDiscovery(getExternalDbSystemDiscoveryRequest: requests.GetExternalDbSystemDiscoveryRequest): Promise<responses.GetExternalDbSystemDiscoveryResponse>;
    /**
     * Gets the details for the Exadata infrastructure specified by externalExadataInfrastructureId. It includes the DB systems and storage grid within the
     * Exadata infrastructure.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalExadataInfrastructureRequest
     * @return GetExternalExadataInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalExadataInfrastructure.ts.html |here} to see how to use GetExternalExadataInfrastructure API.
     */
    getExternalExadataInfrastructure(getExternalExadataInfrastructureRequest: requests.GetExternalExadataInfrastructureRequest): Promise<responses.GetExternalExadataInfrastructureResponse>;
    /**
     * Gets the details for the Exadata storage server connector specified by exadataStorageConnectorId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalExadataStorageConnectorRequest
     * @return GetExternalExadataStorageConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalExadataStorageConnector.ts.html |here} to see how to use GetExternalExadataStorageConnector API.
     */
    getExternalExadataStorageConnector(getExternalExadataStorageConnectorRequest: requests.GetExternalExadataStorageConnectorRequest): Promise<responses.GetExternalExadataStorageConnectorResponse>;
    /**
     * Gets the details for the Exadata storage server grid specified by exadataStorageGridId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalExadataStorageGridRequest
     * @return GetExternalExadataStorageGridResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalExadataStorageGrid.ts.html |here} to see how to use GetExternalExadataStorageGrid API.
     */
    getExternalExadataStorageGrid(getExternalExadataStorageGridRequest: requests.GetExternalExadataStorageGridRequest): Promise<responses.GetExternalExadataStorageGridResponse>;
    /**
     * Gets the summary for the Exadata storage server specified by exadataStorageServerId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalExadataStorageServerRequest
     * @return GetExternalExadataStorageServerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalExadataStorageServer.ts.html |here} to see how to use GetExternalExadataStorageServer API.
     */
    getExternalExadataStorageServer(getExternalExadataStorageServerRequest: requests.GetExternalExadataStorageServerRequest): Promise<responses.GetExternalExadataStorageServerResponse>;
    /**
     * Gets the details for the external listener specified by `externalListenerId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalListenerRequest
     * @return GetExternalListenerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalListener.ts.html |here} to see how to use GetExternalListener API.
     */
    getExternalListener(getExternalListenerRequest: requests.GetExternalListenerRequest): Promise<responses.GetExternalListenerResponse>;
    /**
     * Retrieves the external MySQL database information.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalMySqlDatabaseRequest
     * @return GetExternalMySqlDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalMySqlDatabase.ts.html |here} to see how to use GetExternalMySqlDatabase API.
     */
    getExternalMySqlDatabase(getExternalMySqlDatabaseRequest: requests.GetExternalMySqlDatabaseRequest): Promise<responses.GetExternalMySqlDatabaseResponse>;
    /**
     * Retrieves the MySQL database connector.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetExternalMySqlDatabaseConnectorRequest
     * @return GetExternalMySqlDatabaseConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExternalMySqlDatabaseConnector.ts.html |here} to see how to use GetExternalMySqlDatabaseConnector API.
     */
    getExternalMySqlDatabaseConnector(getExternalMySqlDatabaseConnectorRequest: requests.GetExternalMySqlDatabaseConnectorRequest): Promise<responses.GetExternalMySqlDatabaseConnectorResponse>;
    /**
     * Get the IORM plan from the specific Exadata storage server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetIormPlanRequest
     * @return GetIormPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetIormPlan.ts.html |here} to see how to use GetIormPlan API.
     */
    getIormPlan(getIormPlanRequest: requests.GetIormPlanRequest): Promise<responses.GetIormPlanResponse>;
    /**
     * Gets the details for the job specified by jobId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetJobRequest
     * @return GetJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetJob.ts.html |here} to see how to use GetJob API.
     */
    getJob(getJobRequest: requests.GetJobRequest): Promise<responses.GetJobResponse>;
    /**
     * Gets the details for the job execution specified by jobExecutionId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetJobExecutionRequest
     * @return GetJobExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetJobExecution.ts.html |here} to see how to use GetJobExecution API.
     */
    getJobExecution(getJobExecutionRequest: requests.GetJobExecutionRequest): Promise<responses.GetJobExecutionResponse>;
    /**
     * Gets the details for the job run specified by jobRunId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetJobRunRequest
     * @return GetJobRunResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetJobRun.ts.html |here} to see how to use GetJobRun API.
     */
    getJobRun(getJobRunRequest: requests.GetJobRunRequest): Promise<responses.GetJobRunResponse>;
    /**
     * Gets the details for the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagedDatabaseRequest
     * @return GetManagedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetManagedDatabase.ts.html |here} to see how to use GetManagedDatabase API.
     */
    getManagedDatabase(getManagedDatabaseRequest: requests.GetManagedDatabaseRequest): Promise<responses.GetManagedDatabaseResponse>;
    /**
     * Gets the details for the Managed Database Group specified by managedDatabaseGroupId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagedDatabaseGroupRequest
     * @return GetManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetManagedDatabaseGroup.ts.html |here} to see how to use GetManagedDatabaseGroup API.
     */
    getManagedDatabaseGroup(getManagedDatabaseGroupRequest: requests.GetManagedDatabaseGroupRequest): Promise<responses.GetManagedDatabaseGroupResponse>;
    /**
     * Gets the details for the named credential specified by namedCredentialId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetNamedCredentialRequest
     * @return GetNamedCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetNamedCredential.ts.html |here} to see how to use GetNamedCredential API.
     */
    getNamedCredential(getNamedCredentialRequest: requests.GetNamedCredentialRequest): Promise<responses.GetNamedCredentialResponse>;
    /**
     * Gets the open alerts from the specified Exadata storage server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOpenAlertHistoryRequest
     * @return GetOpenAlertHistoryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetOpenAlertHistory.ts.html |here} to see how to use GetOpenAlertHistory API.
     */
    getOpenAlertHistory(getOpenAlertHistoryRequest: requests.GetOpenAlertHistoryRequest): Promise<responses.GetOpenAlertHistoryResponse>;
    /**
     * Gets a comprehensive report of the Optimizer Statistics Advisor execution, which includes details of the
     * Managed Database, findings, recommendations, rationale, and examples.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetOptimizerStatisticsAdvisorExecutionRequest
     * @return GetOptimizerStatisticsAdvisorExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetOptimizerStatisticsAdvisorExecution.ts.html |here} to see how to use GetOptimizerStatisticsAdvisorExecution API.
     */
    getOptimizerStatisticsAdvisorExecution(getOptimizerStatisticsAdvisorExecutionRequest: requests.GetOptimizerStatisticsAdvisorExecutionRequest): Promise<responses.GetOptimizerStatisticsAdvisorExecutionResponse>;
    /**
     * Gets the Oracle system-generated script for the specified Optimizer Statistics Advisor execution.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetOptimizerStatisticsAdvisorExecutionScriptRequest
     * @return GetOptimizerStatisticsAdvisorExecutionScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetOptimizerStatisticsAdvisorExecutionScript.ts.html |here} to see how to use GetOptimizerStatisticsAdvisorExecutionScript API.
     */
    getOptimizerStatisticsAdvisorExecutionScript(getOptimizerStatisticsAdvisorExecutionScriptRequest: requests.GetOptimizerStatisticsAdvisorExecutionScriptRequest): Promise<responses.GetOptimizerStatisticsAdvisorExecutionScriptResponse>;
    /**
     * Gets a detailed report of the Optimizer Statistics Collection operation for the specified Managed Database.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetOptimizerStatisticsCollectionOperationRequest
     * @return GetOptimizerStatisticsCollectionOperationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetOptimizerStatisticsCollectionOperation.ts.html |here} to see how to use GetOptimizerStatisticsCollectionOperation API.
     */
    getOptimizerStatisticsCollectionOperation(getOptimizerStatisticsCollectionOperationRequest: requests.GetOptimizerStatisticsCollectionOperationRequest): Promise<responses.GetOptimizerStatisticsCollectionOperationResponse>;
    /**
     * Gets a summary of the resource usage metrics such as CPU, User I/O, and Storage for each
     * PDB within a specific CDB. If comparmentId is specified, then the metrics for
     * each PDB (within the CDB) in the specified compartment are retrieved.
     * If compartmentId is not specified, then the metrics for all the PDBs within the CDB are retrieved.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPdbMetricsRequest
     * @return GetPdbMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetPdbMetrics.ts.html |here} to see how to use GetPdbMetrics API.
     */
    getPdbMetrics(getPdbMetricsRequest: requests.GetPdbMetricsRequest): Promise<responses.GetPdbMetricsResponse>;
    /**
     * Gets a comparative summary of the baseline and target values of the Data Guard performance metrics for Managed Databases.
     * If the peerDatabaseCompartmentId is specified, then the metrics are only retrieved from the specified compartment.
     * If the peerDatabaseCompartmentId is not specified, then the metrics are retrieved from the compartment of the Managed Database specified by the ManagedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPeerDatabaseMetricsRequest
     * @return GetPeerDatabaseMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetPeerDatabaseMetrics.ts.html |here} to see how to use GetPeerDatabaseMetrics API.
     */
    getPeerDatabaseMetrics(getPeerDatabaseMetricsRequest: requests.GetPeerDatabaseMetricsRequest): Promise<responses.GetPeerDatabaseMetricsResponse>;
    /**
     * Gets the preferred credential details for a Managed Database based on credentialName.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPreferredCredentialRequest
     * @return GetPreferredCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetPreferredCredential.ts.html |here} to see how to use GetPreferredCredential API.
     */
    getPreferredCredential(getPreferredCredentialRequest: requests.GetPreferredCredentialRequest): Promise<responses.GetPreferredCredentialResponse>;
    /**
     * Gets the SQL plan baseline details for the specified planName.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSqlPlanBaselineRequest
     * @return GetSqlPlanBaselineResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetSqlPlanBaseline.ts.html |here} to see how to use GetSqlPlanBaseline API.
     */
    getSqlPlanBaseline(getSqlPlanBaselineRequest: requests.GetSqlPlanBaselineRequest): Promise<responses.GetSqlPlanBaselineResponse>;
    /**
     * Gets the configuration details of SQL plan baselines for the specified
     * Managed Database. The details include the settings for the capture and use of
     * SQL plan baselines, SPM Evolve Advisor task, and SQL Management Base.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSqlPlanBaselineConfigurationRequest
     * @return GetSqlPlanBaselineConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetSqlPlanBaselineConfiguration.ts.html |here} to see how to use GetSqlPlanBaselineConfiguration API.
     */
    getSqlPlanBaselineConfiguration(getSqlPlanBaselineConfigurationRequest: requests.GetSqlPlanBaselineConfigurationRequest): Promise<responses.GetSqlPlanBaselineConfigurationResponse>;
    /**
     * Gets the details of the tablespace specified by tablespaceName within the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTablespaceRequest
     * @return GetTablespaceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetTablespace.ts.html |here} to see how to use GetTablespace API.
     */
    getTablespace(getTablespaceRequest: requests.GetTablespaceRequest): Promise<responses.GetTablespaceResponse>;
    /**
     * Gets the SQL IDs with the top CPU activity from the Exadata storage server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTopSqlCpuActivityRequest
     * @return GetTopSqlCpuActivityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetTopSqlCpuActivity.ts.html |here} to see how to use GetTopSqlCpuActivity API.
     */
    getTopSqlCpuActivity(getTopSqlCpuActivityRequest: requests.GetTopSqlCpuActivityRequest): Promise<responses.GetTopSqlCpuActivityResponse>;
    /**
     * Gets the details of the user specified by managedDatabaseId and userName.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetUserRequest
     * @return GetUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetUser.ts.html |here} to see how to use GetUser API.
     */
    getUser(getUserRequest: requests.GetUserRequest): Promise<responses.GetUserResponse>;
    /**
     * Gets the status of the work request with the given Work Request ID
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Asynchronously implements the findings and recommendations of the Optimizer Statistics Advisor execution.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ImplementOptimizerStatisticsAdvisorRecommendationsRequest
     * @return ImplementOptimizerStatisticsAdvisorRecommendationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ImplementOptimizerStatisticsAdvisorRecommendations.ts.html |here} to see how to use ImplementOptimizerStatisticsAdvisorRecommendations API.
     */
    implementOptimizerStatisticsAdvisorRecommendations(implementOptimizerStatisticsAdvisorRecommendationsRequest: requests.ImplementOptimizerStatisticsAdvisorRecommendationsRequest): Promise<responses.ImplementOptimizerStatisticsAdvisorRecommendationsResponse>;
    /**
     * Gets the list of ASM properties for the specified managedDatabaseId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAsmPropertiesRequest
     * @return ListAsmPropertiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAsmProperties.ts.html |here} to see how to use ListAsmProperties API.
     */
    listAsmProperties(listAsmPropertiesRequest: requests.ListAsmPropertiesRequest): Promise<responses.ListAsmPropertiesResponse>;
    /**
     * Gets the list of databases using a specific Database Management private endpoint.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAssociatedDatabasesRequest
     * @return ListAssociatedDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAssociatedDatabases.ts.html |here} to see how to use ListAssociatedDatabases API.
     */
    listAssociatedDatabases(listAssociatedDatabasesRequest: requests.ListAssociatedDatabasesRequest): Promise<responses.ListAssociatedDatabasesResponse>;
    /**
     * Lists AWR snapshots for the specified database in the AWR.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAwrDbSnapshotsRequest
     * @return ListAwrDbSnapshotsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAwrDbSnapshots.ts.html |here} to see how to use ListAwrDbSnapshots API.
     */
    listAwrDbSnapshots(listAwrDbSnapshotsRequest: requests.ListAwrDbSnapshotsRequest): Promise<responses.ListAwrDbSnapshotsResponse>;
    /**
     * Gets the list of databases and their snapshot summary details available in the AWR of the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAwrDbsRequest
     * @return ListAwrDbsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAwrDbs.ts.html |here} to see how to use ListAwrDbs API.
     */
    listAwrDbs(listAwrDbsRequest: requests.ListAwrDbsRequest): Promise<responses.ListAwrDbsResponse>;
    /**
     * Gets the list of consumer group privileges granted to a specific user.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListConsumerGroupPrivilegesRequest
     * @return ListConsumerGroupPrivilegesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListConsumerGroupPrivileges.ts.html |here} to see how to use ListConsumerGroupPrivileges API.
     */
    listConsumerGroupPrivileges(listConsumerGroupPrivilegesRequest: requests.ListConsumerGroupPrivilegesRequest): Promise<responses.ListConsumerGroupPrivilegesResponse>;
    /**
     * Lists the SQL statements from shared SQL area, also called the cursor cache.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCursorCacheStatementsRequest
     * @return ListCursorCacheStatementsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListCursorCacheStatements.ts.html |here} to see how to use ListCursorCacheStatements API.
     */
    listCursorCacheStatements(listCursorCacheStatementsRequest: requests.ListCursorCacheStatementsRequest): Promise<responses.ListCursorCacheStatementsResponse>;
    /**
     * Gets the list of containers for a specific user. This is only applicable if ALL_CONTAINERS !='Y'.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDataAccessContainersRequest
     * @return ListDataAccessContainersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListDataAccessContainers.ts.html |here} to see how to use ListDataAccessContainers API.
     */
    listDataAccessContainers(listDataAccessContainersRequest: requests.ListDataAccessContainersRequest): Promise<responses.ListDataAccessContainersResponse>;
    /**
     * Gets the list of database parameters for the specified Managed Database. The parameters are listed in alphabetical order, along with their current values.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDatabaseParametersRequest
     * @return ListDatabaseParametersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListDatabaseParameters.ts.html |here} to see how to use ListDatabaseParameters API.
     */
    listDatabaseParameters(listDatabaseParametersRequest: requests.ListDatabaseParametersRequest): Promise<responses.ListDatabaseParametersResponse>;
    /**
     * Gets a list of Database Management private endpoints.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDbManagementPrivateEndpointsRequest
     * @return ListDbManagementPrivateEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListDbManagementPrivateEndpoints.ts.html |here} to see how to use ListDbManagementPrivateEndpoints API.
     */
    listDbManagementPrivateEndpoints(listDbManagementPrivateEndpointsRequest: requests.ListDbManagementPrivateEndpointsRequest): Promise<responses.ListDbManagementPrivateEndpointsResponse>;
    /**
     * Lists ASM disk groups for the external ASM specified by `externalAsmId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalAsmDiskGroupsRequest
     * @return ListExternalAsmDiskGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalAsmDiskGroups.ts.html |here} to see how to use ListExternalAsmDiskGroups API.
     */
    listExternalAsmDiskGroups(listExternalAsmDiskGroupsRequest: requests.ListExternalAsmDiskGroupsRequest): Promise<responses.ListExternalAsmDiskGroupsResponse>;
    /**
     * Lists the ASM instances in the specified external ASM.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalAsmInstancesRequest
     * @return ListExternalAsmInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalAsmInstances.ts.html |here} to see how to use ListExternalAsmInstances API.
     */
    listExternalAsmInstances(listExternalAsmInstancesRequest: requests.ListExternalAsmInstancesRequest): Promise<responses.ListExternalAsmInstancesResponse>;
    /**
     * Lists ASM users for the external ASM specified by `externalAsmId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalAsmUsersRequest
     * @return ListExternalAsmUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalAsmUsers.ts.html |here} to see how to use ListExternalAsmUsers API.
     */
    listExternalAsmUsers(listExternalAsmUsersRequest: requests.ListExternalAsmUsersRequest): Promise<responses.ListExternalAsmUsersResponse>;
    /**
     * Lists the ASMs in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalAsmsRequest
     * @return ListExternalAsmsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalAsms.ts.html |here} to see how to use ListExternalAsms API.
     */
    listExternalAsms(listExternalAsmsRequest: requests.ListExternalAsmsRequest): Promise<responses.ListExternalAsmsResponse>;
    /**
     * Lists the cluster instances in the specified external cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalClusterInstancesRequest
     * @return ListExternalClusterInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalClusterInstances.ts.html |here} to see how to use ListExternalClusterInstances API.
     */
    listExternalClusterInstances(listExternalClusterInstancesRequest: requests.ListExternalClusterInstancesRequest): Promise<responses.ListExternalClusterInstancesResponse>;
    /**
     * Lists the clusters in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalClustersRequest
     * @return ListExternalClustersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalClusters.ts.html |here} to see how to use ListExternalClusters API.
     */
    listExternalClusters(listExternalClustersRequest: requests.ListExternalClustersRequest): Promise<responses.ListExternalClustersResponse>;
    /**
     * Lists the external databases in the specified compartment or in the specified DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDatabasesRequest
     * @return ListExternalDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDatabases.ts.html |here} to see how to use ListExternalDatabases API.
     */
    listExternalDatabases(listExternalDatabasesRequest: requests.ListExternalDatabasesRequest): Promise<responses.ListExternalDatabasesResponse>;
    /**
     * Lists the DB homes in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDbHomesRequest
     * @return ListExternalDbHomesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDbHomes.ts.html |here} to see how to use ListExternalDbHomes API.
     */
    listExternalDbHomes(listExternalDbHomesRequest: requests.ListExternalDbHomesRequest): Promise<responses.ListExternalDbHomesResponse>;
    /**
     * Lists the external DB nodes in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDbNodesRequest
     * @return ListExternalDbNodesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDbNodes.ts.html |here} to see how to use ListExternalDbNodes API.
     */
    listExternalDbNodes(listExternalDbNodesRequest: requests.ListExternalDbNodesRequest): Promise<responses.ListExternalDbNodesResponse>;
    /**
     * Lists the external connectors in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDbSystemConnectorsRequest
     * @return ListExternalDbSystemConnectorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDbSystemConnectors.ts.html |here} to see how to use ListExternalDbSystemConnectors API.
     */
    listExternalDbSystemConnectors(listExternalDbSystemConnectorsRequest: requests.ListExternalDbSystemConnectorsRequest): Promise<responses.ListExternalDbSystemConnectorsResponse>;
    /**
     * Lists the external DB system discovery resources in the specified compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDbSystemDiscoveriesRequest
     * @return ListExternalDbSystemDiscoveriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDbSystemDiscoveries.ts.html |here} to see how to use ListExternalDbSystemDiscoveries API.
     */
    listExternalDbSystemDiscoveries(listExternalDbSystemDiscoveriesRequest: requests.ListExternalDbSystemDiscoveriesRequest): Promise<responses.ListExternalDbSystemDiscoveriesResponse>;
    /**
     * Lists the external DB systems in the specified compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalDbSystemsRequest
     * @return ListExternalDbSystemsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalDbSystems.ts.html |here} to see how to use ListExternalDbSystems API.
     */
    listExternalDbSystems(listExternalDbSystemsRequest: requests.ListExternalDbSystemsRequest): Promise<responses.ListExternalDbSystemsResponse>;
    /**
     * Lists the Exadata infrastructure resources in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalExadataInfrastructuresRequest
     * @return ListExternalExadataInfrastructuresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalExadataInfrastructures.ts.html |here} to see how to use ListExternalExadataInfrastructures API.
     */
    listExternalExadataInfrastructures(listExternalExadataInfrastructuresRequest: requests.ListExternalExadataInfrastructuresRequest): Promise<responses.ListExternalExadataInfrastructuresResponse>;
    /**
     * Lists the Exadata storage server connectors for the specified Exadata infrastructure.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalExadataStorageConnectorsRequest
     * @return ListExternalExadataStorageConnectorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalExadataStorageConnectors.ts.html |here} to see how to use ListExternalExadataStorageConnectors API.
     */
    listExternalExadataStorageConnectors(listExternalExadataStorageConnectorsRequest: requests.ListExternalExadataStorageConnectorsRequest): Promise<responses.ListExternalExadataStorageConnectorsResponse>;
    /**
     * Lists the Exadata storage servers for the specified Exadata infrastructure.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalExadataStorageServersRequest
     * @return ListExternalExadataStorageServersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalExadataStorageServers.ts.html |here} to see how to use ListExternalExadataStorageServers API.
     */
    listExternalExadataStorageServers(listExternalExadataStorageServersRequest: requests.ListExternalExadataStorageServersRequest): Promise<responses.ListExternalExadataStorageServersResponse>;
    /**
     * Lists the database services registered with the specified external listener
     * for the specified Managed Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalListenerServicesRequest
     * @return ListExternalListenerServicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalListenerServices.ts.html |here} to see how to use ListExternalListenerServices API.
     */
    listExternalListenerServices(listExternalListenerServicesRequest: requests.ListExternalListenerServicesRequest): Promise<responses.ListExternalListenerServicesResponse>;
    /**
     * Lists the listeners in the specified external DB system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListExternalListenersRequest
     * @return ListExternalListenersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalListeners.ts.html |here} to see how to use ListExternalListeners API.
     */
    listExternalListeners(listExternalListenersRequest: requests.ListExternalListenersRequest): Promise<responses.ListExternalListenersResponse>;
    /**
     * Gets the list of External MySQL Databases.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListExternalMySqlDatabasesRequest
     * @return ListExternalMySqlDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListExternalMySqlDatabases.ts.html |here} to see how to use ListExternalMySqlDatabases API.
     */
    listExternalMySqlDatabases(listExternalMySqlDatabasesRequest: requests.ListExternalMySqlDatabasesRequest): Promise<responses.ListExternalMySqlDatabasesResponse>;
    /**
     * Gets the job execution for a specific ID or the list of job executions for a job, job run, Managed Database or Managed Database Group
     * in a specific compartment. Only one of the parameters, ID, jobId, jobRunId, managedDatabaseId or managedDatabaseGroupId should be provided.
     * If none of these parameters is provided, all the job executions in the compartment are listed. Job executions can also be filtered
     * based on the name and status parameters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListJobExecutionsRequest
     * @return ListJobExecutionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListJobExecutions.ts.html |here} to see how to use ListJobExecutions API.
     */
    listJobExecutions(listJobExecutionsRequest: requests.ListJobExecutionsRequest): Promise<responses.ListJobExecutionsResponse>;
    /**
     * Gets the job run for a specific ID or the list of job runs for a job, Managed Database or Managed Database Group
     * in a specific compartment. Only one of the parameters, ID, jobId, managedDatabaseId, or managedDatabaseGroupId
     * should be provided. If none of these parameters is provided, all the job runs in the compartment are listed.
     * Job runs can also be filtered based on name and runStatus parameters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListJobRunsRequest
     * @return ListJobRunsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListJobRuns.ts.html |here} to see how to use ListJobRuns API.
     */
    listJobRuns(listJobRunsRequest: requests.ListJobRunsRequest): Promise<responses.ListJobRunsResponse>;
    /**
     * Gets the job for a specific ID or the list of jobs for a Managed Database or Managed Database Group
     * in a specific compartment. Only one of the parameters, ID, managedDatabaseId or managedDatabaseGroupId,
     * should be provided. If none of these parameters is provided, all the jobs in the compartment are listed.
     * Jobs can also be filtered based on the name and lifecycleState parameters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListJobsRequest
     * @return ListJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListJobs.ts.html |here} to see how to use ListJobs API.
     */
    listJobs(listJobsRequest: requests.ListJobsRequest): Promise<responses.ListJobsResponse>;
    /**
     * Gets the Managed Database Group for a specific ID or the list of Managed Database Groups in
     * a specific compartment. Managed Database Groups can also be filtered based on the name parameter.
     * Only one of the parameters, ID or name should be provided. If none of these parameters is provided,
     * all the Managed Database Groups in the compartment are listed.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagedDatabaseGroupsRequest
     * @return ListManagedDatabaseGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListManagedDatabaseGroups.ts.html |here} to see how to use ListManagedDatabaseGroups API.
     */
    listManagedDatabaseGroups(listManagedDatabaseGroupsRequest: requests.ListManagedDatabaseGroupsRequest): Promise<responses.ListManagedDatabaseGroupsResponse>;
    /**
     * Gets the Managed Database for a specific ID or the list of Managed Databases in a specific compartment.
     * Managed Databases can be filtered based on the name parameter. Only one of the parameters, ID or name
     * should be provided. If neither of these parameters is provided, all the Managed Databases in the compartment
     * are listed. Managed Databases can also be filtered based on the deployment type and management option.
     * If the deployment type is not specified or if it is `ONPREMISE`, then the management option is not
     * considered and Managed Databases with `ADVANCED` management option are listed.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagedDatabasesRequest
     * @return ListManagedDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListManagedDatabases.ts.html |here} to see how to use ListManagedDatabases API.
     */
    listManagedDatabases(listManagedDatabasesRequest: requests.ListManagedDatabasesRequest): Promise<responses.ListManagedDatabasesResponse>;
    /**
     * Gets the list of External MySQL Database connectors.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMySqlDatabaseConnectorsRequest
     * @return ListMySqlDatabaseConnectorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListMySqlDatabaseConnectors.ts.html |here} to see how to use ListMySqlDatabaseConnectors API.
     */
    listMySqlDatabaseConnectors(listMySqlDatabaseConnectorsRequest: requests.ListMySqlDatabaseConnectorsRequest): Promise<responses.ListMySqlDatabaseConnectorsResponse>;
    /**
     * Gets a single named credential specified by the name or all the named credentials in a specific compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListNamedCredentialsRequest
     * @return ListNamedCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListNamedCredentials.ts.html |here} to see how to use ListNamedCredentials API.
     */
    listNamedCredentials(listNamedCredentialsRequest: requests.ListNamedCredentialsRequest): Promise<responses.ListNamedCredentialsResponse>;
    /**
     * Gets the list of object privileges granted to a specific user.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListObjectPrivilegesRequest
     * @return ListObjectPrivilegesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListObjectPrivileges.ts.html |here} to see how to use ListObjectPrivileges API.
     */
    listObjectPrivileges(listObjectPrivilegesRequest: requests.ListObjectPrivilegesRequest): Promise<responses.ListObjectPrivilegesResponse>;
    /**
     * Lists the details of the Optimizer Statistics Advisor task executions, such as their duration, and the number of findings, if any.
     * Optionally, you can specify a date-time range (of seven days) to obtain the list of executions that fall within the specified time range.
     * If the date-time range is not specified, then the executions in the last seven days are listed.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListOptimizerStatisticsAdvisorExecutionsRequest
     * @return ListOptimizerStatisticsAdvisorExecutionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListOptimizerStatisticsAdvisorExecutions.ts.html |here} to see how to use ListOptimizerStatisticsAdvisorExecutions API.
     */
    listOptimizerStatisticsAdvisorExecutions(listOptimizerStatisticsAdvisorExecutionsRequest: requests.ListOptimizerStatisticsAdvisorExecutionsRequest): Promise<responses.ListOptimizerStatisticsAdvisorExecutionsResponse>;
    /**
     * Gets a list of the optimizer statistics collection operations per hour, grouped by task or object status for the specified Managed Database.
     * You must specify a value for GroupByQueryParam to determine whether the data should be grouped by task status or task object status.
     * Optionally, you can specify a date-time range (of seven days) to obtain collection aggregations within the specified time range.
     * If the date-time range is not specified, then the operations in the last seven days are listed.
     * You can further filter the results by providing the optional type of TaskTypeQueryParam.
     * If the task type not provided, then both Auto and Manual tasks are considered for aggregation.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListOptimizerStatisticsCollectionAggregationsRequest
     * @return ListOptimizerStatisticsCollectionAggregationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListOptimizerStatisticsCollectionAggregations.ts.html |here} to see how to use ListOptimizerStatisticsCollectionAggregations API.
     */
    listOptimizerStatisticsCollectionAggregations(listOptimizerStatisticsCollectionAggregationsRequest: requests.ListOptimizerStatisticsCollectionAggregationsRequest): Promise<responses.ListOptimizerStatisticsCollectionAggregationsResponse>;
    /**
     * Lists the Optimizer Statistics Collection (Auto and Manual) task operation summary for the specified Managed Database.
     * The summary includes the details of each operation and the number of tasks grouped by status: Completed, In Progress, Failed, and so on.
     * Optionally, you can specify a date-time range (of seven days) to obtain the list of operations that fall within the specified time range.
     * If the date-time range is not specified, then the operations in the last seven days are listed.
     * This API also enables the pagination of results and the opc-next-page response header indicates whether there is a next page.
     * If you use the same header value in a consecutive request, the next page records are returned.
     * To obtain the required results, you can apply the different types of filters supported by this API.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListOptimizerStatisticsCollectionOperationsRequest
     * @return ListOptimizerStatisticsCollectionOperationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListOptimizerStatisticsCollectionOperations.ts.html |here} to see how to use ListOptimizerStatisticsCollectionOperations API.
     */
    listOptimizerStatisticsCollectionOperations(listOptimizerStatisticsCollectionOperationsRequest: requests.ListOptimizerStatisticsCollectionOperationsRequest): Promise<responses.ListOptimizerStatisticsCollectionOperationsResponse>;
    /**
     * Gets the list of preferred credentials for a given Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPreferredCredentialsRequest
     * @return ListPreferredCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListPreferredCredentials.ts.html |here} to see how to use ListPreferredCredentials API.
     */
    listPreferredCredentials(listPreferredCredentialsRequest: requests.ListPreferredCredentialsRequest): Promise<responses.ListPreferredCredentialsResponse>;
    /**
     * Gets the list of users on whose behalf the current user acts as proxy.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProxiedForUsersRequest
     * @return ListProxiedForUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListProxiedForUsers.ts.html |here} to see how to use ListProxiedForUsers API.
     */
    listProxiedForUsers(listProxiedForUsersRequest: requests.ListProxiedForUsersRequest): Promise<responses.ListProxiedForUsersResponse>;
    /**
     * Gets the list of proxy users for the current user.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProxyUsersRequest
     * @return ListProxyUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListProxyUsers.ts.html |here} to see how to use ListProxyUsers API.
     */
    listProxyUsers(listProxyUsersRequest: requests.ListProxyUsersRequest): Promise<responses.ListProxyUsersResponse>;
    /**
     * Gets the list of roles granted to a specific user.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListRolesRequest
     * @return ListRolesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListRoles.ts.html |here} to see how to use ListRoles API.
     */
    listRoles(listRolesRequest: requests.ListRolesRequest): Promise<responses.ListRolesResponse>;
    /**
     * Lists the database jobs used for loading SQL plan baselines in the specified Managed Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListSqlPlanBaselineJobsRequest
     * @return ListSqlPlanBaselineJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlPlanBaselineJobs.ts.html |here} to see how to use ListSqlPlanBaselineJobs API.
     */
    listSqlPlanBaselineJobs(listSqlPlanBaselineJobsRequest: requests.ListSqlPlanBaselineJobsRequest): Promise<responses.ListSqlPlanBaselineJobsResponse>;
    /**
     * Lists the SQL plan baselines for the specified Managed Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListSqlPlanBaselinesRequest
     * @return ListSqlPlanBaselinesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlPlanBaselines.ts.html |here} to see how to use ListSqlPlanBaselines API.
     */
    listSqlPlanBaselines(listSqlPlanBaselinesRequest: requests.ListSqlPlanBaselinesRequest): Promise<responses.ListSqlPlanBaselinesResponse>;
    /**
     * Gets the list of system privileges granted to a specific user.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSystemPrivilegesRequest
     * @return ListSystemPrivilegesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSystemPrivileges.ts.html |here} to see how to use ListSystemPrivileges API.
     */
    listSystemPrivileges(listSystemPrivilegesRequest: requests.ListSystemPrivilegesRequest): Promise<responses.ListSystemPrivilegesResponse>;
    /**
     * Lists the database table statistics grouped by different statuses such as Not Stale Stats, Stale Stats, and No Stats.
     * This also includes the percentage of each status.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTableStatisticsRequest
     * @return ListTableStatisticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListTableStatistics.ts.html |here} to see how to use ListTableStatistics API.
     */
    listTableStatistics(listTableStatisticsRequest: requests.ListTableStatisticsRequest): Promise<responses.ListTableStatisticsResponse>;
    /**
     * Gets the list of tablespaces for the specified managedDatabaseId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTablespacesRequest
     * @return ListTablespacesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListTablespaces.ts.html |here} to see how to use ListTablespaces API.
     */
    listTablespaces(listTablespacesRequest: requests.ListTablespacesRequest): Promise<responses.ListTablespacesResponse>;
    /**
     * Gets the list of users for the specified managedDatabaseId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListUsersRequest
     * @return ListUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListUsers.ts.html |here} to see how to use ListUsers API.
     */
    listUsers(listUsersRequest: requests.ListUsersRequest): Promise<responses.ListUsersResponse>;
    /**
     * Returns a paginated list of errors for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a paginated list of logs for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * The list of work requests in a specific compartment was retrieved successfully.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Loads plans from Automatic Workload Repository (AWR) snapshots. You must
     * specify the beginning and ending of the snapshot range. Optionally, you
     * can apply a filter to load only plans that meet specified criteria. By
     * default, the optimizer uses the loaded plans the next time that the database
     * executes the SQL statements.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param LoadSqlPlanBaselinesFromAwrRequest
     * @return LoadSqlPlanBaselinesFromAwrResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/LoadSqlPlanBaselinesFromAwr.ts.html |here} to see how to use LoadSqlPlanBaselinesFromAwr API.
     */
    loadSqlPlanBaselinesFromAwr(loadSqlPlanBaselinesFromAwrRequest: requests.LoadSqlPlanBaselinesFromAwrRequest): Promise<responses.LoadSqlPlanBaselinesFromAwrResponse>;
    /**
     * Loads plans for statements directly from the shared SQL area, also called
     * the cursor cache. By applying a filter on the module name, the schema, or
     * the SQL ID you identify the SQL statement or set of SQL statements to load.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param LoadSqlPlanBaselinesFromCursorCacheRequest
     * @return LoadSqlPlanBaselinesFromCursorCacheResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/LoadSqlPlanBaselinesFromCursorCache.ts.html |here} to see how to use LoadSqlPlanBaselinesFromCursorCache API.
     */
    loadSqlPlanBaselinesFromCursorCache(loadSqlPlanBaselinesFromCursorCacheRequest: requests.LoadSqlPlanBaselinesFromCursorCacheRequest): Promise<responses.LoadSqlPlanBaselinesFromCursorCacheResponse>;
    /**
     * Modifies the Database Management feature for the specified Autonomous Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ModifyAutonomousDatabaseManagementFeatureRequest
     * @return ModifyAutonomousDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ModifyAutonomousDatabaseManagementFeature.ts.html |here} to see how to use ModifyAutonomousDatabaseManagementFeature API.
     */
    modifyAutonomousDatabaseManagementFeature(modifyAutonomousDatabaseManagementFeatureRequest: requests.ModifyAutonomousDatabaseManagementFeatureRequest): Promise<responses.ModifyAutonomousDatabaseManagementFeatureResponse>;
    /**
     * Modifies a Database Management feature for the specified Oracle cloud database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ModifyDatabaseManagementFeatureRequest
     * @return ModifyDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ModifyDatabaseManagementFeature.ts.html |here} to see how to use ModifyDatabaseManagementFeature API.
     */
    modifyDatabaseManagementFeature(modifyDatabaseManagementFeatureRequest: requests.ModifyDatabaseManagementFeatureRequest): Promise<responses.ModifyDatabaseManagementFeatureResponse>;
    /**
     * Modifies a Database Management feature for the specified external container database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ModifyExternalContainerDatabaseManagementFeatureRequest
     * @return ModifyExternalContainerDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ModifyExternalContainerDatabaseManagementFeature.ts.html |here} to see how to use ModifyExternalContainerDatabaseManagementFeature API.
     */
    modifyExternalContainerDatabaseManagementFeature(modifyExternalContainerDatabaseManagementFeatureRequest: requests.ModifyExternalContainerDatabaseManagementFeatureRequest): Promise<responses.ModifyExternalContainerDatabaseManagementFeatureResponse>;
    /**
     * Modifies the Database Management feature for the specified Oracle cloud pluggable database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ModifyPluggableDatabaseManagementFeatureRequest
     * @return ModifyPluggableDatabaseManagementFeatureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ModifyPluggableDatabaseManagementFeature.ts.html |here} to see how to use ModifyPluggableDatabaseManagementFeature API.
     */
    modifyPluggableDatabaseManagementFeature(modifyPluggableDatabaseManagementFeatureRequest: requests.ModifyPluggableDatabaseManagementFeatureRequest): Promise<responses.ModifyPluggableDatabaseManagementFeatureResponse>;
    /**
     * Patches the external DB system discovery specified by `externalDbSystemDiscoveryId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchExternalDbSystemDiscoveryRequest
     * @return PatchExternalDbSystemDiscoveryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/PatchExternalDbSystemDiscovery.ts.html |here} to see how to use PatchExternalDbSystemDiscovery API.
     */
    patchExternalDbSystemDiscovery(patchExternalDbSystemDiscoveryRequest: requests.PatchExternalDbSystemDiscoveryRequest): Promise<responses.PatchExternalDbSystemDiscoveryResponse>;
    /**
     * Removes a data file or temp file from the tablespace.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RemoveDataFileRequest
     * @return RemoveDataFileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/RemoveDataFile.ts.html |here} to see how to use RemoveDataFile API.
     */
    removeDataFile(removeDataFileRequest: requests.RemoveDataFileRequest): Promise<responses.RemoveDataFileResponse>;
    /**
     * Removes a Managed Database from a Managed Database Group. Any management
     * activities that are currently running on this database will continue to
     * run to completion. However, any activities scheduled to run in the future
     * will not be performed on this database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RemoveManagedDatabaseFromManagedDatabaseGroupRequest
     * @return RemoveManagedDatabaseFromManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/RemoveManagedDatabaseFromManagedDatabaseGroup.ts.html |here} to see how to use RemoveManagedDatabaseFromManagedDatabaseGroup API.
     */
    removeManagedDatabaseFromManagedDatabaseGroup(removeManagedDatabaseFromManagedDatabaseGroupRequest: requests.RemoveManagedDatabaseFromManagedDatabaseGroupRequest): Promise<responses.RemoveManagedDatabaseFromManagedDatabaseGroupResponse>;
    /**
     * Resets database parameter values to their default or startup values.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ResetDatabaseParametersRequest
     * @return ResetDatabaseParametersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ResetDatabaseParameters.ts.html |here} to see how to use ResetDatabaseParameters API.
     */
    resetDatabaseParameters(resetDatabaseParametersRequest: requests.ResetDatabaseParametersRequest): Promise<responses.ResetDatabaseParametersResponse>;
    /**
     * Resizes a data file or temp file within the tablespace.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ResizeDataFileRequest
     * @return ResizeDataFileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ResizeDataFile.ts.html |here} to see how to use ResizeDataFile API.
     */
    resizeDataFile(resizeDataFileRequest: requests.ResizeDataFileRequest): Promise<responses.ResizeDataFileResponse>;
    /**
     * Creates and executes a historic ADDM task using the specified AWR snapshot IDs. If an existing ADDM task
     * uses the provided awr snapshot IDs, the existing task will be returned.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RunHistoricAddmRequest
     * @return RunHistoricAddmResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/RunHistoricAddm.ts.html |here} to see how to use RunHistoricAddm API.
     */
    runHistoricAddm(runHistoricAddmRequest: requests.RunHistoricAddmRequest): Promise<responses.RunHistoricAddmResponse>;
    /**
     * Summarizes the AWR CPU resource limits and metrics for the specified database in AWR.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbCpuUsagesRequest
     * @return SummarizeAwrDbCpuUsagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbCpuUsages.ts.html |here} to see how to use SummarizeAwrDbCpuUsages API.
     */
    summarizeAwrDbCpuUsages(summarizeAwrDbCpuUsagesRequest: requests.SummarizeAwrDbCpuUsagesRequest): Promise<responses.SummarizeAwrDbCpuUsagesResponse>;
    /**
     * Summarizes the metric samples for the specified database in the AWR. The metric samples are summarized based on the Time dimension for each metric.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbMetricsRequest
     * @return SummarizeAwrDbMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbMetrics.ts.html |here} to see how to use SummarizeAwrDbMetrics API.
     */
    summarizeAwrDbMetrics(summarizeAwrDbMetricsRequest: requests.SummarizeAwrDbMetricsRequest): Promise<responses.SummarizeAwrDbMetricsResponse>;
    /**
     * Summarizes the database parameter change history for one database parameter of the specified database in AWR. One change history record contains
     * the previous value, the changed value, and the corresponding time range. If the database parameter value was changed multiple times within the time range, then multiple change history records are created for the same parameter.
     * Note that this API only returns information on change history details for one database parameter.
     * To get a list of all the database parameters whose values were changed during a specified time range, use the following API endpoint:
     * /managedDatabases/{managedDatabaseId}/awrDbs/{awrDbId}/awrDbParameters
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbParameterChangesRequest
     * @return SummarizeAwrDbParameterChangesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbParameterChanges.ts.html |here} to see how to use SummarizeAwrDbParameterChanges API.
     */
    summarizeAwrDbParameterChanges(summarizeAwrDbParameterChangesRequest: requests.SummarizeAwrDbParameterChangesRequest): Promise<responses.SummarizeAwrDbParameterChangesResponse>;
    /**
       * Summarizes the database parameter history for the specified database in AWR. This includes the list of database
  * parameters, with information on whether the parameter values were modified within the query time range. Note that
  * each database parameter is only listed once. Depending on the optional query parameters, the returned summary gets all the database parameters, which include:
  * <p>
  - Each parameter whose value was changed during the time range:  (valueChanged =\"Y\")
  * - Each parameter whose value was unchanged during the time range:  (valueChanged =\"N\")
  * - Each parameter whose value was changed at the system level during the time range: (valueChanged =\"Y\"  and valueModified = \"SYSTEM_MOD\")
  * - Each parameter whose value was unchanged during the time range, however, the value is not the default value: (valueChanged =\"N\" and  valueDefault = \"FALSE\")
  * <p>
  Note that this API does not return information on the number of times each database parameter has been changed within the time range. To get the database parameter value change history for a specific parameter, use the following API endpoint:
  * /managedDatabases/{managedDatabaseId}/awrDbs/{awrDbId}/awrDbParameterChanges
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param SummarizeAwrDbParametersRequest
       * @return SummarizeAwrDbParametersResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbParameters.ts.html |here} to see how to use SummarizeAwrDbParameters API.
       */
    summarizeAwrDbParameters(summarizeAwrDbParametersRequest: requests.SummarizeAwrDbParametersRequest): Promise<responses.SummarizeAwrDbParametersResponse>;
    /**
     * Summarizes the AWR snapshot ranges that contain continuous snapshots, for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbSnapshotRangesRequest
     * @return SummarizeAwrDbSnapshotRangesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbSnapshotRanges.ts.html |here} to see how to use SummarizeAwrDbSnapshotRanges API.
     */
    summarizeAwrDbSnapshotRanges(summarizeAwrDbSnapshotRangesRequest: requests.SummarizeAwrDbSnapshotRangesRequest): Promise<responses.SummarizeAwrDbSnapshotRangesResponse>;
    /**
     * Summarizes the AWR SYSSTAT sample data for the specified database in AWR. The statistical data is summarized based on the Time dimension for each statistic.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbSysstatsRequest
     * @return SummarizeAwrDbSysstatsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbSysstats.ts.html |here} to see how to use SummarizeAwrDbSysstats API.
     */
    summarizeAwrDbSysstats(summarizeAwrDbSysstatsRequest: requests.SummarizeAwrDbSysstatsRequest): Promise<responses.SummarizeAwrDbSysstatsResponse>;
    /**
     * Summarizes the AWR top wait events.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbTopWaitEventsRequest
     * @return SummarizeAwrDbTopWaitEventsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbTopWaitEvents.ts.html |here} to see how to use SummarizeAwrDbTopWaitEvents API.
     */
    summarizeAwrDbTopWaitEvents(summarizeAwrDbTopWaitEventsRequest: requests.SummarizeAwrDbTopWaitEventsRequest): Promise<responses.SummarizeAwrDbTopWaitEventsResponse>;
    /**
     * Summarizes AWR wait event data into value buckets and frequency, for the specified database in the AWR.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbWaitEventBucketsRequest
     * @return SummarizeAwrDbWaitEventBucketsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbWaitEventBuckets.ts.html |here} to see how to use SummarizeAwrDbWaitEventBuckets API.
     */
    summarizeAwrDbWaitEventBuckets(summarizeAwrDbWaitEventBucketsRequest: requests.SummarizeAwrDbWaitEventBucketsRequest): Promise<responses.SummarizeAwrDbWaitEventBucketsResponse>;
    /**
     * Summarizes the AWR wait event sample data for the specified database in the AWR. The event data is summarized based on the Time dimension for each event.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAwrDbWaitEventsRequest
     * @return SummarizeAwrDbWaitEventsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAwrDbWaitEvents.ts.html |here} to see how to use SummarizeAwrDbWaitEvents API.
     */
    summarizeAwrDbWaitEvents(summarizeAwrDbWaitEventsRequest: requests.SummarizeAwrDbWaitEventsRequest): Promise<responses.SummarizeAwrDbWaitEventsResponse>;
    /**
     * Gets metrics for the external ASM specified by `externalAsmId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeExternalAsmMetricsRequest
     * @return SummarizeExternalAsmMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeExternalAsmMetrics.ts.html |here} to see how to use SummarizeExternalAsmMetrics API.
     */
    summarizeExternalAsmMetrics(summarizeExternalAsmMetricsRequest: requests.SummarizeExternalAsmMetricsRequest): Promise<responses.SummarizeExternalAsmMetricsResponse>;
    /**
     * Gets metrics for the external cluster specified by `externalClusterId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeExternalClusterMetricsRequest
     * @return SummarizeExternalClusterMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeExternalClusterMetrics.ts.html |here} to see how to use SummarizeExternalClusterMetrics API.
     */
    summarizeExternalClusterMetrics(summarizeExternalClusterMetricsRequest: requests.SummarizeExternalClusterMetricsRequest): Promise<responses.SummarizeExternalClusterMetricsResponse>;
    /**
     * Gets metrics for the external DB node specified by `externalDbNodeId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeExternalDbNodeMetricsRequest
     * @return SummarizeExternalDbNodeMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeExternalDbNodeMetrics.ts.html |here} to see how to use SummarizeExternalDbNodeMetrics API.
     */
    summarizeExternalDbNodeMetrics(summarizeExternalDbNodeMetricsRequest: requests.SummarizeExternalDbNodeMetricsRequest): Promise<responses.SummarizeExternalDbNodeMetricsResponse>;
    /**
     * Gets availability metrics for the components present in the external DB system specified by `externalDbSystemId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeExternalDbSystemAvailabilityMetricsRequest
     * @return SummarizeExternalDbSystemAvailabilityMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeExternalDbSystemAvailabilityMetrics.ts.html |here} to see how to use SummarizeExternalDbSystemAvailabilityMetrics API.
     */
    summarizeExternalDbSystemAvailabilityMetrics(summarizeExternalDbSystemAvailabilityMetricsRequest: requests.SummarizeExternalDbSystemAvailabilityMetricsRequest): Promise<responses.SummarizeExternalDbSystemAvailabilityMetricsResponse>;
    /**
     * Gets metrics for the external listener specified by `externalListenerId`.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeExternalListenerMetricsRequest
     * @return SummarizeExternalListenerMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeExternalListenerMetrics.ts.html |here} to see how to use SummarizeExternalListenerMetrics API.
     */
    summarizeExternalListenerMetrics(summarizeExternalListenerMetricsRequest: requests.SummarizeExternalListenerMetricsRequest): Promise<responses.SummarizeExternalListenerMetricsResponse>;
    /**
     * Gets the number of job executions grouped by status for a job, Managed Database, or Database Group in a specific compartment. Only one of the parameters, jobId, managedDatabaseId, or managedDatabaseGroupId should be provided.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeJobExecutionsStatusesRequest
     * @return SummarizeJobExecutionsStatusesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeJobExecutionsStatuses.ts.html |here} to see how to use SummarizeJobExecutionsStatuses API.
     */
    summarizeJobExecutionsStatuses(summarizeJobExecutionsStatusesRequest: requests.SummarizeJobExecutionsStatusesRequest): Promise<responses.SummarizeJobExecutionsStatusesResponse>;
    /**
     * Gets the availability metrics related to managed database for the Oracle
     * database specified by managedDatabaseId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeManagedDatabaseAvailabilityMetricsRequest
     * @return SummarizeManagedDatabaseAvailabilityMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeManagedDatabaseAvailabilityMetrics.ts.html |here} to see how to use SummarizeManagedDatabaseAvailabilityMetrics API.
     */
    summarizeManagedDatabaseAvailabilityMetrics(summarizeManagedDatabaseAvailabilityMetricsRequest: requests.SummarizeManagedDatabaseAvailabilityMetricsRequest): Promise<responses.SummarizeManagedDatabaseAvailabilityMetricsResponse>;
    /**
     * Gets the number of SQL plan baselines aggregated by their attributes.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeSqlPlanBaselinesRequest
     * @return SummarizeSqlPlanBaselinesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeSqlPlanBaselines.ts.html |here} to see how to use SummarizeSqlPlanBaselines API.
     */
    summarizeSqlPlanBaselines(summarizeSqlPlanBaselinesRequest: requests.SummarizeSqlPlanBaselinesRequest): Promise<responses.SummarizeSqlPlanBaselinesResponse>;
    /**
     * Gets the number of SQL plan baselines aggregated by the age of their last execution in weeks.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeSqlPlanBaselinesByLastExecutionRequest
     * @return SummarizeSqlPlanBaselinesByLastExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeSqlPlanBaselinesByLastExecution.ts.html |here} to see how to use SummarizeSqlPlanBaselinesByLastExecution API.
     */
    summarizeSqlPlanBaselinesByLastExecution(summarizeSqlPlanBaselinesByLastExecutionRequest: requests.SummarizeSqlPlanBaselinesByLastExecutionRequest): Promise<responses.SummarizeSqlPlanBaselinesByLastExecutionResponse>;
    /**
     * Tests the named credential.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param TestNamedCredentialRequest
     * @return TestNamedCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/TestNamedCredential.ts.html |here} to see how to use TestNamedCredential API.
     */
    testNamedCredential(testNamedCredentialRequest: requests.TestNamedCredentialRequest): Promise<responses.TestNamedCredentialResponse>;
    /**
     * Tests the preferred credential.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param TestPreferredCredentialRequest
     * @return TestPreferredCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/TestPreferredCredential.ts.html |here} to see how to use TestPreferredCredential API.
     */
    testPreferredCredential(testPreferredCredentialRequest: requests.TestPreferredCredentialRequest): Promise<responses.TestPreferredCredentialResponse>;
    /**
     * Updates one or more attributes of a specific Database Management private endpoint.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDbManagementPrivateEndpointRequest
     * @return UpdateDbManagementPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateDbManagementPrivateEndpoint.ts.html |here} to see how to use UpdateDbManagementPrivateEndpoint API.
     */
    updateDbManagementPrivateEndpoint(updateDbManagementPrivateEndpointRequest: requests.UpdateDbManagementPrivateEndpointRequest): Promise<responses.UpdateDbManagementPrivateEndpointResponse>;
    /**
     * Updates the external ASM specified by `externalAsmId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalAsmRequest
     * @return UpdateExternalAsmResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalAsm.ts.html |here} to see how to use UpdateExternalAsm API.
     */
    updateExternalAsm(updateExternalAsmRequest: requests.UpdateExternalAsmRequest): Promise<responses.UpdateExternalAsmResponse>;
    /**
     * Updates the external ASM instance specified by `externalAsmInstanceId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalAsmInstanceRequest
     * @return UpdateExternalAsmInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalAsmInstance.ts.html |here} to see how to use UpdateExternalAsmInstance API.
     */
    updateExternalAsmInstance(updateExternalAsmInstanceRequest: requests.UpdateExternalAsmInstanceRequest): Promise<responses.UpdateExternalAsmInstanceResponse>;
    /**
     * Updates the external cluster specified by `externalClusterId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalClusterRequest
     * @return UpdateExternalClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalCluster.ts.html |here} to see how to use UpdateExternalCluster API.
     */
    updateExternalCluster(updateExternalClusterRequest: requests.UpdateExternalClusterRequest): Promise<responses.UpdateExternalClusterResponse>;
    /**
     * Updates the external cluster instance specified by `externalClusterInstanceId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalClusterInstanceRequest
     * @return UpdateExternalClusterInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalClusterInstance.ts.html |here} to see how to use UpdateExternalClusterInstance API.
     */
    updateExternalClusterInstance(updateExternalClusterInstanceRequest: requests.UpdateExternalClusterInstanceRequest): Promise<responses.UpdateExternalClusterInstanceResponse>;
    /**
     * Updates the external DB home specified by `externalDbHomeId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalDbHomeRequest
     * @return UpdateExternalDbHomeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalDbHome.ts.html |here} to see how to use UpdateExternalDbHome API.
     */
    updateExternalDbHome(updateExternalDbHomeRequest: requests.UpdateExternalDbHomeRequest): Promise<responses.UpdateExternalDbHomeResponse>;
    /**
     * Updates the external DB node specified by `externalDbNodeId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalDbNodeRequest
     * @return UpdateExternalDbNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalDbNode.ts.html |here} to see how to use UpdateExternalDbNode API.
     */
    updateExternalDbNode(updateExternalDbNodeRequest: requests.UpdateExternalDbNodeRequest): Promise<responses.UpdateExternalDbNodeResponse>;
    /**
     * Updates the external DB system specified by `externalDbSystemId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalDbSystemRequest
     * @return UpdateExternalDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalDbSystem.ts.html |here} to see how to use UpdateExternalDbSystem API.
     */
    updateExternalDbSystem(updateExternalDbSystemRequest: requests.UpdateExternalDbSystemRequest): Promise<responses.UpdateExternalDbSystemResponse>;
    /**
     * Updates the external connector specified by `externalDbSystemConnectorId`.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalDbSystemConnectorRequest
     * @return UpdateExternalDbSystemConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalDbSystemConnector.ts.html |here} to see how to use UpdateExternalDbSystemConnector API.
     */
    updateExternalDbSystemConnector(updateExternalDbSystemConnectorRequest: requests.UpdateExternalDbSystemConnectorRequest): Promise<responses.UpdateExternalDbSystemConnectorResponse>;
    /**
     * Updates the external DB system discovery specified by `externalDbSystemDiscoveryId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalDbSystemDiscoveryRequest
     * @return UpdateExternalDbSystemDiscoveryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalDbSystemDiscovery.ts.html |here} to see how to use UpdateExternalDbSystemDiscovery API.
     */
    updateExternalDbSystemDiscovery(updateExternalDbSystemDiscoveryRequest: requests.UpdateExternalDbSystemDiscoveryRequest): Promise<responses.UpdateExternalDbSystemDiscoveryResponse>;
    /**
     * Updates the details for the Exadata infrastructure specified by externalExadataInfrastructureId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateExternalExadataInfrastructureRequest
     * @return UpdateExternalExadataInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalExadataInfrastructure.ts.html |here} to see how to use UpdateExternalExadataInfrastructure API.
     */
    updateExternalExadataInfrastructure(updateExternalExadataInfrastructureRequest: requests.UpdateExternalExadataInfrastructureRequest): Promise<responses.UpdateExternalExadataInfrastructureResponse>;
    /**
     * Updates the Exadata storage server connector specified by exadataStorageConnectorId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalExadataStorageConnectorRequest
     * @return UpdateExternalExadataStorageConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalExadataStorageConnector.ts.html |here} to see how to use UpdateExternalExadataStorageConnector API.
     */
    updateExternalExadataStorageConnector(updateExternalExadataStorageConnectorRequest: requests.UpdateExternalExadataStorageConnectorRequest): Promise<responses.UpdateExternalExadataStorageConnectorResponse>;
    /**
     * Updates the Exadata storage server grid specified by exadataStorageGridId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalExadataStorageGridRequest
     * @return UpdateExternalExadataStorageGridResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalExadataStorageGrid.ts.html |here} to see how to use UpdateExternalExadataStorageGrid API.
     */
    updateExternalExadataStorageGrid(updateExternalExadataStorageGridRequest: requests.UpdateExternalExadataStorageGridRequest): Promise<responses.UpdateExternalExadataStorageGridResponse>;
    /**
     * Updates the Exadata storage server specified by exadataStorageServerId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalExadataStorageServerRequest
     * @return UpdateExternalExadataStorageServerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalExadataStorageServer.ts.html |here} to see how to use UpdateExternalExadataStorageServer API.
     */
    updateExternalExadataStorageServer(updateExternalExadataStorageServerRequest: requests.UpdateExternalExadataStorageServerRequest): Promise<responses.UpdateExternalExadataStorageServerResponse>;
    /**
     * Updates the external listener specified by `externalListenerId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalListenerRequest
     * @return UpdateExternalListenerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalListener.ts.html |here} to see how to use UpdateExternalListener API.
     */
    updateExternalListener(updateExternalListenerRequest: requests.UpdateExternalListenerRequest): Promise<responses.UpdateExternalListenerResponse>;
    /**
     * Updates the External Mysql Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalMysqlDatabaseRequest
     * @return UpdateExternalMysqlDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalMysqlDatabase.ts.html |here} to see how to use UpdateExternalMysqlDatabase API.
     */
    updateExternalMysqlDatabase(updateExternalMysqlDatabaseRequest: requests.UpdateExternalMysqlDatabaseRequest): Promise<responses.UpdateExternalMysqlDatabaseResponse>;
    /**
     * Updates the External Mysql Database Connector.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateExternalMysqlDatabaseConnectorRequest
     * @return UpdateExternalMysqlDatabaseConnectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateExternalMysqlDatabaseConnector.ts.html |here} to see how to use UpdateExternalMysqlDatabaseConnector API.
     */
    updateExternalMysqlDatabaseConnector(updateExternalMysqlDatabaseConnectorRequest: requests.UpdateExternalMysqlDatabaseConnectorRequest): Promise<responses.UpdateExternalMysqlDatabaseConnectorResponse>;
    /**
     * Updates the details for the recurring scheduled job specified by jobId. Note that non-recurring (one time) jobs cannot be updated.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateJobRequest
     * @return UpdateJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateJob.ts.html |here} to see how to use UpdateJob API.
     */
    updateJob(updateJobRequest: requests.UpdateJobRequest): Promise<responses.UpdateJobResponse>;
    /**
     * Updates the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateManagedDatabaseRequest
     * @return UpdateManagedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateManagedDatabase.ts.html |here} to see how to use UpdateManagedDatabase API.
     */
    updateManagedDatabase(updateManagedDatabaseRequest: requests.UpdateManagedDatabaseRequest): Promise<responses.UpdateManagedDatabaseResponse>;
    /**
     * Updates the Managed Database Group specified by managedDatabaseGroupId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateManagedDatabaseGroupRequest
     * @return UpdateManagedDatabaseGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateManagedDatabaseGroup.ts.html |here} to see how to use UpdateManagedDatabaseGroup API.
     */
    updateManagedDatabaseGroup(updateManagedDatabaseGroupRequest: requests.UpdateManagedDatabaseGroupRequest): Promise<responses.UpdateManagedDatabaseGroupResponse>;
    /**
     * Updates the named credential specified by namedCredentialId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateNamedCredentialRequest
     * @return UpdateNamedCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateNamedCredential.ts.html |here} to see how to use UpdateNamedCredential API.
     */
    updateNamedCredential(updateNamedCredentialRequest: requests.UpdateNamedCredentialRequest): Promise<responses.UpdateNamedCredentialResponse>;
    /**
     * Updates the preferred credential based on the credentialName.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdatePreferredCredentialRequest
     * @return UpdatePreferredCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdatePreferredCredential.ts.html |here} to see how to use UpdatePreferredCredential API.
     */
    updatePreferredCredential(updatePreferredCredentialRequest: requests.UpdatePreferredCredentialRequest): Promise<responses.UpdatePreferredCredentialResponse>;
    /**
     * Updates the attributes of the tablespace specified by tablespaceName within the Managed Database specified by managedDatabaseId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTablespaceRequest
     * @return UpdateTablespaceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/UpdateTablespace.ts.html |here} to see how to use UpdateTablespace API.
     */
    updateTablespace(updateTablespaceRequest: requests.UpdateTablespaceRequest): Promise<responses.UpdateTablespaceResponse>;
}
export declare enum DiagnosabilityApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class DiagnosabilityClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Lists the alert logs for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAlertLogsRequest
     * @return ListAlertLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAlertLogs.ts.html |here} to see how to use ListAlertLogs API.
     */
    listAlertLogs(listAlertLogsRequest: requests.ListAlertLogsRequest): Promise<responses.ListAlertLogsResponse>;
    /**
     * Lists the attention logs for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAttentionLogsRequest
     * @return ListAttentionLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListAttentionLogs.ts.html |here} to see how to use ListAttentionLogs API.
     */
    listAttentionLogs(listAttentionLogsRequest: requests.ListAttentionLogsRequest): Promise<responses.ListAttentionLogsResponse>;
    /**
     * Get the counts of alert logs for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAlertLogCountsRequest
     * @return SummarizeAlertLogCountsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAlertLogCounts.ts.html |here} to see how to use SummarizeAlertLogCounts API.
     */
    summarizeAlertLogCounts(summarizeAlertLogCountsRequest: requests.SummarizeAlertLogCountsRequest): Promise<responses.SummarizeAlertLogCountsResponse>;
    /**
     * Get the counts of attention logs for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SummarizeAttentionLogCountsRequest
     * @return SummarizeAttentionLogCountsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeAttentionLogCounts.ts.html |here} to see how to use SummarizeAttentionLogCounts API.
     */
    summarizeAttentionLogCounts(summarizeAttentionLogCountsRequest: requests.SummarizeAttentionLogCountsRequest): Promise<responses.SummarizeAttentionLogCountsResponse>;
}
export declare enum ManagedMySqlDatabasesApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagedMySqlDatabasesClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ManagedMySqlDatabasesWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ManagedMySqlDatabasesWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ManagedMySqlDatabasesWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ManagedMySqlDatabasesWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Changes the management type for a HeatWave MySQL instance, from BASIC to FULL and vice versa.
     * It can also be used to enable or disable database management.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeMysqlDatabaseManagementTypeRequest
     * @return ChangeMysqlDatabaseManagementTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ChangeMysqlDatabaseManagementType.ts.html |here} to see how to use ChangeMysqlDatabaseManagementType API.
     */
    changeMysqlDatabaseManagementType(changeMysqlDatabaseManagementTypeRequest: requests.ChangeMysqlDatabaseManagementTypeRequest): Promise<responses.ChangeMysqlDatabaseManagementTypeResponse>;
    /**
     * Retrieves information pertaining to binary log of a specific MySQL server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetBinaryLogInformationRequest
     * @return GetBinaryLogInformationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetBinaryLogInformation.ts.html |here} to see how to use GetBinaryLogInformation API.
     */
    getBinaryLogInformation(getBinaryLogInformationRequest: requests.GetBinaryLogInformationRequest): Promise<responses.GetBinaryLogInformationResponse>;
    /**
     * Retrieves general information regarding replication of a specific MySQL server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetGeneralReplicationInformationRequest
     * @return GetGeneralReplicationInformationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetGeneralReplicationInformation.ts.html |here} to see how to use GetGeneralReplicationInformation API.
     */
    getGeneralReplicationInformation(getGeneralReplicationInformationRequest: requests.GetGeneralReplicationInformationRequest): Promise<responses.GetGeneralReplicationInformationResponse>;
    /**
     * Gets the health metrics for a fleet of HeatWave clusters in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetHeatWaveFleetMetricRequest
     * @return GetHeatWaveFleetMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetHeatWaveFleetMetric.ts.html |here} to see how to use GetHeatWaveFleetMetric API.
     */
    getHeatWaveFleetMetric(getHeatWaveFleetMetricRequest: requests.GetHeatWaveFleetMetricRequest): Promise<responses.GetHeatWaveFleetMetricResponse>;
    /**
     * Retrieves the general information for a specific MySQL Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagedMySqlDatabaseRequest
     * @return GetManagedMySqlDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetManagedMySqlDatabase.ts.html |here} to see how to use GetManagedMySqlDatabase API.
     */
    getManagedMySqlDatabase(getManagedMySqlDatabaseRequest: requests.GetManagedMySqlDatabaseRequest): Promise<responses.GetManagedMySqlDatabaseResponse>;
    /**
     * Gets the health metrics for a fleet of MySQL Databases in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMySqlFleetMetricRequest
     * @return GetMySqlFleetMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetMySqlFleetMetric.ts.html |here} to see how to use GetMySqlFleetMetric API.
     */
    getMySqlFleetMetric(getMySqlFleetMetricRequest: requests.GetMySqlFleetMetricRequest): Promise<responses.GetMySqlFleetMetricResponse>;
    /**
     * Retrieves query sample details, explain plan and potential warnings for a given digest.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMySqlQueryDetailsRequest
     * @return GetMySqlQueryDetailsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetMySqlQueryDetails.ts.html |here} to see how to use GetMySqlQueryDetails API.
     */
    getMySqlQueryDetails(getMySqlQueryDetailsRequest: requests.GetMySqlQueryDetailsRequest): Promise<responses.GetMySqlQueryDetailsResponse>;
    /**
     * Information about high availability members of a specific MySQL server's replication group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListHighAvailabilityMembersRequest
     * @return ListHighAvailabilityMembersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListHighAvailabilityMembers.ts.html |here} to see how to use ListHighAvailabilityMembers API.
     */
    listHighAvailabilityMembers(listHighAvailabilityMembersRequest: requests.ListHighAvailabilityMembersRequest): Promise<responses.ListHighAvailabilityMembersResponse>;
    /**
     * Retrieves information about the inbound replications of a specific MySQL server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListInboundReplicationsRequest
     * @return ListInboundReplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListInboundReplications.ts.html |here} to see how to use ListInboundReplications API.
     */
    listInboundReplications(listInboundReplicationsRequest: requests.ListInboundReplicationsRequest): Promise<responses.ListInboundReplicationsResponse>;
    /**
     * Retrieves configuration data for a specific MySQL database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedMySqlDatabaseConfigurationDataRequest
     * @return ListManagedMySqlDatabaseConfigurationDataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListManagedMySqlDatabaseConfigurationData.ts.html |here} to see how to use ListManagedMySqlDatabaseConfigurationData API.
     */
    listManagedMySqlDatabaseConfigurationData(listManagedMySqlDatabaseConfigurationDataRequest: requests.ListManagedMySqlDatabaseConfigurationDataRequest): Promise<responses.ListManagedMySqlDatabaseConfigurationDataResponse>;
    /**
     * Retrieves the SQL performance data for a specific MySQL database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedMySqlDatabaseSqlDataRequest
     * @return ListManagedMySqlDatabaseSqlDataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListManagedMySqlDatabaseSqlData.ts.html |here} to see how to use ListManagedMySqlDatabaseSqlData API.
     */
    listManagedMySqlDatabaseSqlData(listManagedMySqlDatabaseSqlDataRequest: requests.ListManagedMySqlDatabaseSqlDataRequest): Promise<responses.ListManagedMySqlDatabaseSqlDataResponse>;
    /**
     * Gets the list of Managed MySQL Databases in a specific compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagedMySqlDatabasesRequest
     * @return ListManagedMySqlDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListManagedMySqlDatabases.ts.html |here} to see how to use ListManagedMySqlDatabases API.
     */
    listManagedMySqlDatabases(listManagedMySqlDatabasesRequest: requests.ListManagedMySqlDatabasesRequest): Promise<responses.ListManagedMySqlDatabasesResponse>;
    /**
     * Retrieves any potential errors for a given digest.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMySqlDigestErrorsRequest
     * @return ListMySqlDigestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListMySqlDigestErrors.ts.html |here} to see how to use ListMySqlDigestErrors API.
     */
    listMySqlDigestErrors(listMySqlDigestErrorsRequest: requests.ListMySqlDigestErrorsRequest): Promise<responses.ListMySqlDigestErrorsResponse>;
    /**
     * Retrieves information pertaining to outbound replications of a specific MySQL server.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListOutboundReplicationsRequest
     * @return ListOutboundReplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListOutboundReplications.ts.html |here} to see how to use ListOutboundReplications API.
     */
    listOutboundReplications(listOutboundReplicationsRequest: requests.ListOutboundReplicationsRequest): Promise<responses.ListOutboundReplicationsResponse>;
    /**
     * Gets the availability metrics for the MySQL Database specified by managedMySqlDatabaseId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeManagedMySqlDatabaseAvailabilityMetricsRequest
     * @return SummarizeManagedMySqlDatabaseAvailabilityMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SummarizeManagedMySqlDatabaseAvailabilityMetrics.ts.html |here} to see how to use SummarizeManagedMySqlDatabaseAvailabilityMetrics API.
     */
    summarizeManagedMySqlDatabaseAvailabilityMetrics(summarizeManagedMySqlDatabaseAvailabilityMetricsRequest: requests.SummarizeManagedMySqlDatabaseAvailabilityMetricsRequest): Promise<responses.SummarizeManagedMySqlDatabaseAvailabilityMetricsResponse>;
}
export declare enum PerfhubApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class PerfhubClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Modifies the snapshot settings for the specified Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ModifySnapshotSettingsRequest
     * @return ModifySnapshotSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ModifySnapshotSettings.ts.html |here} to see how to use ModifySnapshotSettings API.
     */
    modifySnapshotSettings(modifySnapshotSettingsRequest: requests.ModifySnapshotSettingsRequest): Promise<responses.ModifySnapshotSettingsResponse>;
}
export declare enum SqlTuningApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class SqlTuningClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Clones and runs a SQL tuning task in the database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CloneSqlTuningTaskRequest
     * @return CloneSqlTuningTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CloneSqlTuningTask.ts.html |here} to see how to use CloneSqlTuningTask API.
     */
    cloneSqlTuningTask(cloneSqlTuningTaskRequest: requests.CloneSqlTuningTaskRequest): Promise<responses.CloneSqlTuningTaskResponse>;
    /**
     * Creates an empty Sql tuning set within the Managed Database specified by managedDatabaseId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateSqlTuningSetRequest
     * @return CreateSqlTuningSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/CreateSqlTuningSet.ts.html |here} to see how to use CreateSqlTuningSet API.
     */
    createSqlTuningSet(createSqlTuningSetRequest: requests.CreateSqlTuningSetRequest): Promise<responses.CreateSqlTuningSetResponse>;
    /**
     * Drops the Sql tuning set specified by sqlTuningSet within the Managed Database specified by managedDatabaseId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DropSqlTuningSetRequest
     * @return DropSqlTuningSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DropSqlTuningSet.ts.html |here} to see how to use DropSqlTuningSet API.
     */
    dropSqlTuningSet(dropSqlTuningSetRequest: requests.DropSqlTuningSetRequest): Promise<responses.DropSqlTuningSetResponse>;
    /**
     * Drops a SQL tuning task and its related results from the database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DropSqlTuningTaskRequest
     * @return DropSqlTuningTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DropSqlTuningTask.ts.html |here} to see how to use DropSqlTuningTask API.
     */
    dropSqlTuningTask(dropSqlTuningTaskRequest: requests.DropSqlTuningTaskRequest): Promise<responses.DropSqlTuningTaskResponse>;
    /**
     * Deletes the Sqls in the specified Sql tuning set that matches the filter criteria provided in the basicFilter.
     * If basicFilter criteria is not provided, then entire Sqls in the Sql tuning set is deleted.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DropSqlsInSqlTuningSetRequest
     * @return DropSqlsInSqlTuningSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/DropSqlsInSqlTuningSet.ts.html |here} to see how to use DropSqlsInSqlTuningSet API.
     */
    dropSqlsInSqlTuningSet(dropSqlsInSqlTuningSetRequest: requests.DropSqlsInSqlTuningSetRequest): Promise<responses.DropSqlsInSqlTuningSetResponse>;
    /**
     * Fetch the details of Sql statements in the Sql tuning set specified by name, owner and optional filter parameters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param FetchSqlTuningSetRequest
     * @return FetchSqlTuningSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/FetchSqlTuningSet.ts.html |here} to see how to use FetchSqlTuningSet API.
     */
    fetchSqlTuningSet(fetchSqlTuningSetRequest: requests.FetchSqlTuningSetRequest): Promise<responses.FetchSqlTuningSetResponse>;
    /**
     * Retrieves a comparison of the existing SQL execution plan and a new plan.
     * A SQL tuning task may suggest a new execution plan for a SQL,
     * and this API retrieves the comparison report of the statistics of the two plans.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetExecutionPlanStatsComparisionRequest
     * @return GetExecutionPlanStatsComparisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetExecutionPlanStatsComparision.ts.html |here} to see how to use GetExecutionPlanStatsComparision API.
     */
    getExecutionPlanStatsComparision(getExecutionPlanStatsComparisionRequest: requests.GetExecutionPlanStatsComparisionRequest): Promise<responses.GetExecutionPlanStatsComparisionResponse>;
    /**
     * Retrieves a SQL execution plan for the SQL being tuned.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSqlExecutionPlanRequest
     * @return GetSqlExecutionPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetSqlExecutionPlan.ts.html |here} to see how to use GetSqlExecutionPlan API.
     */
    getSqlExecutionPlan(getSqlExecutionPlanRequest: requests.GetSqlExecutionPlanRequest): Promise<responses.GetSqlExecutionPlanResponse>;
    /**
     * Gets the summary report for the specified SQL Tuning Advisor task.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSqlTuningAdvisorTaskSummaryReportRequest
     * @return GetSqlTuningAdvisorTaskSummaryReportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/GetSqlTuningAdvisorTaskSummaryReport.ts.html |here} to see how to use GetSqlTuningAdvisorTaskSummaryReport API.
     */
    getSqlTuningAdvisorTaskSummaryReport(getSqlTuningAdvisorTaskSummaryReportRequest: requests.GetSqlTuningAdvisorTaskSummaryReportRequest): Promise<responses.GetSqlTuningAdvisorTaskSummaryReportResponse>;
    /**
     * Gets an array of the details of the findings that match specific filters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSqlTuningAdvisorTaskFindingsRequest
     * @return ListSqlTuningAdvisorTaskFindingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlTuningAdvisorTaskFindings.ts.html |here} to see how to use ListSqlTuningAdvisorTaskFindings API.
     */
    listSqlTuningAdvisorTaskFindings(listSqlTuningAdvisorTaskFindingsRequest: requests.ListSqlTuningAdvisorTaskFindingsRequest): Promise<responses.ListSqlTuningAdvisorTaskFindingsResponse>;
    /**
     * Gets the findings and possible actions for a given object in a SQL tuning task.
     * The task ID and object ID are used to retrieve the findings and recommendations.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSqlTuningAdvisorTaskRecommendationsRequest
     * @return ListSqlTuningAdvisorTaskRecommendationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlTuningAdvisorTaskRecommendations.ts.html |here} to see how to use ListSqlTuningAdvisorTaskRecommendations API.
     */
    listSqlTuningAdvisorTaskRecommendations(listSqlTuningAdvisorTaskRecommendationsRequest: requests.ListSqlTuningAdvisorTaskRecommendationsRequest): Promise<responses.ListSqlTuningAdvisorTaskRecommendationsResponse>;
    /**
     * Lists the SQL Tuning Advisor tasks for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSqlTuningAdvisorTasksRequest
     * @return ListSqlTuningAdvisorTasksResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlTuningAdvisorTasks.ts.html |here} to see how to use ListSqlTuningAdvisorTasks API.
     */
    listSqlTuningAdvisorTasks(listSqlTuningAdvisorTasksRequest: requests.ListSqlTuningAdvisorTasksRequest): Promise<responses.ListSqlTuningAdvisorTasksResponse>;
    /**
     * Lists the SQL tuning sets for the specified Managed Database.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSqlTuningSetsRequest
     * @return ListSqlTuningSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ListSqlTuningSets.ts.html |here} to see how to use ListSqlTuningSets API.
     */
    listSqlTuningSets(listSqlTuningSetsRequest: requests.ListSqlTuningSetsRequest): Promise<responses.ListSqlTuningSetsResponse>;
    /**
     * Load Sql statements into the Sql tuning set specified by name and optional filter parameters within the Managed Database specified by managedDatabaseId.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param LoadSqlTuningSetRequest
     * @return LoadSqlTuningSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/LoadSqlTuningSet.ts.html |here} to see how to use LoadSqlTuningSet API.
     */
    loadSqlTuningSet(loadSqlTuningSetRequest: requests.LoadSqlTuningSetRequest): Promise<responses.LoadSqlTuningSetResponse>;
    /**
     * Saves the specified list of Sqls statements into another new Sql tuning set or loads into an existing Sql tuning set'.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SaveSqlTuningSetAsRequest
     * @return SaveSqlTuningSetAsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/SaveSqlTuningSetAs.ts.html |here} to see how to use SaveSqlTuningSetAs API.
     */
    saveSqlTuningSetAs(saveSqlTuningSetAsRequest: requests.SaveSqlTuningSetAsRequest): Promise<responses.SaveSqlTuningSetAsResponse>;
    /**
     * Starts a SQL tuning task for a given set of SQL statements from the active session history top SQL statements.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StartSqlTuningTaskRequest
     * @return StartSqlTuningTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/StartSqlTuningTask.ts.html |here} to see how to use StartSqlTuningTask API.
     */
    startSqlTuningTask(startSqlTuningTaskRequest: requests.StartSqlTuningTaskRequest): Promise<responses.StartSqlTuningTaskResponse>;
    /**
     * Executes a SQL query to check whether user entered basic filter criteria is valid or not.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ValidateBasicFilterRequest
     * @return ValidateBasicFilterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/databasemanagement/ValidateBasicFilter.ts.html |here} to see how to use ValidateBasicFilter API.
     */
    validateBasicFilter(validateBasicFilterRequest: requests.ValidateBasicFilterRequest): Promise<responses.ValidateBasicFilterResponse>;
}
export {};
