/**
 * Media Services API
 * Media Services (includes Media Flow and Media Streams) is a fully managed service for processing media (video) source content. Use Media Flow and Media Streams to transcode and package digital video using configurable workflows and stream video outputs.

Use the Media Services API to configure media workflows and run Media Flow jobs, create distribution channels, ingest assets, create Preview URLs and play assets. For more information, see [Media Flow](https://docs.oracle.com/iaas/Content/dms-mediaflow/home.htm) and [Media Streams](https://docs.oracle.com/iaas/Content/dms-mediastream/home.htm).

 * OpenAPI spec version: 20211101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Resusable set of values that can be referenced either in a MediaWorkflow or when running a MediaWorkflowJob.
 */
export interface MediaWorkflowConfiguration {
    /**
     * Unique identifier that is immutable on creation.
     */
    "id": string;
    /**
     * Display name for the MediaWorkflowConfiguration. Avoid entering confidential information.
     */
    "displayName": string;
    /**
     * Compartment Identifier.
     */
    "compartmentId": string;
    /**
     * Reuseable parameter values encoded as a JSON; the top and second level JSON elements are
     * objects. Each key of the top level object refer to a task key that is unqiue to the
     * workflow, each of the second level objects' keys refer to the name of a parameter that is
     * unique to the task. taskKey -> parameterName -> parameterValue
     *
     */
    "parameters": {
        [key: string]: any;
    };
    /**
     * The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
     */
    "timeCreated"?: Date;
    /**
     * The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the MediaWorkflowConfiguration.
     */
    "lifecycleState"?: MediaWorkflowConfiguration.LifecycleState;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecyleDetails"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Locks associated with this resource.
     */
    "locks"?: Array<model.ResourceLock>;
}
export declare namespace MediaWorkflowConfiguration {
    enum LifecycleState {
        Active = "ACTIVE",
        Deleted = "DELETED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: MediaWorkflowConfiguration): object;
    function getDeserializedJsonObj(obj: MediaWorkflowConfiguration): object;
}
