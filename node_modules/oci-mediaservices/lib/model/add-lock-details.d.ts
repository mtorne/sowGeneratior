/**
 * Media Services API
 * Media Services (includes Media Flow and Media Streams) is a fully managed service for processing media (video) source content. Use Media Flow and Media Streams to transcode and package digital video using configurable workflows and stream video outputs.

Use the Media Services API to configure media workflows and run Media Flow jobs, create distribution channels, ingest assets, create Preview URLs and play assets. For more information, see [Media Flow](https://docs.oracle.com/iaas/Content/dms-mediaflow/home.htm) and [Media Streams](https://docs.oracle.com/iaas/Content/dms-mediastream/home.htm).

 * OpenAPI spec version: 20211101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Request payload to add lock to the resource. The FULL lock type allows no modifications (delete, create, update).
 * The DELETE lock type allows all modifications, but delete is not allowed.
 * type: object
 *
 */
export interface AddLockDetails {
    /**
     * Type of the lock.
     */
    "type": AddLockDetails.Type;
    /**
     * The compartment ID of the lock.
     */
    "compartmentId": string;
    /**
     * The ID of the Target that is locking this Target. Indicates that deleting this Target will remove the lock.
     *
     */
    "relatedResourceId"?: string;
    /**
     * A message added by the creator of the lock. This is typically used to give an
     * indication of why the resource is locked.
     *
     */
    "message"?: string;
    /**
     * When the lock was created.
     */
    "timeCreated"?: Date;
}
export declare namespace AddLockDetails {
    enum Type {
        Full = "FULL",
        Delete = "DELETE"
    }
    function getJsonObj(obj: AddLockDetails): object;
    function getDeserializedJsonObj(obj: AddLockDetails): object;
}
