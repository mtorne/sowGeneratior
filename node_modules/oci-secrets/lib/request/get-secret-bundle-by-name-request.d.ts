/**
 *
 *
 * OpenAPI spec version: 20190301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/secrets/GetSecretBundleByName.ts.html |here} to see how to use GetSecretBundleByNameRequest.
 */
export interface GetSecretBundleByNameRequest extends common.BaseRequest {
    /**
     * A user-friendly name for the secret. Secret names are unique within a vault. Secret names are case-sensitive.
     */
    "secretName": string;
    /**
     * The OCID of the vault that contains the secret.
     */
    "vaultId": string;
    /**
     * Unique identifier for the request.
     */
    "opcRequestId"?: string;
    /**
     * The version number of the secret.
     */
    "versionNumber"?: number;
    /**
     * The name of the secret. (This might be referred to as the name of the secret version. Names are unique across the different versions of a secret.)
     */
    "secretVersionName"?: string;
    /**
     * The rotation state of the secret version.
     */
    "stage"?: GetSecretBundleByNameRequest.Stage;
}
export declare namespace GetSecretBundleByNameRequest {
    enum Stage {
        Current = "CURRENT",
        Pending = "PENDING",
        Latest = "LATEST",
        Previous = "PREVIOUS",
        Deprecated = "DEPRECATED"
    }
}
