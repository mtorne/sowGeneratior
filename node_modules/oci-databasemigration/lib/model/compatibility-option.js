"use strict";
/**
 * Database Migration API
 * Use the Oracle Cloud Infrastructure Database Migration APIs to perform database migration operations.
 * OpenAPI spec version: 20230518
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompatibilityOption = void 0;
/**
 * Compatibility option.
 * FORCE_INNODB - Change CREATE TABLE statements to use the InnoDB storage engine
 *   for any tables that do not already use it.
 * SKIP_INVALID_ACCOUNTS - Remove user accounts created with external authentication plugins
 *   that are not supported in MySQL HeatWave Service.
 * STRIP_DEFINERS - Remove the DEFINER clause from views, routines, events, and triggers, so these
 *   objects are created with the default definer.
 * STRIP_RESTRICTED_GRANTS - Remove specific privileges that are restricted by MySQL HeatWave Service
 *   from GRANT statements, so users and their roles cannot be given these privileges
 * STRIP_TABLESPACES - Remove the TABLESPACE clause from CREATE TABLE statements,
 *   so all tables are created in their default tablespaces.
 * IGNORE_WILDCARD_GRANTS - Ignore errors from grants on schemas with wildcards, which are interpreted
 *   differently in systems where the partial_revokes system variable is enabled.
 * STRIP_INVALID_GRANTS - Strip grant statements which would fail when users are loaded.
 *   Such as grants referring to a specific routine which does not exist.
 *
 **/
var CompatibilityOption;
(function (CompatibilityOption) {
    CompatibilityOption["ForceInnodb"] = "FORCE_INNODB";
    CompatibilityOption["SkipInvalidAccounts"] = "SKIP_INVALID_ACCOUNTS";
    CompatibilityOption["StripDefiners"] = "STRIP_DEFINERS";
    CompatibilityOption["StripRestrictedGrants"] = "STRIP_RESTRICTED_GRANTS";
    CompatibilityOption["StripTablespaces"] = "STRIP_TABLESPACES";
    CompatibilityOption["IgnoreWildcardGrants"] = "IGNORE_WILDCARD_GRANTS";
    CompatibilityOption["StripInvalidGrants"] = "STRIP_INVALID_GRANTS";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    CompatibilityOption["UnknownValue"] = "UNKNOWN_VALUE";
})(CompatibilityOption = exports.CompatibilityOption || (exports.CompatibilityOption = {}));
(function (CompatibilityOption) {
    function getJsonObj(obj) {
        return obj;
    }
    CompatibilityOption.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    CompatibilityOption.getDeserializedJsonObj = getDeserializedJsonObj;
})(CompatibilityOption = exports.CompatibilityOption || (exports.CompatibilityOption = {}));
//# sourceMappingURL=compatibility-option.js.map