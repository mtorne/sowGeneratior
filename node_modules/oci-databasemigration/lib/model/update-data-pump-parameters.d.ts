/**
 * Database Migration API
 * Use the Oracle Cloud Infrastructure Database Migration APIs to perform database migration operations.
 * OpenAPI spec version: 20230518
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Optional parameters for Data Pump Export and Import.
 * If an empty object is specified, the stored Data Pump Parameter details will be removed.
 *
 */
export interface UpdateDataPumpParameters {
    /**
     * Set to false to force Data Pump worker process to run on one instance.
     */
    "isCluster"?: boolean;
    /**
     * Estimate size of dumps that will be generated.
     */
    "estimate"?: model.DataPumpEstimate;
    /**
     * IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     *
     */
    "tableExistsAction"?: model.DataPumpTableExistsAction;
    /**
     * Exclude paratemers for Export and Import.
     */
    "excludeParameters"?: Array<model.DataPumpExcludeParameters>;
    /**
     * Maximum number of worker processes that can be used for a Data Pump Import job.
     * For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "importParallelismDegree"?: number;
    /**
     * Maximum number of worker processes that can be used for a Data Pump Export job. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "exportParallelismDegree"?: number;
}
export declare namespace UpdateDataPumpParameters {
    function getJsonObj(obj: UpdateDataPumpParameters): object;
    function getDeserializedJsonObj(obj: UpdateDataPumpParameters): object;
}
