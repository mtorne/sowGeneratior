"use strict";
/**
 * Vault Secret Management API
 * Use the Secret Management API to manage secrets and secret versions. For more information, see [Managing Secrets](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingsecrets.htm).
 * OpenAPI spec version: 20180608
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Secret = void 0;
const model = __importStar(require("../model"));
var Secret;
(function (Secret) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["SchedulingDeletion"] = "SCHEDULING_DELETION";
        LifecycleState["PendingDeletion"] = "PENDING_DELETION";
        LifecycleState["CancellingDeletion"] = "CANCELLING_DELETION";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = Secret.LifecycleState || (Secret.LifecycleState = {}));
    let RotationStatus;
    (function (RotationStatus) {
        RotationStatus["InProgress"] = "IN_PROGRESS";
        RotationStatus["Scheduled"] = "SCHEDULED";
        RotationStatus["NotEnabled"] = "NOT_ENABLED";
        RotationStatus["Cancelling"] = "CANCELLING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        RotationStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(RotationStatus = Secret.RotationStatus || (Secret.RotationStatus = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "rotationConfig": obj.rotationConfig
                ? model.RotationConfig.getJsonObj(obj.rotationConfig)
                : undefined,
            "secretRules": obj.secretRules
                ? obj.secretRules.map(item => {
                    return model.SecretRule.getJsonObj(item);
                })
                : undefined,
            "secretGenerationContext": obj.secretGenerationContext
                ? model.SecretGenerationContext.getJsonObj(obj.secretGenerationContext)
                : undefined
        });
        return jsonObj;
    }
    Secret.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "rotationConfig": obj.rotationConfig
                ? model.RotationConfig.getDeserializedJsonObj(obj.rotationConfig)
                : undefined,
            "secretRules": obj.secretRules
                ? obj.secretRules.map(item => {
                    return model.SecretRule.getDeserializedJsonObj(item);
                })
                : undefined,
            "secretGenerationContext": obj.secretGenerationContext
                ? model.SecretGenerationContext.getDeserializedJsonObj(obj.secretGenerationContext)
                : undefined
        });
        return jsonObj;
    }
    Secret.getDeserializedJsonObj = getDeserializedJsonObj;
})(Secret = exports.Secret || (exports.Secret = {}));
//# sourceMappingURL=secret.js.map