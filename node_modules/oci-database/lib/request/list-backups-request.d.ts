/**
 *
 *
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/database/ListBackups.ts.html |here} to see how to use ListBackupsRequest.
 */
export interface ListBackupsRequest extends common.BaseRequest {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    "databaseId"?: string;
    /**
     * The compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    "compartmentId"?: string;
    /**
     * The maximum number of items to return per page.
     */
    "limit"?: number;
    /**
     * The pagination token to continue listing from.
     */
    "page"?: string;
    /**
     * If provided, filters the results to the set of database versions which are supported for the given shape family.
     */
    "shapeFamily"?: ListBackupsRequest.ShapeFamily;
    /**
     * A filter to return only resources that match the given database version.
     */
    "version"?: string;
    /**
     * A filter to return only backups that matches with the given type of Backup.
     */
    "type"?: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    "lifecycleState"?: string;
    /**
     * The start of date-time range of expiration for the long term backups to be fetched.
     */
    "timeExpiryScheduledGreaterThanOrEqualTo"?: Date;
    /**
     * The end of date-time range of expiration for the long term backups to be fetched.
     */
    "timeExpiryScheduledLessThan"?: Date;
    /**
     * A filter to return only resources that match the given backup destination type.
     */
    "backupDestinationType"?: string;
}
export declare namespace ListBackupsRequest {
    enum ShapeFamily {
        Singlenode = "SINGLENODE",
        Yoda = "YODA",
        Virtualmachine = "VIRTUALMACHINE",
        Exadata = "EXADATA",
        Exacc = "EXACC",
        ExadbXs = "EXADB_XS"
    }
}
