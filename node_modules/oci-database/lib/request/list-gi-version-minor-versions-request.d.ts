/**
 *
 *
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/database/ListGiVersionMinorVersions.ts.html |here} to see how to use ListGiVersionMinorVersionsRequest.
 */
export interface ListGiVersionMinorVersionsRequest extends common.BaseRequest {
    /**
     * The Oracle Grid Infrastructure major version.
     */
    "version": string;
    /**
     * The target availability domain. Only passed if the limit is AD-specific.
     */
    "availabilityDomain"?: string;
    /**
     * The compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    "compartmentId"?: string;
    /**
     * Unique identifier for the request.
     *
     */
    "opcRequestId"?: string;
    /**
     * If provided, filters the results to the set of database versions which are supported for the given shape family.
     */
    "shapeFamily"?: ListGiVersionMinorVersionsRequest.ShapeFamily;
    /**
     * If true, returns the Grid Infrastructure versions that can be used for provisioning a cluster
     */
    "isGiVersionForProvisioning"?: boolean;
    /**
     * If provided, filters the results for the given shape.
     */
    "shape"?: string;
    /**
     * Sort by VERSION.  Default order for VERSION is descending.
     */
    "sortBy"?: ListGiVersionMinorVersionsRequest.SortBy;
    /**
     * The sort order to use, either ascending ({@code ASC}) or descending ({@code DESC}).
     */
    "sortOrder"?: ListGiVersionMinorVersionsRequest.SortOrder;
    /**
     * The maximum number of items to return per page.
     */
    "limit"?: number;
    /**
     * The pagination token to continue listing from.
     */
    "page"?: string;
}
export declare namespace ListGiVersionMinorVersionsRequest {
    enum ShapeFamily {
        Singlenode = "SINGLENODE",
        Yoda = "YODA",
        Virtualmachine = "VIRTUALMACHINE",
        Exadata = "EXADATA",
        Exacc = "EXACC",
        ExadbXs = "EXADB_XS"
    }
    enum SortBy {
        Version = "VERSION"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
}
