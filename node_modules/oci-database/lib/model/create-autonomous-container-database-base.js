"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAutonomousContainerDatabaseBase = void 0;
const model = __importStar(require("../model"));
const common = require("oci-common");
var CreateAutonomousContainerDatabaseBase;
(function (CreateAutonomousContainerDatabaseBase) {
    let ServiceLevelAgreementType;
    (function (ServiceLevelAgreementType) {
        ServiceLevelAgreementType["Standard"] = "STANDARD";
        ServiceLevelAgreementType["AutonomousDataguard"] = "AUTONOMOUS_DATAGUARD";
    })(ServiceLevelAgreementType = CreateAutonomousContainerDatabaseBase.ServiceLevelAgreementType || (CreateAutonomousContainerDatabaseBase.ServiceLevelAgreementType = {}));
    let ProtectionMode;
    (function (ProtectionMode) {
        ProtectionMode["MaximumAvailability"] = "MAXIMUM_AVAILABILITY";
        ProtectionMode["MaximumPerformance"] = "MAXIMUM_PERFORMANCE";
    })(ProtectionMode = CreateAutonomousContainerDatabaseBase.ProtectionMode || (CreateAutonomousContainerDatabaseBase.ProtectionMode = {}));
    let PatchModel;
    (function (PatchModel) {
        PatchModel["ReleaseUpdates"] = "RELEASE_UPDATES";
        PatchModel["ReleaseUpdateRevisions"] = "RELEASE_UPDATE_REVISIONS";
    })(PatchModel = CreateAutonomousContainerDatabaseBase.PatchModel || (CreateAutonomousContainerDatabaseBase.PatchModel = {}));
    let VersionPreference;
    (function (VersionPreference) {
        VersionPreference["NextReleaseUpdate"] = "NEXT_RELEASE_UPDATE";
        VersionPreference["LatestReleaseUpdate"] = "LATEST_RELEASE_UPDATE";
    })(VersionPreference = CreateAutonomousContainerDatabaseBase.VersionPreference || (CreateAutonomousContainerDatabaseBase.VersionPreference = {}));
    let DistributionAffinity;
    (function (DistributionAffinity) {
        DistributionAffinity["MinimumDistribution"] = "MINIMUM_DISTRIBUTION";
        DistributionAffinity["MaximumDistribution"] = "MAXIMUM_DISTRIBUTION";
    })(DistributionAffinity = CreateAutonomousContainerDatabaseBase.DistributionAffinity || (CreateAutonomousContainerDatabaseBase.DistributionAffinity = {}));
    let NetServicesArchitecture;
    (function (NetServicesArchitecture) {
        NetServicesArchitecture["Dedicated"] = "DEDICATED";
        NetServicesArchitecture["Shared"] = "SHARED";
    })(NetServicesArchitecture = CreateAutonomousContainerDatabaseBase.NetServicesArchitecture || (CreateAutonomousContainerDatabaseBase.NetServicesArchitecture = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getJsonObj(item);
                })
                : undefined,
            "peerAutonomousContainerDatabaseBackupConfig": obj.peerAutonomousContainerDatabaseBackupConfig
                ? model.PeerAutonomousContainerDatabaseBackupConfig.getJsonObj(obj.peerAutonomousContainerDatabaseBackupConfig)
                : undefined,
            "maintenanceWindowDetails": obj.maintenanceWindowDetails
                ? model.MaintenanceWindow.getJsonObj(obj.maintenanceWindowDetails)
                : undefined,
            "backupConfig": obj.backupConfig
                ? model.AutonomousContainerDatabaseBackupConfig.getJsonObj(obj.backupConfig)
                : undefined
        });
        if (obj && "source" in obj && obj.source) {
            switch (obj.source) {
                case "NONE":
                    return model.CreateAutonomousContainerDatabaseDetails.getJsonObj(jsonObj, true);
                case "BACKUP_FROM_ID":
                    return model.CreateAutonomousContainerDatabaseFromBackupDetails.getJsonObj(jsonObj, true);
                default:
                    if (common.LOG.logger)
                        common.LOG.logger.info(`Unknown value for: ${obj.source}`);
            }
        }
        return jsonObj;
    }
    CreateAutonomousContainerDatabaseBase.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getDeserializedJsonObj(item);
                })
                : undefined,
            "peerAutonomousContainerDatabaseBackupConfig": obj.peerAutonomousContainerDatabaseBackupConfig
                ? model.PeerAutonomousContainerDatabaseBackupConfig.getDeserializedJsonObj(obj.peerAutonomousContainerDatabaseBackupConfig)
                : undefined,
            "maintenanceWindowDetails": obj.maintenanceWindowDetails
                ? model.MaintenanceWindow.getDeserializedJsonObj(obj.maintenanceWindowDetails)
                : undefined,
            "backupConfig": obj.backupConfig
                ? model.AutonomousContainerDatabaseBackupConfig.getDeserializedJsonObj(obj.backupConfig)
                : undefined
        });
        if (obj && "source" in obj && obj.source) {
            switch (obj.source) {
                case "NONE":
                    return model.CreateAutonomousContainerDatabaseDetails.getDeserializedJsonObj(jsonObj, true);
                case "BACKUP_FROM_ID":
                    return model.CreateAutonomousContainerDatabaseFromBackupDetails.getDeserializedJsonObj(jsonObj, true);
                default:
                    if (common.LOG.logger)
                        common.LOG.logger.info(`Unknown value for: ${obj.source}`);
            }
        }
        return jsonObj;
    }
    CreateAutonomousContainerDatabaseBase.getDeserializedJsonObj = getDeserializedJsonObj;
})(CreateAutonomousContainerDatabaseBase = exports.CreateAutonomousContainerDatabaseBase || (exports.CreateAutonomousContainerDatabaseBase = {}));
//# sourceMappingURL=create-autonomous-container-database-base.js.map