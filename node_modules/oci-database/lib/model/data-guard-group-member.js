"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataGuardGroupMember = void 0;
var DataGuardGroupMember;
(function (DataGuardGroupMember) {
    let Role;
    (function (Role) {
        Role["Primary"] = "PRIMARY";
        Role["Standby"] = "STANDBY";
        Role["DisabledStandby"] = "DISABLED_STANDBY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Role["UnknownValue"] = "UNKNOWN_VALUE";
    })(Role = DataGuardGroupMember.Role || (DataGuardGroupMember.Role = {}));
    let TransportType;
    (function (TransportType) {
        TransportType["Sync"] = "SYNC";
        TransportType["Async"] = "ASYNC";
        TransportType["Fastsync"] = "FASTSYNC";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TransportType["UnknownValue"] = "UNKNOWN_VALUE";
    })(TransportType = DataGuardGroupMember.TransportType || (DataGuardGroupMember.TransportType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DataGuardGroupMember.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DataGuardGroupMember.getDeserializedJsonObj = getDeserializedJsonObj;
})(DataGuardGroupMember = exports.DataGuardGroupMember || (exports.DataGuardGroupMember = {}));
//# sourceMappingURL=data-guard-group-member.js.map