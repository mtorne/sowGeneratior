"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](https://docs.oracle.com/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutonomousDwDatabase = void 0;
const model = __importStar(require("../model"));
var AutonomousDwDatabase;
(function (AutonomousDwDatabase) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Stopping"] = "STOPPING";
        LifecycleState["Stopped"] = "STOPPED";
        LifecycleState["Starting"] = "STARTING";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        LifecycleState["Unavailable"] = "UNAVAILABLE";
        LifecycleState["RestoreInProgress"] = "RESTORE_IN_PROGRESS";
        LifecycleState["RestoreFailed"] = "RESTORE_FAILED";
        LifecycleState["BackupInProgress"] = "BACKUP_IN_PROGRESS";
        LifecycleState["ScaleInProgress"] = "SCALE_IN_PROGRESS";
        LifecycleState["AvailableNeedsAttention"] = "AVAILABLE_NEEDS_ATTENTION";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["MaintenanceInProgress"] = "MAINTENANCE_IN_PROGRESS";
        LifecycleState["Restarting"] = "RESTARTING";
        LifecycleState["Recreating"] = "RECREATING";
        LifecycleState["RoleChangeInProgress"] = "ROLE_CHANGE_IN_PROGRESS";
        LifecycleState["Upgrading"] = "UPGRADING";
        LifecycleState["Inaccessible"] = "INACCESSIBLE";
        LifecycleState["Standby"] = "STANDBY";
    })(LifecycleState = AutonomousDwDatabase.LifecycleState || (AutonomousDwDatabase.LifecycleState = {}));
    let ComputeModel;
    (function (ComputeModel) {
        ComputeModel["Ecpu"] = "ECPU";
        ComputeModel["Ocpu"] = "OCPU";
    })(ComputeModel = AutonomousDwDatabase.ComputeModel || (AutonomousDwDatabase.ComputeModel = {}));
    let InfrastructureType;
    (function (InfrastructureType) {
        InfrastructureType["Cloud"] = "CLOUD";
        InfrastructureType["CloudAtCustomer"] = "CLOUD_AT_CUSTOMER";
    })(InfrastructureType = AutonomousDwDatabase.InfrastructureType || (AutonomousDwDatabase.InfrastructureType = {}));
    let LicenseModel;
    (function (LicenseModel) {
        LicenseModel["LicenseIncluded"] = "LICENSE_INCLUDED";
        LicenseModel["BringYourOwnLicense"] = "BRING_YOUR_OWN_LICENSE";
    })(LicenseModel = AutonomousDwDatabase.LicenseModel || (AutonomousDwDatabase.LicenseModel = {}));
    let DbWorkload;
    (function (DbWorkload) {
        DbWorkload["Oltp"] = "OLTP";
        DbWorkload["Dw"] = "DW";
        DbWorkload["Ajd"] = "AJD";
        DbWorkload["Apex"] = "APEX";
    })(DbWorkload = AutonomousDwDatabase.DbWorkload || (AutonomousDwDatabase.DbWorkload = {}));
    let DataSafeStatus;
    (function (DataSafeStatus) {
        DataSafeStatus["Registering"] = "REGISTERING";
        DataSafeStatus["Registered"] = "REGISTERED";
        DataSafeStatus["Deregistering"] = "DEREGISTERING";
        DataSafeStatus["NotRegistered"] = "NOT_REGISTERED";
        DataSafeStatus["Failed"] = "FAILED";
    })(DataSafeStatus = AutonomousDwDatabase.DataSafeStatus || (AutonomousDwDatabase.DataSafeStatus = {}));
    let OperationsInsightsStatus;
    (function (OperationsInsightsStatus) {
        OperationsInsightsStatus["Enabling"] = "ENABLING";
        OperationsInsightsStatus["Enabled"] = "ENABLED";
        OperationsInsightsStatus["Disabling"] = "DISABLING";
        OperationsInsightsStatus["NotEnabled"] = "NOT_ENABLED";
        OperationsInsightsStatus["FailedEnabling"] = "FAILED_ENABLING";
        OperationsInsightsStatus["FailedDisabling"] = "FAILED_DISABLING";
    })(OperationsInsightsStatus = AutonomousDwDatabase.OperationsInsightsStatus || (AutonomousDwDatabase.OperationsInsightsStatus = {}));
    let DatabaseManagementStatus;
    (function (DatabaseManagementStatus) {
        DatabaseManagementStatus["Enabling"] = "ENABLING";
        DatabaseManagementStatus["Enabled"] = "ENABLED";
        DatabaseManagementStatus["Disabling"] = "DISABLING";
        DatabaseManagementStatus["NotEnabled"] = "NOT_ENABLED";
        DatabaseManagementStatus["FailedEnabling"] = "FAILED_ENABLING";
        DatabaseManagementStatus["FailedDisabling"] = "FAILED_DISABLING";
    })(DatabaseManagementStatus = AutonomousDwDatabase.DatabaseManagementStatus || (AutonomousDwDatabase.DatabaseManagementStatus = {}));
    let OpenMode;
    (function (OpenMode) {
        OpenMode["ReadOnly"] = "READ_ONLY";
        OpenMode["ReadWrite"] = "READ_WRITE";
    })(OpenMode = AutonomousDwDatabase.OpenMode || (AutonomousDwDatabase.OpenMode = {}));
    let RefreshableStatus;
    (function (RefreshableStatus) {
        RefreshableStatus["Refreshing"] = "REFRESHING";
        RefreshableStatus["NotRefreshing"] = "NOT_REFRESHING";
    })(RefreshableStatus = AutonomousDwDatabase.RefreshableStatus || (AutonomousDwDatabase.RefreshableStatus = {}));
    let RefreshableMode;
    (function (RefreshableMode) {
        RefreshableMode["Automatic"] = "AUTOMATIC";
        RefreshableMode["Manual"] = "MANUAL";
    })(RefreshableMode = AutonomousDwDatabase.RefreshableMode || (AutonomousDwDatabase.RefreshableMode = {}));
    let PermissionLevel;
    (function (PermissionLevel) {
        PermissionLevel["Restricted"] = "RESTRICTED";
        PermissionLevel["Unrestricted"] = "UNRESTRICTED";
    })(PermissionLevel = AutonomousDwDatabase.PermissionLevel || (AutonomousDwDatabase.PermissionLevel = {}));
    let Role;
    (function (Role) {
        Role["Primary"] = "PRIMARY";
        Role["Standby"] = "STANDBY";
        Role["DisabledStandby"] = "DISABLED_STANDBY";
        Role["BackupCopy"] = "BACKUP_COPY";
        Role["SnapshotStandby"] = "SNAPSHOT_STANDBY";
    })(Role = AutonomousDwDatabase.Role || (AutonomousDwDatabase.Role = {}));
    let DataguardRegionType;
    (function (DataguardRegionType) {
        DataguardRegionType["PrimaryDgRegion"] = "PRIMARY_DG_REGION";
        DataguardRegionType["RemoteStandbyDgRegion"] = "REMOTE_STANDBY_DG_REGION";
    })(DataguardRegionType = AutonomousDwDatabase.DataguardRegionType || (AutonomousDwDatabase.DataguardRegionType = {}));
    let AutonomousMaintenanceScheduleType;
    (function (AutonomousMaintenanceScheduleType) {
        AutonomousMaintenanceScheduleType["Early"] = "EARLY";
        AutonomousMaintenanceScheduleType["Regular"] = "REGULAR";
    })(AutonomousMaintenanceScheduleType = AutonomousDwDatabase.AutonomousMaintenanceScheduleType || (AutonomousDwDatabase.AutonomousMaintenanceScheduleType = {}));
    let DatabaseEdition;
    (function (DatabaseEdition) {
        DatabaseEdition["StandardEdition"] = "STANDARD_EDITION";
        DatabaseEdition["EnterpriseEdition"] = "ENTERPRISE_EDITION";
    })(DatabaseEdition = AutonomousDwDatabase.DatabaseEdition || (AutonomousDwDatabase.DatabaseEdition = {}));
    let DisasterRecoveryRegionType;
    (function (DisasterRecoveryRegionType) {
        DisasterRecoveryRegionType["Primary"] = "PRIMARY";
        DisasterRecoveryRegionType["Remote"] = "REMOTE";
    })(DisasterRecoveryRegionType = AutonomousDwDatabase.DisasterRecoveryRegionType || (AutonomousDwDatabase.DisasterRecoveryRegionType = {}));
    let NetServicesArchitecture;
    (function (NetServicesArchitecture) {
        NetServicesArchitecture["Dedicated"] = "DEDICATED";
        NetServicesArchitecture["Shared"] = "SHARED";
    })(NetServicesArchitecture = AutonomousDwDatabase.NetServicesArchitecture || (AutonomousDwDatabase.NetServicesArchitecture = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "encryptionKey": obj.encryptionKey
                ? model.AutonomousDatabaseEncryptionKeyDetails.getJsonObj(obj.encryptionKey)
                : undefined,
            "longTermBackupSchedule": obj.longTermBackupSchedule
                ? model.LongTermBackUpScheduleDetails.getJsonObj(obj.longTermBackupSchedule)
                : undefined,
            "backupConfig": obj.backupConfig
                ? model.AutonomousDatabaseBackupConfig.getJsonObj(obj.backupConfig)
                : undefined,
            "keyHistoryEntry": obj.keyHistoryEntry
                ? obj.keyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseKeyHistoryEntry.getJsonObj(item);
                })
                : undefined,
            "encryptionKeyHistoryEntry": obj.encryptionKeyHistoryEntry
                ? obj.encryptionKeyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseEncryptionKeyHistoryEntry.getJsonObj(item);
                })
                : undefined,
            "connectionStrings": obj.connectionStrings
                ? model.AutonomousDatabaseConnectionStrings.getJsonObj(obj.connectionStrings)
                : undefined,
            "connectionUrls": obj.connectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getJsonObj(obj.connectionUrls)
                : undefined,
            "publicConnectionUrls": obj.publicConnectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getJsonObj(obj.publicConnectionUrls)
                : undefined,
            "apexDetails": obj.apexDetails
                ? model.AutonomousDatabaseApex.getJsonObj(obj.apexDetails)
                : undefined,
            "standbyDb": obj.standbyDb
                ? model.AutonomousDatabaseStandbySummary.getJsonObj(obj.standbyDb)
                : undefined,
            "localStandbyDb": obj.localStandbyDb
                ? model.AutonomousDatabaseStandbySummary.getJsonObj(obj.localStandbyDb)
                : undefined,
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getJsonObj(item);
                })
                : undefined,
            "resourcePoolSummary": obj.resourcePoolSummary
                ? model.ResourcePoolSummary.getJsonObj(obj.resourcePoolSummary)
                : undefined,
            "scheduledOperations": obj.scheduledOperations
                ? obj.scheduledOperations.map(item => {
                    return model.ScheduledOperationDetails.getJsonObj(item);
                })
                : undefined,
            "dbToolsDetails": obj.dbToolsDetails
                ? obj.dbToolsDetails.map(item => {
                    return model.DatabaseTool.getJsonObj(item);
                })
                : undefined,
            "remoteDisasterRecoveryConfiguration": obj.remoteDisasterRecoveryConfiguration
                ? model.DisasterRecoveryConfiguration.getJsonObj(obj.remoteDisasterRecoveryConfiguration)
                : undefined
        });
        return jsonObj;
    }
    AutonomousDwDatabase.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "encryptionKey": obj.encryptionKey
                ? model.AutonomousDatabaseEncryptionKeyDetails.getDeserializedJsonObj(obj.encryptionKey)
                : undefined,
            "longTermBackupSchedule": obj.longTermBackupSchedule
                ? model.LongTermBackUpScheduleDetails.getDeserializedJsonObj(obj.longTermBackupSchedule)
                : undefined,
            "backupConfig": obj.backupConfig
                ? model.AutonomousDatabaseBackupConfig.getDeserializedJsonObj(obj.backupConfig)
                : undefined,
            "keyHistoryEntry": obj.keyHistoryEntry
                ? obj.keyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseKeyHistoryEntry.getDeserializedJsonObj(item);
                })
                : undefined,
            "encryptionKeyHistoryEntry": obj.encryptionKeyHistoryEntry
                ? obj.encryptionKeyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseEncryptionKeyHistoryEntry.getDeserializedJsonObj(item);
                })
                : undefined,
            "connectionStrings": obj.connectionStrings
                ? model.AutonomousDatabaseConnectionStrings.getDeserializedJsonObj(obj.connectionStrings)
                : undefined,
            "connectionUrls": obj.connectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getDeserializedJsonObj(obj.connectionUrls)
                : undefined,
            "publicConnectionUrls": obj.publicConnectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getDeserializedJsonObj(obj.publicConnectionUrls)
                : undefined,
            "apexDetails": obj.apexDetails
                ? model.AutonomousDatabaseApex.getDeserializedJsonObj(obj.apexDetails)
                : undefined,
            "standbyDb": obj.standbyDb
                ? model.AutonomousDatabaseStandbySummary.getDeserializedJsonObj(obj.standbyDb)
                : undefined,
            "localStandbyDb": obj.localStandbyDb
                ? model.AutonomousDatabaseStandbySummary.getDeserializedJsonObj(obj.localStandbyDb)
                : undefined,
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getDeserializedJsonObj(item);
                })
                : undefined,
            "resourcePoolSummary": obj.resourcePoolSummary
                ? model.ResourcePoolSummary.getDeserializedJsonObj(obj.resourcePoolSummary)
                : undefined,
            "scheduledOperations": obj.scheduledOperations
                ? obj.scheduledOperations.map(item => {
                    return model.ScheduledOperationDetails.getDeserializedJsonObj(item);
                })
                : undefined,
            "dbToolsDetails": obj.dbToolsDetails
                ? obj.dbToolsDetails.map(item => {
                    return model.DatabaseTool.getDeserializedJsonObj(item);
                })
                : undefined,
            "remoteDisasterRecoveryConfiguration": obj.remoteDisasterRecoveryConfiguration
                ? model.DisasterRecoveryConfiguration.getDeserializedJsonObj(obj.remoteDisasterRecoveryConfiguration)
                : undefined
        });
        return jsonObj;
    }
    AutonomousDwDatabase.getDeserializedJsonObj = getDeserializedJsonObj;
})(AutonomousDwDatabase = exports.AutonomousDwDatabase || (exports.AutonomousDwDatabase = {}));
//# sourceMappingURL=autonomous-dw-database.js.map