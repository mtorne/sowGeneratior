/**
 * Security Attribute API
 * Use the Security Attributes API to manage security attributes and security attribute namespaces. For more information, see the documentation for [Security Attributes](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attributes.htm) and [Security Attribute Namespaces](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
 * OpenAPI spec version: 20240815
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A security attribute that belongs to a specific security attribute namespace. Security attributes must be created in a tenancy before
 * a user can apply them to resources.
 * For more information, see [Managing Security Attributes](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attributes.htm).
 * <p>
 **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
 * using the API.
 *
 */
export interface SecurityAttribute {
    /**
     * The OCID of the compartment that contains the security attribute definition.
     */
    "compartmentId": string;
    /**
     * The OCID of the security attribute namespace that contains the security attribute definition.
     */
    "securityAttributeNamespaceId": string;
    /**
     * The name of the security attribute namespace that contains the security attribute.
     *
     */
    "securityAttributeNamespaceName": string;
    /**
     * The OCID of the security attribute definition.
     */
    "id": string;
    /**
     * The name assigned to the security attribute during creation. This is the security attribute key.
     * The name must be unique within the security attribute namespace and cannot be changed.
     *
     */
    "name": string;
    /**
     * The description of the security attribute.
     */
    "description": string;
    /**
     * The data type of the security attribute.
     */
    "type"?: string;
    /**
     * Indicates whether the security attribute is retired.
     * See [Managing Security Attribute Namespaces](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
     *
     */
    "isRetired": boolean;
    /**
     * The security attribute's current state. After creating a security attribute, make sure its {@code lifecycleState} is ACTIVE before using it. After retiring a security attribute, make sure its {@code lifecycleState} is INACTIVE before using it. If you delete a security attribute, you cannot delete another security attribute until the deleted tag's {@code lifecycleState} changes from DELETING to DELETED.
     */
    "lifecycleState"?: SecurityAttribute.LifecycleState;
    /**
      * Date and time the security attribute was created, in the format defined by RFC3339.
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    "validator"?: model.EnumSecurityAttributeValidator | model.DefaultSecurityAttributeValidator;
}
export declare namespace SecurityAttribute {
    enum LifecycleState {
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SecurityAttribute): object;
    function getDeserializedJsonObj(obj: SecurityAttribute): object;
}
