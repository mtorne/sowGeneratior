"use strict";
/**
 * Security Attribute API
 * Use the Security Attributes API to manage security attributes and security attribute namespaces. For more information, see the documentation for [Security Attributes](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attributes.htm) and [Security Attribute Namespaces](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
 * OpenAPI spec version: 20240815
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestOperationType = void 0;
/**
 * An enum-like description of the type of work the work request is doing.
 **/
var WorkRequestOperationType;
(function (WorkRequestOperationType) {
    WorkRequestOperationType["DeleteSecurityAttributeDefinition"] = "DELETE_SECURITY_ATTRIBUTE_DEFINITION";
    WorkRequestOperationType["DeleteNonEmptySecurityAttributeNamespace"] = "DELETE_NON_EMPTY_SECURITY_ATTRIBUTE_NAMESPACE";
    WorkRequestOperationType["BulkDeleteSecurityAttributes"] = "BULK_DELETE_SECURITY_ATTRIBUTES";
    WorkRequestOperationType["BulkEditOfSecurityAttributes"] = "BULK_EDIT_OF_SECURITY_ATTRIBUTES";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    WorkRequestOperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
(function (WorkRequestOperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
//# sourceMappingURL=work-request-operation-type.js.map