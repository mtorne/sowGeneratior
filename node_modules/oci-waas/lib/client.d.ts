/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { RedirectWaiter } from "./redirect-waiter";
import { WaasWaiter } from "./waas-waiter";
declare const Breaker: any;
export declare enum RedirectApiKeys {
    ApiKey = 0
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class RedirectClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": RedirectWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new RedirectWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): RedirectWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): RedirectWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves HTTP Redirect into a different compartment. When provided, If-Match is checked against ETag values of the WAAS policy.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeHttpRedirectCompartmentRequest
     * @return ChangeHttpRedirectCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ChangeHttpRedirectCompartment.ts.html |here} to see how to use ChangeHttpRedirectCompartment API.
     */
    changeHttpRedirectCompartment(changeHttpRedirectCompartmentRequest: requests.ChangeHttpRedirectCompartmentRequest): Promise<responses.ChangeHttpRedirectCompartmentResponse>;
    /**
     * Creates a new HTTP Redirect on the WAF edge.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateHttpRedirectRequest
     * @return CreateHttpRedirectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CreateHttpRedirect.ts.html |here} to see how to use CreateHttpRedirect API.
     */
    createHttpRedirect(createHttpRedirectRequest: requests.CreateHttpRedirectRequest): Promise<responses.CreateHttpRedirectResponse>;
    /**
     * Deletes a redirect.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteHttpRedirectRequest
     * @return DeleteHttpRedirectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/DeleteHttpRedirect.ts.html |here} to see how to use DeleteHttpRedirect API.
     */
    deleteHttpRedirect(deleteHttpRedirectRequest: requests.DeleteHttpRedirectRequest): Promise<responses.DeleteHttpRedirectResponse>;
    /**
     * Gets the details of a HTTP Redirect.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetHttpRedirectRequest
     * @return GetHttpRedirectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetHttpRedirect.ts.html |here} to see how to use GetHttpRedirect API.
     */
    getHttpRedirect(getHttpRedirectRequest: requests.GetHttpRedirectRequest): Promise<responses.GetHttpRedirectResponse>;
    /**
     * Gets a list of HTTP Redirects.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListHttpRedirectsRequest
     * @return ListHttpRedirectsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListHttpRedirects.ts.html |here} to see how to use ListHttpRedirects API.
     */
    listHttpRedirects(listHttpRedirectsRequest: requests.ListHttpRedirectsRequest): Promise<responses.ListHttpRedirectsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listHttpRedirectsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.HttpRedirectSummary objects
     * contained in responses from the listHttpRedirects operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllHttpRedirects(request: requests.ListHttpRedirectsRequest): AsyncIterableIterator<model.HttpRedirectSummary>;
    /**
     * NOTE: This function is deprecated in favor of listHttpRedirectsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listHttpRedirects operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllHttpRedirectsResponses(request: requests.ListHttpRedirectsRequest): AsyncIterableIterator<responses.ListHttpRedirectsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.HttpRedirectSummary objects
     * contained in responses from the listHttpRedirects operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listHttpRedirectsRecordIterator(request: requests.ListHttpRedirectsRequest): AsyncIterableIterator<model.HttpRedirectSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listHttpRedirects operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listHttpRedirectsResponseIterator(request: requests.ListHttpRedirectsRequest): AsyncIterableIterator<responses.ListHttpRedirectsResponse>;
    /**
     * Updates the details of a HTTP Redirect, including target and tags. Only the fields specified in the request body will be updated; all other properties will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateHttpRedirectRequest
     * @return UpdateHttpRedirectResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateHttpRedirect.ts.html |here} to see how to use UpdateHttpRedirect API.
     */
    updateHttpRedirect(updateHttpRedirectRequest: requests.UpdateHttpRedirectRequest): Promise<responses.UpdateHttpRedirectResponse>;
}
export declare enum WaasApiKeys {
    ApiKey = 0
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class WaasClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": WaasWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new WaasWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): WaasWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): WaasWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
       * Accepts a list of recommended Web Application Firewall protection rules. Web Application Firewall protection rule recommendations are sets of rules generated by observed traffic patterns through the Web Application Firewall and are meant to optimize the Web Application Firewall's security profile. Only the rules specified in the request body will be updated; all other rules will remain unchanged.
  * <p>
  Use the `GET /waasPolicies/{waasPolicyId}/wafConfig/recommendations` method to view a list of recommended Web Application Firewall protection rules. For more information, see [WAF Protection Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/wafprotectionrules.htm).
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param AcceptRecommendationsRequest
       * @return AcceptRecommendationsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/AcceptRecommendations.ts.html |here} to see how to use AcceptRecommendations API.
       */
    acceptRecommendations(acceptRecommendationsRequest: requests.AcceptRecommendationsRequest): Promise<responses.AcceptRecommendationsResponse>;
    /**
     * Cancels a specified work request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Moves address list into a different compartment. When provided, If-Match
     * is checked against ETag values of the address list. For information about moving
     * resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeAddressListCompartmentRequest
     * @return ChangeAddressListCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ChangeAddressListCompartment.ts.html |here} to see how to use ChangeAddressListCompartment API.
     */
    changeAddressListCompartment(changeAddressListCompartmentRequest: requests.ChangeAddressListCompartmentRequest): Promise<responses.ChangeAddressListCompartmentResponse>;
    /**
     * Moves certificate into a different compartment. When provided, If-Match is checked against ETag values of the certificate.
     * For information about moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeCertificateCompartmentRequest
     * @return ChangeCertificateCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ChangeCertificateCompartment.ts.html |here} to see how to use ChangeCertificateCompartment API.
     */
    changeCertificateCompartment(changeCertificateCompartmentRequest: requests.ChangeCertificateCompartmentRequest): Promise<responses.ChangeCertificateCompartmentResponse>;
    /**
     * Moves a custom protection rule into a different compartment within the same tenancy. When provided, If-Match is checked against ETag values of the custom protection rule. For information about moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeCustomProtectionRuleCompartmentRequest
     * @return ChangeCustomProtectionRuleCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ChangeCustomProtectionRuleCompartment.ts.html |here} to see how to use ChangeCustomProtectionRuleCompartment API.
     */
    changeCustomProtectionRuleCompartment(changeCustomProtectionRuleCompartmentRequest: requests.ChangeCustomProtectionRuleCompartmentRequest): Promise<responses.ChangeCustomProtectionRuleCompartmentResponse>;
    /**
     * Moves WAAS policy into a different compartment. When provided, If-Match is checked against ETag values of the WAAS policy.
     * For information about moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeWaasPolicyCompartmentRequest
     * @return ChangeWaasPolicyCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ChangeWaasPolicyCompartment.ts.html |here} to see how to use ChangeWaasPolicyCompartment API.
     */
    changeWaasPolicyCompartment(changeWaasPolicyCompartmentRequest: requests.ChangeWaasPolicyCompartmentRequest): Promise<responses.ChangeWaasPolicyCompartmentResponse>;
    /**
     * Creates an address list in a set compartment and allows it to be used in a WAAS policy and referenced by access rules. Addresses can be IP addresses and CIDR notations.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateAddressListRequest
     * @return CreateAddressListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CreateAddressList.ts.html |here} to see how to use CreateAddressList API.
     */
    createAddressList(createAddressListRequest: requests.CreateAddressListRequest): Promise<responses.CreateAddressListResponse>;
    /**
       * Allows an SSL certificate to be added to a WAAS policy. The Web Application Firewall terminates SSL connections to inspect requests in runtime, and then re-encrypts requests before sending them to the origin for fulfillment.
  * <p>
  For more information, see [WAF Settings](https://docs.oracle.com/iaas/Content/WAF/Tasks/wafsettings.htm).
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param CreateCertificateRequest
       * @return CreateCertificateResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CreateCertificate.ts.html |here} to see how to use CreateCertificate API.
       */
    createCertificate(createCertificateRequest: requests.CreateCertificateRequest): Promise<responses.CreateCertificateResponse>;
    /**
       * Creates a new custom protection rule in the specified compartment.
  * <p>
  Custom protection rules allow you to create rules in addition to the rulesets provided by the Web Application Firewall service, including rules from [ModSecurity](https://modsecurity.org/). The syntax for custom rules is based on the ModSecurity syntax. For more information about custom protection rules, see [Custom Protection Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/customprotectionrules.htm).
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param CreateCustomProtectionRuleRequest
       * @return CreateCustomProtectionRuleResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CreateCustomProtectionRule.ts.html |here} to see how to use CreateCustomProtectionRule API.
       */
    createCustomProtectionRule(createCustomProtectionRuleRequest: requests.CreateCustomProtectionRuleRequest): Promise<responses.CreateCustomProtectionRuleResponse>;
    /**
       * Creates a new Web Application Acceleration and Security (WAAS) policy in the specified compartment. A WAAS policy must be established before creating Web Application Firewall (WAF) rules. To use WAF rules, your web application's origin servers must defined in the `WaasPolicy` schema.
  * <p>
  A domain name must be specified when creating a WAAS policy. The domain name should be different from the origins specified in your `WaasPolicy`. Once domain name is entered and stored, it is unchangeable.
  * <p>
  Use the record data returned in the `cname` field of the `WaasPolicy` object to create a CNAME record in your DNS configuration that will direct your domain's traffic through the WAF.
  * <p>
  For the purposes of access control, you must provide the OCID of the compartment where you want the service to reside. For information about access control and compartments, see [Overview of the IAM Service](https://docs.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
  * <p>
  You must specify a display name and domain for the WAAS policy. The display name does not have to be unique and can be changed. The domain name should be different from every origin specified in `WaasPolicy`.
  * <p>
  All Oracle Cloud Infrastructure resources, including WAAS policies, receive a unique, Oracle-assigned ID called an Oracle Cloud Identifier (OCID). When a resource is created, you can find its OCID in the response. You can also retrieve a resource's OCID by using a list API operation for that resource type, or by viewing the resource in the Console. Fore more information, see [Resource Identifiers](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
  * <p>
  **Note:** After sending the POST request, the new object's state will temporarily be `CREATING`. Ensure that the resource's state has changed to `ACTIVE` before use.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param CreateWaasPolicyRequest
       * @return CreateWaasPolicyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/CreateWaasPolicy.ts.html |here} to see how to use CreateWaasPolicy API.
       */
    createWaasPolicy(createWaasPolicyRequest: requests.CreateWaasPolicyRequest): Promise<responses.CreateWaasPolicyResponse>;
    /**
     * Deletes the address list from the compartment if it is not used.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteAddressListRequest
     * @return DeleteAddressListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/DeleteAddressList.ts.html |here} to see how to use DeleteAddressList API.
     */
    deleteAddressList(deleteAddressListRequest: requests.DeleteAddressListRequest): Promise<responses.DeleteAddressListResponse>;
    /**
     * Deletes an SSL certificate from the WAAS service.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCertificateRequest
     * @return DeleteCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/DeleteCertificate.ts.html |here} to see how to use DeleteCertificate API.
     */
    deleteCertificate(deleteCertificateRequest: requests.DeleteCertificateRequest): Promise<responses.DeleteCertificateResponse>;
    /**
     * Deletes a Custom Protection rule.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCustomProtectionRuleRequest
     * @return DeleteCustomProtectionRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/DeleteCustomProtectionRule.ts.html |here} to see how to use DeleteCustomProtectionRule API.
     */
    deleteCustomProtectionRule(deleteCustomProtectionRuleRequest: requests.DeleteCustomProtectionRuleRequest): Promise<responses.DeleteCustomProtectionRuleResponse>;
    /**
     * Deletes a policy.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteWaasPolicyRequest
     * @return DeleteWaasPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/DeleteWaasPolicy.ts.html |here} to see how to use DeleteWaasPolicy API.
     */
    deleteWaasPolicy(deleteWaasPolicyRequest: requests.DeleteWaasPolicyRequest): Promise<responses.DeleteWaasPolicyResponse>;
    /**
     * Gets the details of an address list.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAddressListRequest
     * @return GetAddressListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetAddressList.ts.html |here} to see how to use GetAddressList API.
     */
    getAddressList(getAddressListRequest: requests.GetAddressListRequest): Promise<responses.GetAddressListResponse>;
    /**
     * Gets the details of an SSL certificate.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCertificateRequest
     * @return GetCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetCertificate.ts.html |here} to see how to use GetCertificate API.
     */
    getCertificate(getCertificateRequest: requests.GetCertificateRequest): Promise<responses.GetCertificateResponse>;
    /**
     * Gets the details of a custom protection rule.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCustomProtectionRuleRequest
     * @return GetCustomProtectionRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetCustomProtectionRule.ts.html |here} to see how to use GetCustomProtectionRule API.
     */
    getCustomProtectionRule(getCustomProtectionRuleRequest: requests.GetCustomProtectionRuleRequest): Promise<responses.GetCustomProtectionRuleResponse>;
    /**
     * Gets the device fingerprint challenge settings in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDeviceFingerprintChallengeRequest
     * @return GetDeviceFingerprintChallengeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetDeviceFingerprintChallenge.ts.html |here} to see how to use GetDeviceFingerprintChallenge API.
     */
    getDeviceFingerprintChallenge(getDeviceFingerprintChallengeRequest: requests.GetDeviceFingerprintChallengeRequest): Promise<responses.GetDeviceFingerprintChallengeResponse>;
    /**
     * Gets the human interaction challenge settings in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetHumanInteractionChallengeRequest
     * @return GetHumanInteractionChallengeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetHumanInteractionChallenge.ts.html |here} to see how to use GetHumanInteractionChallenge API.
     */
    getHumanInteractionChallenge(getHumanInteractionChallengeRequest: requests.GetHumanInteractionChallengeRequest): Promise<responses.GetHumanInteractionChallengeResponse>;
    /**
     * Gets the JavaScript challenge settings in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJsChallengeRequest
     * @return GetJsChallengeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetJsChallenge.ts.html |here} to see how to use GetJsChallenge API.
     */
    getJsChallenge(getJsChallengeRequest: requests.GetJsChallengeRequest): Promise<responses.GetJsChallengeResponse>;
    /**
     * Gets the configuration of a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPolicyConfigRequest
     * @return GetPolicyConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetPolicyConfig.ts.html |here} to see how to use GetPolicyConfig API.
     */
    getPolicyConfig(getPolicyConfigRequest: requests.GetPolicyConfigRequest): Promise<responses.GetPolicyConfigResponse>;
    /**
     * Gets the details of a protection rule in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProtectionRuleRequest
     * @return GetProtectionRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetProtectionRule.ts.html |here} to see how to use GetProtectionRule API.
     */
    getProtectionRule(getProtectionRuleRequest: requests.GetProtectionRuleRequest): Promise<responses.GetProtectionRuleResponse>;
    /**
     * Gets the protection settings in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProtectionSettingsRequest
     * @return GetProtectionSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetProtectionSettings.ts.html |here} to see how to use GetProtectionSettings API.
     */
    getProtectionSettings(getProtectionSettingsRequest: requests.GetProtectionSettingsRequest): Promise<responses.GetProtectionSettingsResponse>;
    /**
     * Gets the details of a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWaasPolicyRequest
     * @return GetWaasPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetWaasPolicy.ts.html |here} to see how to use GetWaasPolicy API.
     */
    getWaasPolicy(getWaasPolicyRequest: requests.GetWaasPolicyRequest): Promise<responses.GetWaasPolicyResponse>;
    /**
     * Gets the address rate limiting settings of the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWafAddressRateLimitingRequest
     * @return GetWafAddressRateLimitingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetWafAddressRateLimiting.ts.html |here} to see how to use GetWafAddressRateLimiting API.
     */
    getWafAddressRateLimiting(getWafAddressRateLimitingRequest: requests.GetWafAddressRateLimitingRequest): Promise<responses.GetWafAddressRateLimitingResponse>;
    /**
     * Gets the Web Application Firewall configuration details for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWafConfigRequest
     * @return GetWafConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetWafConfig.ts.html |here} to see how to use GetWafConfig API.
     */
    getWafConfig(getWafConfigRequest: requests.GetWafConfigRequest): Promise<responses.GetWafConfigResponse>;
    /**
     * Gets the details of a specified work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Gets the currently configured access rules for the Web Application Firewall configuration of a specified WAAS policy.
     * The order of the access rules is important. The rules will be checked in the order they are specified and the first matching rule will be used.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAccessRulesRequest
     * @return ListAccessRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListAccessRules.ts.html |here} to see how to use ListAccessRules API.
     */
    listAccessRules(listAccessRulesRequest: requests.ListAccessRulesRequest): Promise<responses.ListAccessRulesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAccessRulesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AccessRule objects
     * contained in responses from the listAccessRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAccessRules(request: requests.ListAccessRulesRequest): AsyncIterableIterator<model.AccessRule>;
    /**
     * NOTE: This function is deprecated in favor of listAccessRulesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAccessRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAccessRulesResponses(request: requests.ListAccessRulesRequest): AsyncIterableIterator<responses.ListAccessRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AccessRule objects
     * contained in responses from the listAccessRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAccessRulesRecordIterator(request: requests.ListAccessRulesRequest): AsyncIterableIterator<model.AccessRule>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAccessRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAccessRulesResponseIterator(request: requests.ListAccessRulesRequest): AsyncIterableIterator<responses.ListAccessRulesResponse>;
    /**
     * Gets a list of address lists that can be used in a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAddressListsRequest
     * @return ListAddressListsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListAddressLists.ts.html |here} to see how to use ListAddressLists API.
     */
    listAddressLists(listAddressListsRequest: requests.ListAddressListsRequest): Promise<responses.ListAddressListsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAddressListsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AddressListSummary objects
     * contained in responses from the listAddressLists operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddressLists(request: requests.ListAddressListsRequest): AsyncIterableIterator<model.AddressListSummary>;
    /**
     * NOTE: This function is deprecated in favor of listAddressListsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAddressLists operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddressListsResponses(request: requests.ListAddressListsRequest): AsyncIterableIterator<responses.ListAddressListsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AddressListSummary objects
     * contained in responses from the listAddressLists operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddressListsRecordIterator(request: requests.ListAddressListsRequest): AsyncIterableIterator<model.AddressListSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAddressLists operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddressListsResponseIterator(request: requests.ListAddressListsRequest): AsyncIterableIterator<responses.ListAddressListsResponse>;
    /**
     * Gets the currently configured caching rules for the Web Application Firewall configuration of a specified WAAS policy.
     * The rules are processed in the order they are specified in and the first matching rule will be used when processing a request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCachingRulesRequest
     * @return ListCachingRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListCachingRules.ts.html |here} to see how to use ListCachingRules API.
     */
    listCachingRules(listCachingRulesRequest: requests.ListCachingRulesRequest): Promise<responses.ListCachingRulesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listCachingRulesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.CachingRuleSummary objects
     * contained in responses from the listCachingRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCachingRules(request: requests.ListCachingRulesRequest): AsyncIterableIterator<model.CachingRuleSummary>;
    /**
     * NOTE: This function is deprecated in favor of listCachingRulesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listCachingRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCachingRulesResponses(request: requests.ListCachingRulesRequest): AsyncIterableIterator<responses.ListCachingRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.CachingRuleSummary objects
     * contained in responses from the listCachingRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCachingRulesRecordIterator(request: requests.ListCachingRulesRequest): AsyncIterableIterator<model.CachingRuleSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listCachingRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCachingRulesResponseIterator(request: requests.ListCachingRulesRequest): AsyncIterableIterator<responses.ListCachingRulesResponse>;
    /**
       * Gets the list of currently configured CAPTCHA challenges in the Web
  * Application Firewall configuration of a WAAS policy.
  * <p>
  The order of the CAPTCHA challenges is important. The URL for each
  * CAPTCHA will be checked in the order they are created.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListCaptchasRequest
       * @return ListCaptchasResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListCaptchas.ts.html |here} to see how to use ListCaptchas API.
       */
    listCaptchas(listCaptchasRequest: requests.ListCaptchasRequest): Promise<responses.ListCaptchasResponse>;
    /**
     * NOTE: This function is deprecated in favor of listCaptchasRecordIterator function.
     * Creates a new async iterator which will iterate over the models.Captcha objects
     * contained in responses from the listCaptchas operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCaptchas(request: requests.ListCaptchasRequest): AsyncIterableIterator<model.Captcha>;
    /**
     * NOTE: This function is deprecated in favor of listCaptchasResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listCaptchas operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCaptchasResponses(request: requests.ListCaptchasRequest): AsyncIterableIterator<responses.ListCaptchasResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Captcha objects
     * contained in responses from the listCaptchas operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCaptchasRecordIterator(request: requests.ListCaptchasRequest): AsyncIterableIterator<model.Captcha>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listCaptchas operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCaptchasResponseIterator(request: requests.ListCaptchasRequest): AsyncIterableIterator<responses.ListCaptchasResponse>;
    /**
     * Gets a list of SSL certificates that can be used in a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCertificatesRequest
     * @return ListCertificatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListCertificates.ts.html |here} to see how to use ListCertificates API.
     */
    listCertificates(listCertificatesRequest: requests.ListCertificatesRequest): Promise<responses.ListCertificatesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listCertificatesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.CertificateSummary objects
     * contained in responses from the listCertificates operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCertificates(request: requests.ListCertificatesRequest): AsyncIterableIterator<model.CertificateSummary>;
    /**
     * NOTE: This function is deprecated in favor of listCertificatesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listCertificates operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCertificatesResponses(request: requests.ListCertificatesRequest): AsyncIterableIterator<responses.ListCertificatesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.CertificateSummary objects
     * contained in responses from the listCertificates operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCertificatesRecordIterator(request: requests.ListCertificatesRequest): AsyncIterableIterator<model.CertificateSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listCertificates operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCertificatesResponseIterator(request: requests.ListCertificatesRequest): AsyncIterableIterator<responses.ListCertificatesResponse>;
    /**
     * Gets a list of custom protection rules for the specified Web Application Firewall.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCustomProtectionRulesRequest
     * @return ListCustomProtectionRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListCustomProtectionRules.ts.html |here} to see how to use ListCustomProtectionRules API.
     */
    listCustomProtectionRules(listCustomProtectionRulesRequest: requests.ListCustomProtectionRulesRequest): Promise<responses.ListCustomProtectionRulesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listCustomProtectionRulesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.CustomProtectionRuleSummary objects
     * contained in responses from the listCustomProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCustomProtectionRules(request: requests.ListCustomProtectionRulesRequest): AsyncIterableIterator<model.CustomProtectionRuleSummary>;
    /**
     * NOTE: This function is deprecated in favor of listCustomProtectionRulesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listCustomProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCustomProtectionRulesResponses(request: requests.ListCustomProtectionRulesRequest): AsyncIterableIterator<responses.ListCustomProtectionRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.CustomProtectionRuleSummary objects
     * contained in responses from the listCustomProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCustomProtectionRulesRecordIterator(request: requests.ListCustomProtectionRulesRequest): AsyncIterableIterator<model.CustomProtectionRuleSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listCustomProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCustomProtectionRulesResponseIterator(request: requests.ListCustomProtectionRulesRequest): AsyncIterableIterator<responses.ListCustomProtectionRulesResponse>;
    /**
     * Return the list of the tenant's edge node subnets. Use these CIDR blocks to restrict incoming traffic to your origin. These subnets are owned by OCI and forward traffic to customer origins. They are not associated with specific regions or compartments.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListEdgeSubnetsRequest
     * @return ListEdgeSubnetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListEdgeSubnets.ts.html |here} to see how to use ListEdgeSubnets API.
     */
    listEdgeSubnets(listEdgeSubnetsRequest: requests.ListEdgeSubnetsRequest): Promise<responses.ListEdgeSubnetsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listEdgeSubnetsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.EdgeSubnet objects
     * contained in responses from the listEdgeSubnets operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllEdgeSubnets(request: requests.ListEdgeSubnetsRequest): AsyncIterableIterator<model.EdgeSubnet>;
    /**
     * NOTE: This function is deprecated in favor of listEdgeSubnetsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listEdgeSubnets operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllEdgeSubnetsResponses(request: requests.ListEdgeSubnetsRequest): AsyncIterableIterator<responses.ListEdgeSubnetsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.EdgeSubnet objects
     * contained in responses from the listEdgeSubnets operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listEdgeSubnetsRecordIterator(request: requests.ListEdgeSubnetsRequest): AsyncIterableIterator<model.EdgeSubnet>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listEdgeSubnets operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listEdgeSubnetsResponseIterator(request: requests.ListEdgeSubnetsRequest): AsyncIterableIterator<responses.ListEdgeSubnetsResponse>;
    /**
       * Gets the list of good bots defined in the Web Application Firewall configuration for a WAAS policy.
  * <p>
  The list is sorted by `key`, in ascending order.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListGoodBotsRequest
       * @return ListGoodBotsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListGoodBots.ts.html |here} to see how to use ListGoodBots API.
       */
    listGoodBots(listGoodBotsRequest: requests.ListGoodBotsRequest): Promise<responses.ListGoodBotsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listGoodBotsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.GoodBot objects
     * contained in responses from the listGoodBots operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllGoodBots(request: requests.ListGoodBotsRequest): AsyncIterableIterator<model.GoodBot>;
    /**
     * NOTE: This function is deprecated in favor of listGoodBotsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listGoodBots operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllGoodBotsResponses(request: requests.ListGoodBotsRequest): AsyncIterableIterator<responses.ListGoodBotsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.GoodBot objects
     * contained in responses from the listGoodBots operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listGoodBotsRecordIterator(request: requests.ListGoodBotsRequest): AsyncIterableIterator<model.GoodBot>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listGoodBots operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listGoodBotsResponseIterator(request: requests.ListGoodBotsRequest): AsyncIterableIterator<responses.ListGoodBotsResponse>;
    /**
     * Gets the list of available protection rules for a WAAS policy. Use the `GetWafConfig` operation to view a list of currently configured protection rules for the Web Application Firewall, or use the `ListRecommendations` operation to get a list of recommended protection rules for the Web Application Firewall.
     * The list is sorted by `key`, in ascending order.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProtectionRulesRequest
     * @return ListProtectionRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListProtectionRules.ts.html |here} to see how to use ListProtectionRules API.
     */
    listProtectionRules(listProtectionRulesRequest: requests.ListProtectionRulesRequest): Promise<responses.ListProtectionRulesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listProtectionRulesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ProtectionRule objects
     * contained in responses from the listProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllProtectionRules(request: requests.ListProtectionRulesRequest): AsyncIterableIterator<model.ProtectionRule>;
    /**
     * NOTE: This function is deprecated in favor of listProtectionRulesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllProtectionRulesResponses(request: requests.ListProtectionRulesRequest): AsyncIterableIterator<responses.ListProtectionRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ProtectionRule objects
     * contained in responses from the listProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listProtectionRulesRecordIterator(request: requests.ListProtectionRulesRequest): AsyncIterableIterator<model.ProtectionRule>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listProtectionRulesResponseIterator(request: requests.ListProtectionRulesRequest): AsyncIterableIterator<responses.ListProtectionRulesResponse>;
    /**
       * Gets the list of recommended Web Application Firewall protection rules.
  * <p>
  Use the `POST /waasPolicies/{waasPolicyId}/actions/acceptWafConfigRecommendations` method to accept recommended Web Application Firewall protection rules. For more information, see [WAF Protection Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/wafprotectionrules.htm).
  * The list is sorted by `key`, in ascending order.
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListRecommendationsRequest
       * @return ListRecommendationsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListRecommendations.ts.html |here} to see how to use ListRecommendations API.
       */
    listRecommendations(listRecommendationsRequest: requests.ListRecommendationsRequest): Promise<responses.ListRecommendationsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listRecommendationsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.Recommendation objects
     * contained in responses from the listRecommendations operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRecommendations(request: requests.ListRecommendationsRequest): AsyncIterableIterator<model.Recommendation>;
    /**
     * NOTE: This function is deprecated in favor of listRecommendationsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listRecommendations operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRecommendationsResponses(request: requests.ListRecommendationsRequest): AsyncIterableIterator<responses.ListRecommendationsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Recommendation objects
     * contained in responses from the listRecommendations operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listRecommendationsRecordIterator(request: requests.ListRecommendationsRequest): AsyncIterableIterator<model.Recommendation>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listRecommendations operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listRecommendationsResponseIterator(request: requests.ListRecommendationsRequest): AsyncIterableIterator<responses.ListRecommendationsResponse>;
    /**
     * Gets the list of available web application threat intelligence feeds
     * and the actions set for each feed. The list is sorted by `key`,
     * in ascending order.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListThreatFeedsRequest
     * @return ListThreatFeedsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListThreatFeeds.ts.html |here} to see how to use ListThreatFeeds API.
     */
    listThreatFeeds(listThreatFeedsRequest: requests.ListThreatFeedsRequest): Promise<responses.ListThreatFeedsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listThreatFeedsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ThreatFeed objects
     * contained in responses from the listThreatFeeds operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllThreatFeeds(request: requests.ListThreatFeedsRequest): AsyncIterableIterator<model.ThreatFeed>;
    /**
     * NOTE: This function is deprecated in favor of listThreatFeedsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listThreatFeeds operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllThreatFeedsResponses(request: requests.ListThreatFeedsRequest): AsyncIterableIterator<responses.ListThreatFeedsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ThreatFeed objects
     * contained in responses from the listThreatFeeds operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listThreatFeedsRecordIterator(request: requests.ListThreatFeedsRequest): AsyncIterableIterator<model.ThreatFeed>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listThreatFeeds operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listThreatFeedsResponseIterator(request: requests.ListThreatFeedsRequest): AsyncIterableIterator<responses.ListThreatFeedsResponse>;
    /**
     * Gets a list of WAAS policies.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWaasPoliciesRequest
     * @return ListWaasPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWaasPolicies.ts.html |here} to see how to use ListWaasPolicies API.
     */
    listWaasPolicies(listWaasPoliciesRequest: requests.ListWaasPoliciesRequest): Promise<responses.ListWaasPoliciesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWaasPoliciesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WaasPolicySummary objects
     * contained in responses from the listWaasPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWaasPolicies(request: requests.ListWaasPoliciesRequest): AsyncIterableIterator<model.WaasPolicySummary>;
    /**
     * NOTE: This function is deprecated in favor of listWaasPoliciesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWaasPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWaasPoliciesResponses(request: requests.ListWaasPoliciesRequest): AsyncIterableIterator<responses.ListWaasPoliciesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WaasPolicySummary objects
     * contained in responses from the listWaasPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWaasPoliciesRecordIterator(request: requests.ListWaasPoliciesRequest): AsyncIterableIterator<model.WaasPolicySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWaasPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWaasPoliciesResponseIterator(request: requests.ListWaasPoliciesRequest): AsyncIterableIterator<responses.ListWaasPoliciesResponse>;
    /**
     * Gets the list of currently configured custom protection rules for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWaasPolicyCustomProtectionRulesRequest
     * @return ListWaasPolicyCustomProtectionRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWaasPolicyCustomProtectionRules.ts.html |here} to see how to use ListWaasPolicyCustomProtectionRules API.
     */
    listWaasPolicyCustomProtectionRules(listWaasPolicyCustomProtectionRulesRequest: requests.ListWaasPolicyCustomProtectionRulesRequest): Promise<responses.ListWaasPolicyCustomProtectionRulesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWaasPolicyCustomProtectionRulesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WaasPolicyCustomProtectionRuleSummary objects
     * contained in responses from the listWaasPolicyCustomProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWaasPolicyCustomProtectionRules(request: requests.ListWaasPolicyCustomProtectionRulesRequest): AsyncIterableIterator<model.WaasPolicyCustomProtectionRuleSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWaasPolicyCustomProtectionRulesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWaasPolicyCustomProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWaasPolicyCustomProtectionRulesResponses(request: requests.ListWaasPolicyCustomProtectionRulesRequest): AsyncIterableIterator<responses.ListWaasPolicyCustomProtectionRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WaasPolicyCustomProtectionRuleSummary objects
     * contained in responses from the listWaasPolicyCustomProtectionRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWaasPolicyCustomProtectionRulesRecordIterator(request: requests.ListWaasPolicyCustomProtectionRulesRequest): AsyncIterableIterator<model.WaasPolicyCustomProtectionRuleSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWaasPolicyCustomProtectionRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWaasPolicyCustomProtectionRulesResponseIterator(request: requests.ListWaasPolicyCustomProtectionRulesRequest): AsyncIterableIterator<responses.ListWaasPolicyCustomProtectionRulesResponse>;
    /**
     * Gets the number of blocked requests by a Web Application Firewall feature in five minute blocks, sorted by `timeObserved` in ascending order (starting from oldest data).
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWafBlockedRequestsRequest
     * @return ListWafBlockedRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWafBlockedRequests.ts.html |here} to see how to use ListWafBlockedRequests API.
     */
    listWafBlockedRequests(listWafBlockedRequestsRequest: requests.ListWafBlockedRequestsRequest): Promise<responses.ListWafBlockedRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWafBlockedRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WafBlockedRequest objects
     * contained in responses from the listWafBlockedRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafBlockedRequests(request: requests.ListWafBlockedRequestsRequest): AsyncIterableIterator<model.WafBlockedRequest>;
    /**
     * NOTE: This function is deprecated in favor of listWafBlockedRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWafBlockedRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafBlockedRequestsResponses(request: requests.ListWafBlockedRequestsRequest): AsyncIterableIterator<responses.ListWafBlockedRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WafBlockedRequest objects
     * contained in responses from the listWafBlockedRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafBlockedRequestsRecordIterator(request: requests.ListWafBlockedRequestsRequest): AsyncIterableIterator<model.WafBlockedRequest>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWafBlockedRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafBlockedRequestsResponseIterator(request: requests.ListWafBlockedRequestsRequest): AsyncIterableIterator<responses.ListWafBlockedRequestsResponse>;
    /**
     * Gets structured Web Application Firewall event logs for a WAAS
     * policy. Sorted by the `timeObserved` in ascending order (starting from the
     * oldest recorded event).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWafLogsRequest
     * @return ListWafLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWafLogs.ts.html |here} to see how to use ListWafLogs API.
     */
    listWafLogs(listWafLogsRequest: requests.ListWafLogsRequest): Promise<responses.ListWafLogsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWafLogsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WafLog objects
     * contained in responses from the listWafLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafLogs(request: requests.ListWafLogsRequest): AsyncIterableIterator<model.WafLog>;
    /**
     * NOTE: This function is deprecated in favor of listWafLogsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWafLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafLogsResponses(request: requests.ListWafLogsRequest): AsyncIterableIterator<responses.ListWafLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WafLog objects
     * contained in responses from the listWafLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafLogsRecordIterator(request: requests.ListWafLogsRequest): AsyncIterableIterator<model.WafLog>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWafLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafLogsResponseIterator(request: requests.ListWafLogsRequest): AsyncIterableIterator<responses.ListWafLogsResponse>;
    /**
     * Gets the number of requests managed by a Web Application Firewall
     * over a specified period of time, including blocked requests. Sorted
     * by `timeObserved` in ascending order (starting from oldest requests).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWafRequestsRequest
     * @return ListWafRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWafRequests.ts.html |here} to see how to use ListWafRequests API.
     */
    listWafRequests(listWafRequestsRequest: requests.ListWafRequestsRequest): Promise<responses.ListWafRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWafRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WafRequest objects
     * contained in responses from the listWafRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafRequests(request: requests.ListWafRequestsRequest): AsyncIterableIterator<model.WafRequest>;
    /**
     * NOTE: This function is deprecated in favor of listWafRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWafRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafRequestsResponses(request: requests.ListWafRequestsRequest): AsyncIterableIterator<responses.ListWafRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WafRequest objects
     * contained in responses from the listWafRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafRequestsRecordIterator(request: requests.ListWafRequestsRequest): AsyncIterableIterator<model.WafRequest>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWafRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafRequestsResponseIterator(request: requests.ListWafRequestsRequest): AsyncIterableIterator<responses.ListWafRequestsResponse>;
    /**
     * Gets the Web Application Firewall traffic data for a WAAS policy.
     * Sorted by `timeObserved` in ascending order (starting from oldest data).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWafTrafficRequest
     * @return ListWafTrafficResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWafTraffic.ts.html |here} to see how to use ListWafTraffic API.
     */
    listWafTraffic(listWafTrafficRequest: requests.ListWafTrafficRequest): Promise<responses.ListWafTrafficResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWafTrafficRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WafTrafficDatum objects
     * contained in responses from the listWafTraffic operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafTraffic(request: requests.ListWafTrafficRequest): AsyncIterableIterator<model.WafTrafficDatum>;
    /**
     * NOTE: This function is deprecated in favor of listWafTrafficResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWafTraffic operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWafTrafficResponses(request: requests.ListWafTrafficRequest): AsyncIterableIterator<responses.ListWafTrafficResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WafTrafficDatum objects
     * contained in responses from the listWafTraffic operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafTrafficRecordIterator(request: requests.ListWafTrafficRequest): AsyncIterableIterator<model.WafTrafficDatum>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWafTraffic operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWafTrafficResponseIterator(request: requests.ListWafTrafficRequest): AsyncIterableIterator<responses.ListWafTrafficResponse>;
    /**
     * Gets the list of whitelists defined in the Web Application Firewall configuration for a WAAS policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWhitelistsRequest
     * @return ListWhitelistsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWhitelists.ts.html |here} to see how to use ListWhitelists API.
     */
    listWhitelists(listWhitelistsRequest: requests.ListWhitelistsRequest): Promise<responses.ListWhitelistsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWhitelistsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.Whitelist objects
     * contained in responses from the listWhitelists operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWhitelists(request: requests.ListWhitelistsRequest): AsyncIterableIterator<model.Whitelist>;
    /**
     * NOTE: This function is deprecated in favor of listWhitelistsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWhitelists operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWhitelistsResponses(request: requests.ListWhitelistsRequest): AsyncIterableIterator<responses.ListWhitelistsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Whitelist objects
     * contained in responses from the listWhitelists operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWhitelistsRecordIterator(request: requests.ListWhitelistsRequest): AsyncIterableIterator<model.Whitelist>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWhitelists operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWhitelistsResponseIterator(request: requests.ListWhitelistsRequest): AsyncIterableIterator<responses.ListWhitelistsResponse>;
    /**
     * Gets a list of subnets (CIDR notation) from which the WAAS EDGE may make requests. The subnets are owned by OCI and forward traffic to your origins. Allow traffic from these subnets to your origins. They are not associated with specific regions or compartments.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Performs a purge of the cache for each specified resource. If no resources are passed, the cache for the entire Web Application Firewall will be purged.
     * For more information, see [Caching Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/cachingrules.htm#purge).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PurgeCacheRequest
     * @return PurgeCacheResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/PurgeCache.ts.html |here} to see how to use PurgeCache API.
     */
    purgeCache(purgeCacheRequest: requests.PurgeCacheRequest): Promise<responses.PurgeCacheResponse>;
    /**
       * Updates the list of access rules in the Web Application Firewall configuration for a specified WAAS policy. Access rules allow explicit actions to be defined and executed for requests that meet various conditions. A rule action can be set to allow, detect, or block requests. The detect setting allows the request to pass through the Web Application Firewall and is tagged with a `DETECT` flag in the Web Application Firewall's log.
  * <p>
  This operation can create, delete, update, and/or reorder access rules depending on the structure of the request body.
  * <p>
  Access rules can be updated by changing the properties of the access rule object with the rule's key specified in the key field. Access rules can be reordered by changing the order of the access rules in the list when updating.
  * <p>
  Access rules can be created by adding a new access rule object to the list without a `key` property specified. A `key` will be generated for the new access rule upon update.
  * <p>
  Any existing access rules that are not specified with a `key` in the list of access rules will be deleted upon update.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateAccessRulesRequest
       * @return UpdateAccessRulesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateAccessRules.ts.html |here} to see how to use UpdateAccessRules API.
       */
    updateAccessRules(updateAccessRulesRequest: requests.UpdateAccessRulesRequest): Promise<responses.UpdateAccessRulesResponse>;
    /**
     * Updates the details of an address list. Only the fields specified in the request body will be updated; all other properties will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateAddressListRequest
     * @return UpdateAddressListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateAddressList.ts.html |here} to see how to use UpdateAddressList API.
     */
    updateAddressList(updateAddressListRequest: requests.UpdateAddressListRequest): Promise<responses.UpdateAddressListResponse>;
    /**
       * Updates the configuration for each specified caching rule.
  * <p>
  Caching rules WAF policies allow you to selectively cache content on Oracle Cloud Infrastructure's edge servers, such as webpages or certain file types. For more information about caching rules, see [Caching Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/cachingrules.htm).
  * <p>
  This operation can create, delete, update, and/or reorder caching rules depending on the structure of the request body. Caching rules can be updated by changing the properties of the caching rule object with the rule's key specified in the key field. Any existing caching rules that are not specified with a key in the list of access rules will be deleted upon update.
  * <p>
  The order the caching rules are specified in is important. The rules are processed in the order they are specified and the first matching rule will be used when processing a request. Use `ListCachingRules` to view a list of all available caching rules in a compartment.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateCachingRulesRequest
       * @return UpdateCachingRulesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateCachingRules.ts.html |here} to see how to use UpdateCachingRules API.
       */
    updateCachingRules(updateCachingRulesRequest: requests.UpdateCachingRulesRequest): Promise<responses.UpdateCachingRulesResponse>;
    /**
       * Updates the list of CAPTCHA challenges in the Web Application Firewall configuration for a WAAS policy.
  * This operation can create, update, or delete CAPTCHAs depending on the structure of the request body.
  * CAPTCHA challenges can be updated by changing the properties of the CAPTCHA object with the rule's key specified in the key field. CAPTCHA challenges can be reordered by changing the order of the CAPTCHA challenges in the list when updating.
  * <p>
  CAPTCHA challenges can be created by adding a new access rule object to the list without a `key` property specified. A `key` will be generated for the new CAPTCHA challenges upon update.
  * <p>
  Any existing CAPTCHA challenges that are not specified with a `key` in the list of CAPTCHA challenges will be deleted upon update.
  * <p>
  Query parameters are allowed in CAPTCHA URL.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateCaptchasRequest
       * @return UpdateCaptchasResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateCaptchas.ts.html |here} to see how to use UpdateCaptchas API.
       */
    updateCaptchas(updateCaptchasRequest: requests.UpdateCaptchasRequest): Promise<responses.UpdateCaptchasResponse>;
    /**
     * It is not possible to update a certificate, only create and delete. Therefore, this operation can only update the display name, freeform tags, and defined tags of a certificate.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCertificateRequest
     * @return UpdateCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateCertificate.ts.html |here} to see how to use UpdateCertificate API.
     */
    updateCertificate(updateCertificateRequest: requests.UpdateCertificateRequest): Promise<responses.UpdateCertificateResponse>;
    /**
     * Updates the configuration of a custom protection rule. Only the fields specified in the request body will be updated; all other properties will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCustomProtectionRuleRequest
     * @return UpdateCustomProtectionRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateCustomProtectionRule.ts.html |here} to see how to use UpdateCustomProtectionRule API.
     */
    updateCustomProtectionRule(updateCustomProtectionRuleRequest: requests.UpdateCustomProtectionRuleRequest): Promise<responses.UpdateCustomProtectionRuleResponse>;
    /**
       * Updates the Device Fingerprint Challenge (DFC) settings in the Web Application Firewall configuration for a policy. The DFC generates a hashed signature of both virtual and real browsers based on 50+ attributes. These proprietary signatures are then leveraged for real-time correlation to identify and block malicious bots.
  * <p>
  The signature is based on a library of attributes detected via JavaScript listeners; the attributes include OS, screen resolution, fonts, UserAgent, IP address, etc. We are constantly making improvements and considering new libraries to include in our DFC build. We can also exclude attributes from the signature as needed.
  * <p>
  DFC collects attributes to generate a hashed signature about a client - if a fingerprint is not possible, then it will result in a block or alert action. Actions can be enforced across multiple devices if they share they have the same fingerprint.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateDeviceFingerprintChallengeRequest
       * @return UpdateDeviceFingerprintChallengeResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateDeviceFingerprintChallenge.ts.html |here} to see how to use UpdateDeviceFingerprintChallenge API.
       */
    updateDeviceFingerprintChallenge(updateDeviceFingerprintChallengeRequest: requests.UpdateDeviceFingerprintChallengeRequest): Promise<responses.UpdateDeviceFingerprintChallengeResponse>;
    /**
       * Updates the list of good bots in the Web Application Firewall configuration for a policy. Only the fields specified in the request body will be updated, all other configuration properties will remain unchanged.
  * <p>
  Good bots allows you to manage access for bots from known providers, such as Google or Baidu. For more information about good bots, see [Bot Management](https://docs.oracle.com/iaas/Content/WAF/Tasks/botmanagement.htm).
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateGoodBotsRequest
       * @return UpdateGoodBotsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateGoodBots.ts.html |here} to see how to use UpdateGoodBots API.
       */
    updateGoodBots(updateGoodBotsRequest: requests.UpdateGoodBotsRequest): Promise<responses.UpdateGoodBotsResponse>;
    /**
     * Updates the Human Interaction Challenge (HIC) settings in the Web Application Firewall configuration for a WAAS policy. HIC is a countermeasure that allows the proxy to check the user's browser for various behaviors that distinguish a human presence from a bot.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateHumanInteractionChallengeRequest
     * @return UpdateHumanInteractionChallengeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateHumanInteractionChallenge.ts.html |here} to see how to use UpdateHumanInteractionChallenge API.
     */
    updateHumanInteractionChallenge(updateHumanInteractionChallengeRequest: requests.UpdateHumanInteractionChallengeRequest): Promise<responses.UpdateHumanInteractionChallengeResponse>;
    /**
     * Updates the JavaScript challenge settings in the Web Application Firewall configuration for a WAAS policy. JavaScript Challenge validates that the client can accept JavaScript with a binary decision. For more information, see [Bot Management](https://docs.oracle.com/iaas/Content/WAF/Tasks/botmanagement.htm).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateJsChallengeRequest
     * @return UpdateJsChallengeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateJsChallenge.ts.html |here} to see how to use UpdateJsChallenge API.
     */
    updateJsChallenge(updateJsChallengeRequest: requests.UpdateJsChallengeRequest): Promise<responses.UpdateJsChallengeResponse>;
    /**
     * Updates the configuration for a WAAS policy. Only the fields specified in the request body will be updated; all other properties will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdatePolicyConfigRequest
     * @return UpdatePolicyConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdatePolicyConfig.ts.html |here} to see how to use UpdatePolicyConfig API.
     */
    updatePolicyConfig(updatePolicyConfigRequest: requests.UpdatePolicyConfigRequest): Promise<responses.UpdatePolicyConfigResponse>;
    /**
     * Updates the action for each specified protection rule. Requests can either be allowed, blocked, or trigger an alert if they meet the parameters of an applied rule. For more information on protection rules, see [WAF Protection Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/wafprotectionrules.htm).
     * This operation can update or disable protection rules depending on the structure of the request body.
     * Protection rules can be updated by changing the properties of the protection rule object with the rule's key specified in the key field.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateProtectionRulesRequest
     * @return UpdateProtectionRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateProtectionRules.ts.html |here} to see how to use UpdateProtectionRules API.
     */
    updateProtectionRules(updateProtectionRulesRequest: requests.UpdateProtectionRulesRequest): Promise<responses.UpdateProtectionRulesResponse>;
    /**
     * Updates the protection settings in the Web Application Firewall configuration for a WAAS policy. Protection settings allow you define what action is taken when a request is blocked by the Web Application Firewall, such as returning a response code or block page. Only the fields specified in the request body will be updated; all other fields will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateProtectionSettingsRequest
     * @return UpdateProtectionSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateProtectionSettings.ts.html |here} to see how to use UpdateProtectionSettings API.
     */
    updateProtectionSettings(updateProtectionSettingsRequest: requests.UpdateProtectionSettingsRequest): Promise<responses.UpdateProtectionSettingsResponse>;
    /**
     * Updates the action to take when a request's IP address matches an address in the specified threat intelligence feed. Threat intelligence feeds are compiled lists of IP addresses with malicious reputations based on internet intelligence. Only the threat feeds specified in the request body will be updated; all other threat feeds will remain unchanged.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateThreatFeedsRequest
     * @return UpdateThreatFeedsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateThreatFeeds.ts.html |here} to see how to use UpdateThreatFeeds API.
     */
    updateThreatFeeds(updateThreatFeedsRequest: requests.UpdateThreatFeedsRequest): Promise<responses.UpdateThreatFeedsResponse>;
    /**
     * Updates the details of a WAAS policy, including origins and tags. Only the fields specified in the request body will be updated; all other properties will remain unchanged.
     * To update platform provided resources such as `GoodBots`, `ProtectionRules`, and `ThreatFeeds`, first retrieve the list of available resources with the related list operation such as `GetThreatFeeds` or `GetProtectionRules`.
     * The returned list will contain objects with `key` properties that can be used to update the resource during the `UpdateWaasPolicy` request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateWaasPolicyRequest
     * @return UpdateWaasPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateWaasPolicy.ts.html |here} to see how to use UpdateWaasPolicy API.
     */
    updateWaasPolicy(updateWaasPolicyRequest: requests.UpdateWaasPolicyRequest): Promise<responses.UpdateWaasPolicyResponse>;
    /**
     * Updates the action for each specified custom protection rule. Only the `DETECT` and `BLOCK` actions can be set. Disabled rules should not be included in the list. For more information on protection rules, see [WAF Protection Rules](https://docs.oracle.com/iaas/Content/WAF/Tasks/wafprotectionrules.htm).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateWaasPolicyCustomProtectionRulesRequest
     * @return UpdateWaasPolicyCustomProtectionRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateWaasPolicyCustomProtectionRules.ts.html |here} to see how to use UpdateWaasPolicyCustomProtectionRules API.
     */
    updateWaasPolicyCustomProtectionRules(updateWaasPolicyCustomProtectionRulesRequest: requests.UpdateWaasPolicyCustomProtectionRulesRequest): Promise<responses.UpdateWaasPolicyCustomProtectionRulesResponse>;
    /**
     * Updates the address rate limiting settings in the Web Application Firewall configuration for a policy. Rate limiting allows you to configure a threshold for the number of requests from a unique IP address for the given period. You can also define the response code for the requests from the same address that exceed the threshold.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateWafAddressRateLimitingRequest
     * @return UpdateWafAddressRateLimitingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateWafAddressRateLimiting.ts.html |here} to see how to use UpdateWafAddressRateLimiting API.
     */
    updateWafAddressRateLimiting(updateWafAddressRateLimitingRequest: requests.UpdateWafAddressRateLimitingRequest): Promise<responses.UpdateWafAddressRateLimitingResponse>;
    /**
       * Updates the Web Application Firewall configuration for a specified WAAS policy.
  * <p>
  To update platform provided resources such as `GoodBots`, `ProtectionRules`, and `ThreatFeeds`,
  * first retrieve the list of available resources with the related list operation, such as
  * `GetThreatFeeds` or `GetProtectionRules`.
  * <p>
  The returned list will contain objects with `key` properties that can be used to update the
  * resource during the `UpdateWafConfig` request.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateWafConfigRequest
       * @return UpdateWafConfigResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateWafConfig.ts.html |here} to see how to use UpdateWafConfig API.
       */
    updateWafConfig(updateWafConfigRequest: requests.UpdateWafConfigRequest): Promise<responses.UpdateWafConfigResponse>;
    /**
       * Updates the list of IP addresses that bypass the Web Application Firewall for a WAAS policy. Supports single IP addresses, subnet masks (CIDR notation) and Address Lists.
  * <p>
  This operation can create, delete, update, and/or reorder whitelists depending on the structure of the request body.
  * <p>
  Whitelists can be updated by changing the properties of the whitelist object with the rule's key specified in the `key` field. Whitelists can be reordered by changing the order of the whitelists in the list of objects when updating.
  * <p>
  Whitelists can be created by adding a new whitelist object to the list without a `key` property specified. A `key` will be generated for the new whitelist upon update.
  * <p>
  Whitelists can be deleted by removing the existing whitelist object from the list. Any existing whitelists that are not specified with a `key` in the list of access rules will be deleted upon update.
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param UpdateWhitelistsRequest
       * @return UpdateWhitelistsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/waas/UpdateWhitelists.ts.html |here} to see how to use UpdateWhitelists API.
       */
    updateWhitelists(updateWhitelistsRequest: requests.UpdateWhitelistsRequest): Promise<responses.UpdateWhitelistsResponse>;
}
export {};
