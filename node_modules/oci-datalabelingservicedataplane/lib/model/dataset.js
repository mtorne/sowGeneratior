"use strict";
/**
 * Data Labeling API
 * Use Data Labeling API to create Annotations on Images, Texts & Documents, and generate snapshots.
 * OpenAPI spec version: 20211001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dataset = void 0;
const model = __importStar(require("../model"));
var Dataset;
(function (Dataset) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["NeedsAttention"] = "NEEDS_ATTENTION";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = Dataset.LifecycleState || (Dataset.LifecycleState = {}));
    let LifecycleSubstate;
    (function (LifecycleSubstate) {
        LifecycleSubstate["ImportDataset"] = "IMPORT_DATASET";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleSubstate["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleSubstate = Dataset.LifecycleSubstate || (Dataset.LifecycleSubstate = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "datasetSourceDetails": obj.datasetSourceDetails
                ? model.DatasetSourceDetails.getJsonObj(obj.datasetSourceDetails)
                : undefined,
            "datasetFormatDetails": obj.datasetFormatDetails
                ? model.DatasetFormatDetails.getJsonObj(obj.datasetFormatDetails)
                : undefined,
            "labelSet": obj.labelSet ? model.LabelSet.getJsonObj(obj.labelSet) : undefined,
            "initialRecordGenerationConfiguration": obj.initialRecordGenerationConfiguration
                ? model.InitialRecordGenerationConfiguration.getJsonObj(obj.initialRecordGenerationConfiguration)
                : undefined,
            "initialImportDatasetConfiguration": obj.initialImportDatasetConfiguration
                ? model.InitialImportDatasetConfiguration.getJsonObj(obj.initialImportDatasetConfiguration)
                : undefined
        });
        return jsonObj;
    }
    Dataset.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "datasetSourceDetails": obj.datasetSourceDetails
                ? model.DatasetSourceDetails.getDeserializedJsonObj(obj.datasetSourceDetails)
                : undefined,
            "datasetFormatDetails": obj.datasetFormatDetails
                ? model.DatasetFormatDetails.getDeserializedJsonObj(obj.datasetFormatDetails)
                : undefined,
            "labelSet": obj.labelSet ? model.LabelSet.getDeserializedJsonObj(obj.labelSet) : undefined,
            "initialRecordGenerationConfiguration": obj.initialRecordGenerationConfiguration
                ? model.InitialRecordGenerationConfiguration.getDeserializedJsonObj(obj.initialRecordGenerationConfiguration)
                : undefined,
            "initialImportDatasetConfiguration": obj.initialImportDatasetConfiguration
                ? model.InitialImportDatasetConfiguration.getDeserializedJsonObj(obj.initialImportDatasetConfiguration)
                : undefined
        });
        return jsonObj;
    }
    Dataset.getDeserializedJsonObj = getDeserializedJsonObj;
})(Dataset = exports.Dataset || (exports.Dataset = {}));
//# sourceMappingURL=dataset.js.map