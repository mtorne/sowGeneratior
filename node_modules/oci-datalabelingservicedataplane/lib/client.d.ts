/**
 * Data Labeling API
 * Use Data Labeling API to create Annotations on Images, Texts & Documents, and generate snapshots.
 * OpenAPI spec version: 20211001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { DataLabelingWaiter } from "./datalabeling-waiter";
declare const Breaker: any;
export declare enum DataLabelingApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class DataLabelingClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": DataLabelingWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new DataLabelingWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): DataLabelingWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): DataLabelingWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Creates an annotation.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAnnotationRequest
     * @return CreateAnnotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/CreateAnnotation.ts.html |here} to see how to use CreateAnnotation API.
     */
    createAnnotation(createAnnotationRequest: requests.CreateAnnotationRequest): Promise<responses.CreateAnnotationResponse>;
    /**
     * Creates a record.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateRecordRequest
     * @return CreateRecordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/CreateRecord.ts.html |here} to see how to use CreateRecord API.
     */
    createRecord(createRecordRequest: requests.CreateRecordRequest): Promise<responses.CreateRecordResponse>;
    /**
     * It deletes an annotation resource by identifier.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAnnotationRequest
     * @return DeleteAnnotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/DeleteAnnotation.ts.html |here} to see how to use DeleteAnnotation API.
     */
    deleteAnnotation(deleteAnnotationRequest: requests.DeleteAnnotationRequest): Promise<responses.DeleteAnnotationResponse>;
    /**
     * Deletes a record resource by identifier.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteRecordRequest
     * @return DeleteRecordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/DeleteRecord.ts.html |here} to see how to use DeleteRecord API.
     */
    deleteRecord(deleteRecordRequest: requests.DeleteRecordRequest): Promise<responses.DeleteRecordResponse>;
    /**
     * Gets an annotation.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAnnotationRequest
     * @return GetAnnotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/GetAnnotation.ts.html |here} to see how to use GetAnnotation API.
     */
    getAnnotation(getAnnotationRequest: requests.GetAnnotationRequest): Promise<responses.GetAnnotationResponse>;
    /**
     * Gets a dataset by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDatasetRequest
     * @return GetDatasetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/GetDataset.ts.html |here} to see how to use GetDataset API.
     */
    getDataset(getDatasetRequest: requests.GetDatasetRequest): Promise<responses.GetDatasetResponse>;
    /**
     * Gets a record.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetRecordRequest
     * @return GetRecordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/GetRecord.ts.html |here} to see how to use GetRecord API.
     */
    getRecord(getRecordRequest: requests.GetRecordRequest): Promise<responses.GetRecordResponse>;
    /**
     * Retrieves the content of the record from the dataset source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetRecordContentRequest
     * @return GetRecordContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/GetRecordContent.ts.html |here} to see how to use GetRecordContent API.
     */
    getRecordContent(getRecordContentRequest: requests.GetRecordContentRequest): Promise<responses.GetRecordContentResponse>;
    /**
     * Retrieves the preview of the record content from the dataset source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetRecordPreviewContentRequest
     * @return GetRecordPreviewContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/GetRecordPreviewContent.ts.html |here} to see how to use GetRecordPreviewContent API.
     */
    getRecordPreviewContent(getRecordPreviewContentRequest: requests.GetRecordPreviewContentRequest): Promise<responses.GetRecordPreviewContentResponse>;
    /**
     * Returns a list of annotations.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAnnotationsRequest
     * @return ListAnnotationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/ListAnnotations.ts.html |here} to see how to use ListAnnotations API.
     */
    listAnnotations(listAnnotationsRequest: requests.ListAnnotationsRequest): Promise<responses.ListAnnotationsResponse>;
    /**
     * The list of records in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListRecordsRequest
     * @return ListRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/ListRecords.ts.html |here} to see how to use ListRecords API.
     */
    listRecords(listRecordsRequest: requests.ListRecordsRequest): Promise<responses.ListRecordsResponse>;
    /**
     * Summarize the annotations created for a given dataset.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeAnnotationAnalyticsRequest
     * @return SummarizeAnnotationAnalyticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/SummarizeAnnotationAnalytics.ts.html |here} to see how to use SummarizeAnnotationAnalytics API.
     */
    summarizeAnnotationAnalytics(summarizeAnnotationAnalyticsRequest: requests.SummarizeAnnotationAnalyticsRequest): Promise<responses.SummarizeAnnotationAnalyticsResponse>;
    /**
     * Summarize the records created for a given dataset.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeRecordAnalyticsRequest
     * @return SummarizeRecordAnalyticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/SummarizeRecordAnalytics.ts.html |here} to see how to use SummarizeRecordAnalytics API.
     */
    summarizeRecordAnalytics(summarizeRecordAnalyticsRequest: requests.SummarizeRecordAnalyticsRequest): Promise<responses.SummarizeRecordAnalyticsResponse>;
    /**
     * Updates an annotation.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAnnotationRequest
     * @return UpdateAnnotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/UpdateAnnotation.ts.html |here} to see how to use UpdateAnnotation API.
     */
    updateAnnotation(updateAnnotationRequest: requests.UpdateAnnotationRequest): Promise<responses.UpdateAnnotationResponse>;
    /**
     * Updates a record.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateRecordRequest
     * @return UpdateRecordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datalabelingservicedataplane/UpdateRecord.ts.html |here} to see how to use UpdateRecord API.
     */
    updateRecord(updateRecordRequest: requests.UpdateRecordRequest): Promise<responses.UpdateRecordResponse>;
}
export {};
