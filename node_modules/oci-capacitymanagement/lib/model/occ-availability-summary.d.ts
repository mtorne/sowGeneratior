/**
 * OCI Control Center Capacity Management API
 * OCI Control Center (OCC) Capacity Management enables you to manage capacity requests in realms where OCI Control Center Capacity Management is available. For more information, see [OCI Control Center](https://docs.oracle.com/iaas/Content/control-center/home.htm).
 * OpenAPI spec version: 20231107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details about the available capacity and constraints for different resource types present in the availability catalog.
 */
export interface OccAvailabilitySummary {
    /**
     * The OCID of the availability catalog.
     */
    "catalogId": string;
    /**
     * The name of the OCI service in consideration. For example, Compute, Exadata, and so on.
     *
     */
    "namespace": model.Namespace;
    /**
     * The date by which the customer must place the order to have their capacity requirements met by the customer handover date.
     */
    "dateFinalCustomerOrder": Date;
    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     */
    "dateExpectedCapacityHandover": Date;
    /**
     * The different types of resources against which customers can place capacity requests.
     */
    "resourceType": string;
    /**
     * The type of workload (Generic/ROW).
     */
    "workloadType": string;
    /**
     * The name of the resource that the customer can request.
     */
    "resourceName": string;
    /**
     * The quantity of resource currently available that the customer can request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "availableQuantity": number;
    /**
     * The total quantity of resource that the customer can request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalAvailableQuantity": number;
    /**
     * The quantity of resource currently demanded by the customer. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "demandedQuantity": number;
    /**
     * The unit in which the resource available is measured.
     */
    "unit": string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace OccAvailabilitySummary {
    function getJsonObj(obj: OccAvailabilitySummary): object;
    function getDeserializedJsonObj(obj: OccAvailabilitySummary): object;
}
