/**
 * OCI Control Center Capacity Management API
 * OCI Control Center (OCC) Capacity Management enables you to manage capacity requests in realms where OCI Control Center Capacity Management is available. For more information, see [OCI Control Center](https://docs.oracle.com/iaas/Content/control-center/home.htm).
 * OpenAPI spec version: 20231107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details about the create request for the capacity request.
 *
 */
export interface CreateOccCapacityRequestDetails {
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    "compartmentId": string;
    /**
     * The OCID of the availability catalog against which capacity request is made.
     */
    "occAvailabilityCatalogId"?: string;
    /**
     * The name of the OCI service in consideration. For example, Compute, Exadata, and so on.
     */
    "namespace": model.Namespace;
    /**
     * The name of the region for which the capacity request is made.
     */
    "region": string;
    /**
     * An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    "displayName": string;
    /**
     * Type of Capacity Request(New or Transfer)
     */
    "requestType"?: string;
    /**
     * Meaningful text about the capacity request.
     */
    "description"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    "lifecycleDetails"?: string;
    /**
     * The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     */
    "availabilityDomain"?: string;
    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     */
    "dateExpectedCapacityHandover": Date;
    /**
     * The subset of request states available for creating the capacity request.
     */
    "requestState"?: CreateOccCapacityRequestDetails.RequestState;
    /**
     * A list of different resources requested by the user.
     */
    "details": Array<model.OccCapacityRequestBaseDetails>;
}
export declare namespace CreateOccCapacityRequestDetails {
    enum RequestState {
        Created = "CREATED",
        Submitted = "SUBMITTED"
    }
    function getJsonObj(obj: CreateOccCapacityRequestDetails): object;
    function getDeserializedJsonObj(obj: CreateOccCapacityRequestDetails): object;
}
