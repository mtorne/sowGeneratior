/**
 * OCI Control Center Capacity Management API
 * OCI Control Center (OCC) Capacity Management enables you to manage capacity requests in realms where OCI Control Center Capacity Management is available. For more information, see [OCI Control Center](https://docs.oracle.com/iaas/Content/control-center/home.htm).
 * OpenAPI spec version: 20231107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A summary model for the occm demand signal.
 *
 */
export interface OccmDemandSignalSummary {
    /**
     * The OCID of the demand signal.
     *
     */
    "id": string;
    /**
     * The OCID of the tenancy from which the request to create the demand signal was made.
     *
     */
    "compartmentId": string;
    /**
     * The display name of the demand signal.
     *
     */
    "displayName": string;
    /**
      * The different states associated with a demand signal.
  * <p>
  CREATED -> A demand signal is by default created in this state.
  * SUBMITTED -> Once you have reviewed the details of the demand signal, you can transition it to SUBMITTED state so that OCI can start working on it.
  * DELETED -> You can delete a demand signal as long as it is in either CREATED or SUBMITTED state.
  * IN_PROGRESS -> Once OCI starts working on a given demand signal. They transition it to IN_PROGRESS.
  * REJECTED -> OCI can transition the demand signal to this state if all the demand signal items of that demand signal are declined.
  * COMPLETED -> OCI will transition the demand signal to COMPLETED state once the quantities which OCI committed to deliver to you has been delivered.
  *
      */
    "lifecycleDetails": string;
    /**
     * A short description about the demand signal.
     *
     */
    "description"?: string;
    /**
     * The current lifecycle state of the demand signal.
     *
     */
    "lifecycleState": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * The time when the demand signal was created.
     *
     */
    "timeCreated": Date;
    /**
     * The time when the demand signal was last updated.
     *
     */
    "timeUpdated": Date;
}
export declare namespace OccmDemandSignalSummary {
    function getJsonObj(obj: OccmDemandSignalSummary): object;
    function getDeserializedJsonObj(obj: OccmDemandSignalSummary): object;
}
