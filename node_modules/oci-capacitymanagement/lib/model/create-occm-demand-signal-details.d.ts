/**
 * OCI Control Center Capacity Management API
 * OCI Control Center (OCC) Capacity Management enables you to manage capacity requests in realms where OCI Control Center Capacity Management is available. For more information, see [OCI Control Center](https://docs.oracle.com/iaas/Content/control-center/home.htm).
 * OpenAPI spec version: 20231107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Details about the different fields required for creating OCC Demand Signal.
 *
 */
export interface CreateOccmDemandSignalDetails {
    /**
     * The OCID of the tenancy where we would like to create a demand signal.
     *
     */
    "compartmentId": string;
    /**
     * The user-friendly name of the demand signal. Does not have to be unique. Avoid entering anything confidential.
     *
     */
    "displayName": string;
    /**
     * A short description of the demand signal.
     *
     */
    "description"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateOccmDemandSignalDetails {
    function getJsonObj(obj: CreateOccmDemandSignalDetails): object;
    function getDeserializedJsonObj(obj: CreateOccmDemandSignalDetails): object;
}
