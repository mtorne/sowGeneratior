/**
 * OCI Managed Services for Mac API
 * Use the OCI Managed Services for Mac API to create and manage orders for dedicated, partially-managed Mac servers hosted in an OCI Data Center. For more information, see the user guide documentation for the [OCI Managed Services for Mac]()
 * OpenAPI spec version: 20250320
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A description of a MacOrder resource.
 *
 */
export interface MacOrder {
    /**
     * The OCID of the resource.
     */
    "id": string;
    /**
     * OCID of the compartment to which the resource belongs to.
     */
    "compartmentId": string;
    /**
      * A user-friendly name. Does not have to be unique, and it's changeable.
  * Avoid entering confidential information.
  * <p>
  Example: {@code My new resource}
  *
      */
    "displayName"?: string;
    /**
     * A user-friendly description. To provide some insight about the resource.
     * Avoid entering confidential information.
     *
     */
    "orderDescription": string;
    /**
     * Number of macs requested in this MacOrder. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "orderSize": number;
    /**
     * The IP Range specified by the customer for this order.
     */
    "ipRange"?: string;
    /**
     * Checkbox value that indicates whether the customer completed docusign process.
     */
    "isDocusigned": boolean;
    /**
     * Enum indicating the requested shape for the MacDevices.
     */
    "shape": MacOrder.Shape;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    "timeCreated": Date;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * Enum indicating the agreed commitment term for the requested MacDevices.
     */
    "commitmentTerm": MacOrder.CommitmentTerm;
    /**
     * An RFC3339-formatted datetime string containing the date and time that billing for this MacOrder begins.
     */
    "timeBillingStarted"?: Date;
    /**
     * An RFC3339-formatted datetime string containing the date and time that billing for this MacOrder ends.
     */
    "timeBillingEnded"?: Date;
    /**
     * The current status of the MacOrder.
     */
    "orderStatus": MacOrder.OrderStatus;
    /**
     * The current state of the MacOrder.
     */
    "lifecycleState": MacOrder.LifecycleState;
    /**
     * A message that describes the current state of the MacOrder in more detail.
     *
     */
    "lifecycleDetails"?: string;
    /**
     * The reason for the MacOrder cancellation.
     */
    "cancelReason"?: string;
    /**
     * An RFC3339-formatted datetime string containing the time this MacOrder was cancelled.
     */
    "timeCanceled"?: Date;
}
export declare namespace MacOrder {
    enum Shape {
        M2ProMacMini32Gb1Tb = "M2_PRO_MAC_MINI_32GB_1TB",
        M2UltraMacStudio64Gb4Tb = "M2_ULTRA_MAC_STUDIO_64GB_4TB",
        M2UltraMacStudio192Gb4Tb = "M2_ULTRA_MAC_STUDIO_192GB_4TB",
        M4ProMacMini64Gb2Tb = "M4_PRO_MAC_MINI_64GB_2TB",
        M4ProMacMini64Gb4Tb = "M4_PRO_MAC_MINI_64GB_4TB",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum CommitmentTerm {
        Years3 = "YEARS_3",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum OrderStatus {
        Submitted = "SUBMITTED",
        PendingDocusign = "PENDING_DOCUSIGN",
        OrderReview = "ORDER_REVIEW",
        CustomerReview = "CUSTOMER_REVIEW",
        CustomerApproved = "CUSTOMER_APPROVED",
        FundingApproved = "FUNDING_APPROVED",
        Provisioning = "PROVISIONING",
        CustomerAccepted = "CUSTOMER_ACCEPTED",
        Completed = "COMPLETED",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        NeedsAttention = "NEEDS_ATTENTION",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: MacOrder): object;
    function getDeserializedJsonObj(obj: MacOrder): object;
}
