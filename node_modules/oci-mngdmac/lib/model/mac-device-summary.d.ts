/**
 * OCI Managed Services for Mac API
 * Use the OCI Managed Services for Mac API to create and manage orders for dedicated, partially-managed Mac servers hosted in an OCI Data Center. For more information, see the user guide documentation for the [OCI Managed Services for Mac]()
 * OpenAPI spec version: 20250320
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Summary information about a MacDevice.
 */
export interface MacDeviceSummary {
    /**
     * The unique ID of the MacDevice.
     */
    "id": string;
    /**
     * OCID of the compartment to which the resource belongs to.
     */
    "compartmentId": string;
    /**
     * The OCID of the resource.
     */
    "macOrderId": string;
    /**
     * The serial number of the MacDevice.
     */
    "serialNumber": string;
    /**
     * The IP address assigned to the MacDevice.
     */
    "ipAddress": string;
    /**
     * The shape of the MacDevice.
     */
    "shape": string;
    /**
     * The current status of the MacDevice.
     */
    "lifecycleState": string;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    "timeCreated": Date;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated": Date;
    /**
     * A flag that indicates if this MacDevice is decommissioned.
     */
    "isMarkedDecom": boolean;
    /**
     * An RFC3339-formatted datetime string containing the time this MacDevice was decommissioned.
     */
    "timeDecom": Date;
}
export declare namespace MacDeviceSummary {
    function getJsonObj(obj: MacDeviceSummary): object;
    function getDeserializedJsonObj(obj: MacDeviceSummary): object;
}
