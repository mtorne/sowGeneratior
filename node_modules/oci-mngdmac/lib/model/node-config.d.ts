/**
 * OCI Managed Services for Mac API
 * Use the OCI Managed Services for Mac API to create and manage orders for dedicated, partially-managed Mac servers hosted in an OCI Data Center. For more information, see the user guide documentation for the [OCI Managed Services for Mac]()
 * OpenAPI spec version: 20250320
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Represents a MacDevice resource.
 */
export interface NodeConfig {
    /**
     * The serial number of the MacDevice.
     */
    "serialNumber": string;
    /**
     * The macAddress.
     */
    "macAddress": string;
    /**
     * The switchHostname.
     */
    "switchHostname": string;
    /**
     * The switchEthPort.
     */
    "switchEthPort": string;
    /**
     * The ipKvmHostname.
     */
    "ipKvmHostname": string;
    /**
     * The ipKvmPortNumber. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "ipKvmPortNumber": number;
    /**
     * The pduHostname.
     */
    "pduHostname": string;
    /**
     * The pduPort. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "pduPort": number;
    /**
     * The buildVlanId. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "buildVlanId": number;
    /**
     * The buildIpAddress.
     */
    "buildIpAddress": string;
    /**
     * The prodVlanId. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "prodVlanId": number;
    /**
     * The prodIpAddress.
     */
    "prodIpAddress": string;
    /**
     * The rackLocation.
     */
    "rackLocation": string;
    /**
     * The chipSetn.
     */
    "chipSet": string;
    /**
     * The osVersion.
     */
    "osVersion": string;
    /**
     * The macOrderId.
     */
    "macOrderId": string;
    /**
     * The tenancyId.
     */
    "tenancyId": string;
}
export declare namespace NodeConfig {
    function getJsonObj(obj: NodeConfig): object;
    function getDeserializedJsonObj(obj: NodeConfig): object;
}
