"use strict";
/**
 * Oracle Database MultiCloud Data plane Integration
 * 1. Oracle Azure Connector Resource: This is for installing Azure Arc Server in ExaCS VM Cluster.
  There are two way to install Azure Arc Server (Azure Identity) in ExaCS VMCluster.
    a. Using Bearer Access Token or
    b. By providing Authentication token

2. Oracle Azure Blob Container Resource: This is for to capture Azure Container details
   and same will be used in multiple ExaCS VMCluster to mount the Azure Container.

3. Oracle Azure Blob Mount Resource: This is for to mount Azure Container in ExaCS VMCluster
   using Oracle Azure Connector and Oracle Azure Blob Container Resource.

 * OpenAPI spec version: 20240501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListWorkRequestsRequest = exports.ListWorkRequestLogsRequest = exports.ListWorkRequestErrorsRequest = exports.ListOracleDbAzureVaultAssociationsRequest = exports.ListOracleDbAzureVaultsRequest = exports.ListOracleDbAzureKeysRequest = exports.ListOracleDbAzureConnectorsRequest = exports.ListOracleDbAzureBlobMountsRequest = exports.ListOracleDbAzureBlobContainersRequest = exports.ListMultiCloudResourceDiscoveriesRequest = void 0;
const ListMultiCloudResourceDiscoveriesRequest = __importStar(require("./list-multi-cloud-resource-discoveries-request"));
exports.ListMultiCloudResourceDiscoveriesRequest = ListMultiCloudResourceDiscoveriesRequest.ListMultiCloudResourceDiscoveriesRequest;
const ListOracleDbAzureBlobContainersRequest = __importStar(require("./list-oracle-db-azure-blob-containers-request"));
exports.ListOracleDbAzureBlobContainersRequest = ListOracleDbAzureBlobContainersRequest.ListOracleDbAzureBlobContainersRequest;
const ListOracleDbAzureBlobMountsRequest = __importStar(require("./list-oracle-db-azure-blob-mounts-request"));
exports.ListOracleDbAzureBlobMountsRequest = ListOracleDbAzureBlobMountsRequest.ListOracleDbAzureBlobMountsRequest;
const ListOracleDbAzureConnectorsRequest = __importStar(require("./list-oracle-db-azure-connectors-request"));
exports.ListOracleDbAzureConnectorsRequest = ListOracleDbAzureConnectorsRequest.ListOracleDbAzureConnectorsRequest;
const ListOracleDbAzureKeysRequest = __importStar(require("./list-oracle-db-azure-keys-request"));
exports.ListOracleDbAzureKeysRequest = ListOracleDbAzureKeysRequest.ListOracleDbAzureKeysRequest;
const ListOracleDbAzureVaultsRequest = __importStar(require("./list-oracle-db-azure-vaults-request"));
exports.ListOracleDbAzureVaultsRequest = ListOracleDbAzureVaultsRequest.ListOracleDbAzureVaultsRequest;
const ListOracleDbAzureVaultAssociationsRequest = __importStar(require("./list-oracle-db-azure-vault-associations-request"));
exports.ListOracleDbAzureVaultAssociationsRequest = ListOracleDbAzureVaultAssociationsRequest.ListOracleDbAzureVaultAssociationsRequest;
const ListWorkRequestErrorsRequest = __importStar(require("./list-work-request-errors-request"));
exports.ListWorkRequestErrorsRequest = ListWorkRequestErrorsRequest.ListWorkRequestErrorsRequest;
const ListWorkRequestLogsRequest = __importStar(require("./list-work-request-logs-request"));
exports.ListWorkRequestLogsRequest = ListWorkRequestLogsRequest.ListWorkRequestLogsRequest;
const ListWorkRequestsRequest = __importStar(require("./list-work-requests-request"));
exports.ListWorkRequestsRequest = ListWorkRequestsRequest.ListWorkRequestsRequest;
//# sourceMappingURL=index.js.map