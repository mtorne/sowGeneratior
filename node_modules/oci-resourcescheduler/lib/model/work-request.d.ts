/**
 * Resource Scheduler API
 * Use the Resource scheduler API to manage schedules, to perform actions on a collection of resources.
 * OpenAPI spec version: 20240430
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * This is an asynchronous work request. Work requests help you monitor long-running operations. When you start a long-running operation,
 * the service creates a work request. A work request is an activity log that lets you track each step in the operation's
 * progress. Each work request has an OCID that lets you interact with it programmatically and use it for automation.
 *
 */
export interface WorkRequest {
    /**
     * The asynchronous operation tracked by this work request.
     */
    "operationType": model.OperationType;
    /**
     * This is the status of the work request.
     */
    "status": model.OperationStatus;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the work request.
     */
    "id": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the work request.
     *
     */
    "compartmentId": string;
    /**
     * This is the resources that are affected by the work request.
     */
    "resources": Array<model.WorkRequestResource>;
    /**
     * Shows the progress of the operation tracked by the work request, as a percentage of the total work
     * that must be performed.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete": number;
    /**
     * This is the date and time the work request was created, in the format defined by
     * [RFC 3339](https://tools.ietf.org/html/rfc3339).
     *
     */
    "timeAccepted": Date;
    /**
     * This is the date and time the work request was started, in the format defined by
     * [RFC 3339](https://tools.ietf.org/html/rfc3339).
     *
     */
    "timeStarted"?: Date;
    /**
     * This is the date and time the work request was finished, in the format defined by
     * [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeFinished"?: Date;
    /**
     * This is the date and time the work request was updated, in the format defined by
     * [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeUpdated"?: Date;
}
export declare namespace WorkRequest {
    function getJsonObj(obj: WorkRequest): object;
    function getDeserializedJsonObj(obj: WorkRequest): object;
}
