/**
 * Network Monitoring API
 * Use the Network Monitoring API to troubleshoot routing and security issues for resources such as virtual cloud networks (VCNs) and compute instances. For more information, see the console
documentation for the [Network Path Analyzer](https://docs.oracle.com/iaas/Content/Network/Concepts/path_analyzer.htm) tool.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A capture filter contains a set of *{@link #captureFilterRuleDetails(CaptureFilterRuleDetailsRequest) captureFilterRuleDetails}* governing what traffic a *{@link Vtap}* mirrors.
 * The capture filter is created with no rules defined, and it must have at least one rule for the VTAP to start mirroring traffic.
 *
 */
export interface CaptureFilter {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the capture filter.
     *
     */
    "compartmentId": string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * The capture filter's Oracle ID ([OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     *
     */
    "id": string;
    /**
     * The capture filter's current administrative state.
     */
    "lifecycleState": CaptureFilter.LifecycleState;
    /**
     * Indicates which service will use this capture filter
     */
    "filterType"?: CaptureFilter.FilterType;
    /**
      * The date and time the capture filter was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2021-08-25T21:10:29.600Z}
  *
      */
    "timeCreated"?: Date;
    /**
     * The set of rules governing what traffic a VTAP mirrors.
     *
     */
    "vtapCaptureFilterRules"?: Array<model.VtapCaptureFilterRuleDetails>;
    /**
     * The set of rules governing what traffic the Flow Log collects when creating a flow log capture filter.
     *
     */
    "flowLogCaptureFilterRules"?: Array<model.FlowLogCaptureFilterRuleDetails>;
}
export declare namespace CaptureFilter {
    enum LifecycleState {
        Provisioning = "PROVISIONING",
        Available = "AVAILABLE",
        Updating = "UPDATING",
        Terminating = "TERMINATING",
        Terminated = "TERMINATED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum FilterType {
        Vtap = "VTAP",
        Flowlog = "FLOWLOG",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: CaptureFilter): object;
    function getDeserializedJsonObj(obj: CaptureFilter): object;
}
