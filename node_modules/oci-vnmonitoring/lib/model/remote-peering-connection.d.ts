/**
 * Network Monitoring API
 * Use the Network Monitoring API to troubleshoot routing and security issues for resources such as virtual cloud networks (VCNs) and compute instances. For more information, see the console
documentation for the [Network Path Analyzer](https://docs.oracle.com/iaas/Content/Network/Concepts/path_analyzer.htm) tool.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* A remote peering connection (RPC) is an object on a DRG that lets the VCN that is attached
* to the DRG peer with a VCN in a different region. *Peering* means that the two VCNs can
* communicate using private IP addresses, but without the traffic traversing the internet or
* routing through your on-premises network. For more information, see
* [VCN Peering](https://docs.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
* talk to an administrator. If you're an administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
*
*/
export interface RemotePeeringConnection {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the RPC.
     */
    "compartmentId": string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG that this RPC belongs to.
     */
    "drgId": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the RPC.
     */
    "id": string;
    /**
      * Whether the VCN at the other end of the peering is in a different tenancy.
  * <p>
  Example: {@code false}
  *
      */
    "isCrossTenancyPeering": boolean;
    /**
     * The RPC's current lifecycle state.
     */
    "lifecycleState": RemotePeeringConnection.LifecycleState;
    /**
     * If this RPC is peered, this value is the [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC.
     *
     */
    "peerId"?: string;
    /**
      * If this RPC is peered, this value is the region that contains the other RPC.
  * <p>
  Example: {@code us-ashburn-1}
  *
      */
    "peerRegionName"?: string;
    /**
     * If this RPC is peered, this value is the [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
     *
     */
    "peerTenancyId"?: string;
    /**
     * Whether the RPC is peered with another RPC. {@code NEW} means the RPC has not yet been
     * peered. {@code PENDING} means the peering is being established. {@code REVOKED} means the
     * RPC at the other end of the peering has been deleted.
     *
     */
    "peeringStatus": RemotePeeringConnection.PeeringStatus;
    /**
      * The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
}
export declare namespace RemotePeeringConnection {
    enum LifecycleState {
        Available = "AVAILABLE",
        Provisioning = "PROVISIONING",
        Terminating = "TERMINATING",
        Terminated = "TERMINATED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum PeeringStatus {
        Invalid = "INVALID",
        New = "NEW",
        Pending = "PENDING",
        Peered = "PEERED",
        Revoked = "REVOKED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: RemotePeeringConnection): object;
    function getDeserializedJsonObj(obj: RemotePeeringConnection): object;
}
