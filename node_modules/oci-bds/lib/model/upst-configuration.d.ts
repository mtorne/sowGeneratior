/**
 * Big Data Service API
 * REST API for Oracle Big Data Service. Use this API to build, deploy, and manage fully elastic Big Data Service clusters. Build on Hadoop, Spark and Data Science distributions, which can be fully integrated with existing enterprise data in Oracle Database and Oracle applications.

 * OpenAPI spec version: 20190531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Information about the UPST configuration.
 */
export interface UpstConfiguration {
    /**
     * The instance OCID of the node, which is the resource from which the node backup was acquired.
     */
    "vaultId": string;
    /**
     * Master Encryption key used for encrypting token exchange keytab.
     */
    "masterEncryptionKeyId": string;
    /**
     * Secret ID for token exchange keytab
     */
    "secretId": string;
    /**
     * Time when the keytab for token exchange principal is last refreshed, shown as an RFC 3339 formatted datetime string.
     */
    "timeTokenExchangeKeytabLastRefreshed": Date;
    /**
     * Token exchange kerberos Principal name in cluster
     */
    "tokenExchangePrincipalName"?: string;
    /**
     * Lifecycle state of the UPST config
     */
    "lifecycleState": UpstConfiguration.LifecycleState;
    /**
     * Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
     */
    "timeCreated": Date;
    /**
     * Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
     */
    "timeUpdated": Date;
    /**
     * The kerberos keytab content used for creating identity propagation trust config, in base64 format
     */
    "keytabContent": string;
}
export declare namespace UpstConfiguration {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Inactive = "INACTIVE",
        Updating = "UPDATING",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: UpstConfiguration): object;
    function getDeserializedJsonObj(obj: UpstConfiguration): object;
}
