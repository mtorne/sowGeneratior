/**
 * Big Data Service API
 * REST API for Oracle Big Data Service. Use this API to build, deploy, and manage fully elastic Big Data Service clusters. Build on Hadoop, Spark and Data Science distributions, which can be fully integrated with existing enterprise data in Oracle Database and Oracle applications.

 * OpenAPI spec version: 20190531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The information about the Node's backup.
 */
export interface NodeBackup {
    /**
     * The id of the node backup.
     */
    "id": string;
    /**
     * BDS generated name for the backup. Format is nodeHostName_timeCreated
     */
    "displayName": string;
    /**
     * The instance OCID of the node, which is the resource from which the node backup was acquired.
     */
    "nodeInstanceId": string;
    /**
     * Host name of the node to which this backup belongs.
     */
    "nodeHostName": string;
    /**
     * type based on how backup action was initiated.
     */
    "backupTriggerType": NodeBackup.BackupTriggerType;
    /**
     * The ID of the nodeBackupConfiguration if the NodeBackup is automatically created by applying the configuration.
     */
    "nodeBackupConfigId"?: string;
    /**
     * Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    "backupType": NodeBackup.BackupType;
    /**
     * The state of the NodeBackup.
     */
    "lifecycleState": NodeBackup.LifecycleState;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    "timeCreated": Date;
}
export declare namespace NodeBackup {
    enum BackupTriggerType {
        Manual = "MANUAL",
        Scheduled = "SCHEDULED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum BackupType {
        Full = "FULL",
        Incremental = "INCREMENTAL",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Updating = "UPDATING",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        Partial = "PARTIAL",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: NodeBackup): object;
    function getDeserializedJsonObj(obj: NodeBackup): object;
}
