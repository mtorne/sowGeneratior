/**
 * Big Data Service API
 * REST API for Oracle Big Data Service. Use this API to build, deploy, and manage fully elastic Big Data Service clusters. Build on Hadoop, Spark and Data Science distributions, which can be fully integrated with existing enterprise data in Oracle Database and Oracle applications.

 * OpenAPI spec version: 20190531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about to-be-updated Big Data Service cluster.
 */
export interface UpdateBdsInstanceDetails {
    /**
     * Name of the cluster.
     */
    "displayName"?: string;
    /**
     * Pre-authenticated URL of the bootstrap script in Object Store that can be downloaded and executed..
     */
    "bootstrapScriptUrl"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope.
     * Exists for cross-compatibility only. For example, {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For example, {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * The OCID of the Key Management master encryption key.
     */
    "kmsKeyId"?: string;
    "networkConfig"?: model.NetworkConfig;
}
export declare namespace UpdateBdsInstanceDetails {
    function getJsonObj(obj: UpdateBdsInstanceDetails): object;
    function getDeserializedJsonObj(obj: UpdateBdsInstanceDetails): object;
}
