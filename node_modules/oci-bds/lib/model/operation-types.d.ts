/**
 * Big Data Service API
 * REST API for Oracle Big Data Service. Use this API to build, deploy, and manage fully elastic Big Data Service clusters. Build on Hadoop, Spark and Data Science distributions, which can be fully integrated with existing enterprise data in Oracle Database and Oracle applications.

 * OpenAPI spec version: 20190531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Possible operation types.
 **/
export declare enum OperationTypes {
    CreateBds = "CREATE_BDS",
    UpdateBds = "UPDATE_BDS",
    DeleteBds = "DELETE_BDS",
    AddBlockStorage = "ADD_BLOCK_STORAGE",
    AddMasterNodes = "ADD_MASTER_NODES",
    AddUtilityNodes = "ADD_UTILITY_NODES",
    AddWorkerNodes = "ADD_WORKER_NODES",
    AddCloudSql = "ADD_CLOUD_SQL",
    RemoveCloudSql = "REMOVE_CLOUD_SQL",
    ChangeCompartmentForBds = "CHANGE_COMPARTMENT_FOR_BDS",
    ChangeShape = "CHANGE_SHAPE",
    UpdateInfra = "UPDATE_INFRA",
    RestartNode = "RESTART_NODE",
    RemoveNode = "REMOVE_NODE",
    CreateAutoscaleConfig = "CREATE_AUTOSCALE_CONFIG",
    UpdateAutoscaleConfig = "UPDATE_AUTOSCALE_CONFIG",
    DeleteAutoscaleConfig = "DELETE_AUTOSCALE_CONFIG",
    AutoscaleConfig = "AUTOSCALE_CONFIG",
    AutoscaleRun = "AUTOSCALE_RUN",
    CreateApiKey = "CREATE_API_KEY",
    DeleteApiKey = "DELETE_API_KEY",
    TestObjectStoreConnection = "TEST_OBJECT_STORE_CONNECTION",
    CreateMetastoreConfig = "CREATE_METASTORE_CONFIG",
    DeleteMetastoreConfig = "DELETE_METASTORE_CONFIG",
    UpdateMetastoreConfig = "UPDATE_METASTORE_CONFIG",
    ActivateMetastoreConfig = "ACTIVATE_METASTORE_CONFIG",
    TestMetastoreConfig = "TEST_METASTORE_CONFIG",
    PatchBds = "PATCH_BDS",
    PatchOdh = "PATCH_ODH",
    PatchOs = "PATCH_OS",
    StopBds = "STOP_BDS",
    StartBds = "START_BDS",
    AddKafka = "ADD_KAFKA",
    RemoveKafka = "REMOVE_KAFKA",
    ExecuteBootstrapScript = "EXECUTE_BOOTSTRAP_SCRIPT",
    OdhServiceCertificateUpdate = "ODH_SERVICE_CERTIFICATE_UPDATE",
    CreateBackupConfig = "CREATE_BACKUP_CONFIG",
    UpdateBackupConfig = "UPDATE_BACKUP_CONFIG",
    DeleteBackupConfig = "DELETE_BACKUP_CONFIG",
    CreateNodeReplaceConfig = "CREATE_NODE_REPLACE_CONFIG",
    UpdateNodeReplaceConfig = "UPDATE_NODE_REPLACE_CONFIG",
    DeleteNodeReplaceConfig = "DELETE_NODE_REPLACE_CONFIG",
    BackupNodes = "BACKUP_NODES",
    DeleteNodeBackup = "DELETE_NODE_BACKUP",
    ReplaceNode = "REPLACE_NODE",
    CreateResourcePrincipalConfiguration = "CREATE_RESOURCE_PRINCIPAL_CONFIGURATION",
    DeleteResourcePrincipalConfiguration = "DELETE_RESOURCE_PRINCIPAL_CONFIGURATION",
    UpdateResourcePrincipalConfiguration = "UPDATE_RESOURCE_PRINCIPAL_CONFIGURATION",
    RefreshResourcePrincipal = "REFRESH_RESOURCE_PRINCIPAL",
    CreateIdentityConfig = "CREATE_IDENTITY_CONFIG",
    DeleteIdentityConfig = "DELETE_IDENTITY_CONFIG",
    UpdateIdentityConfig = "UPDATE_IDENTITY_CONFIG",
    ActivateUpstConfig = "ACTIVATE_UPST_CONFIG",
    DeactivateUpstConfig = "DEACTIVATE_UPST_CONFIG",
    RefreshConfidentialApplication = "REFRESH_CONFIDENTIAL_APPLICATION",
    RefreshTokenExchangeKeytab = "REFRESH_TOKEN_EXCHANGE_KEYTAB",
    ActivateIamUserSyncConfig = "ACTIVATE_IAM_USER_SYNC_CONFIG",
    DeactivateIamUserSyncConfig = "DEACTIVATE_IAM_USER_SYNC_CONFIG",
    InstallSoftwareUpdates = "INSTALL_SOFTWARE_UPDATES",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
}
export declare namespace OperationTypes {
    function getJsonObj(obj: OperationTypes): OperationTypes;
    function getDeserializedJsonObj(obj: OperationTypes): OperationTypes;
}
