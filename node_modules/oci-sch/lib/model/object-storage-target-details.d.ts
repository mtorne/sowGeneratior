/**
 * Connector Hub API
 * Use the Connector Hub API to transfer data between services in Oracle Cloud Infrastructure.
For more information about Connector Hub, see
[the Connector Hub documentation](https://docs.oracle.com/iaas/Content/connector-hub/home.htm).
Connector Hub is formerly known as Service Connector Hub.

 * OpenAPI spec version: 20200909
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The destination bucket for data transferred from the source.
 * For configuration instructions, see
 * [Creating a Connector](https://docs.oracle.com/iaas/Content/connector-hub/create-service-connector.htm).
 *
 */
export interface ObjectStorageTargetDetails extends model.TargetDetails {
    /**
     * The namespace.
     *
     */
    "namespace"?: string;
    /**
     * The name of the bucket. Valid characters are letters (upper or lower case), numbers, hyphens (-),
     * underscores(_), and periods (.). Bucket names must be unique within an Object Storage namespace.
     * Avoid entering confidential information. Example: my-new-bucket1
     *
     */
    "bucketName": string;
    /**
     * The prefix of the objects. Avoid entering confidential information.
     *
     */
    "objectNamePrefix"?: string;
    /**
     * The batch rollover size in megabytes.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "batchRolloverSizeInMBs"?: number;
    /**
     * The batch rollover time in milliseconds.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "batchRolloverTimeInMs"?: number;
    "kind": string;
}
export declare namespace ObjectStorageTargetDetails {
    function getJsonObj(obj: ObjectStorageTargetDetails, isParentJsonObj?: boolean): object;
    const kind = "objectStorage";
    function getDeserializedJsonObj(obj: ObjectStorageTargetDetails, isParentJsonObj?: boolean): object;
}
