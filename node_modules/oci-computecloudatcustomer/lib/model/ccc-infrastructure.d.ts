/**
 * Compute Cloud@Customer API
 * Use the Compute Cloud@Customer API to manage Compute Cloud@Customer infrastructures and upgrade schedules.
For more information see [Compute Cloud@Customer documentation](https://docs.oracle.com/iaas/compute-cloud-at-customer/home.htm).

 * OpenAPI spec version: 20221208
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The Oracle Cloud Infrastructure resource representing the connection to the hardware and
 * software located in a customer's data center running the Compute Cloud@Customer IaaS services.
 *
 */
export interface CccInfrastructure {
    /**
     * The Compute Cloud@Customer infrastructure [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * This cannot be changed once created.
     *
     */
    "id": string;
    /**
     * The Compute Cloud@Customer infrastructure short name.
     * This cannot be changed once created. The
     * short name is used to refer to the infrastructure in several contexts and is unique.
     *
     */
    "shortName"?: string;
    /**
     * The name that will be used to display the Compute Cloud@Customer infrastructure
     * in the Oracle Cloud Infrastructure console. Does not have to be unique and can be changed.
     * Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * A mutable client-meaningful text description of the Compute Cloud@Customer infrastructure.
     * Avoid entering confidential information.
     *
     */
    "description"?: string;
    /**
     * The infrastructure compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    "compartmentId": string;
    /**
     * [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network subnet that is
     * used to communicate with Compute Cloud@Customer infrastructure.
     *
     */
    "subnetId": string;
    /**
     * The current connection state of the infrastructure. A user can only update
     * it from REQUEST to READY or from any state back to REJECT. The system automatically
     * handles the REJECT to REQUEST, READY to CONNECTED, or CONNECTED to DISCONNECTED transitions.
     *
     */
    "connectionState"?: CccInfrastructure.ConnectionState;
    /**
     * A message describing the current connection state in more detail.
     *
     */
    "connectionDetails"?: string;
    /**
     * Schedule used for upgrades. If no schedule is associated with the infrastructure,
     * it can be updated at any time.
     *
     */
    "cccUpgradeScheduleId"?: string;
    /**
     * Fingerprint of a Compute Cloud@Customer infrastructure in a data center generated
     * during the initial connection to this resource. The fingerprint should be verified
     * by the administrator when changing the connectionState from REQUEST to READY.
     *
     */
    "provisioningFingerprint"?: string;
    /**
     * Code that is required for service personnel to connect a
     * Compute Cloud@Customer infrastructure in a data center to this resource.
     * This code will only be available when the connectionState is REJECT (usually
     * at create time of the Compute Cloud@Customer infrastructure).
     *
     */
    "provisioningPin"?: string;
    /**
     * Compute Cloud@Customer infrastructure creation date and time, using an RFC3339 formatted
     * datetime string.
     *
     */
    "timeCreated": Date;
    /**
     * Compute Cloud@Customer infrastructure updated date and time, using an RFC3339 formatted
     * datetime string.
     *
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the Compute Cloud@Customer infrastructure.
     */
    "lifecycleState": CccInfrastructure.LifecycleState;
    /**
     * A message describing the current lifecycle state in more detail.
     * For example, this can be used to provide actionable information for a resource that is in
     * a Failed state.
     *
     */
    "lifecycleDetails"?: string;
    "infrastructureInventory"?: model.CccInfrastructureInventory;
    "infrastructureNetworkConfiguration"?: model.CccInfrastructureNetworkConfiguration;
    "upgradeInformation"?: model.CccUpgradeInformation;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CccInfrastructure {
    enum ConnectionState {
        Reject = "REJECT",
        Request = "REQUEST",
        Ready = "READY",
        Connected = "CONNECTED",
        Disconnected = "DISCONNECTED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Active = "ACTIVE",
        NeedsAttention = "NEEDS_ATTENTION",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: CccInfrastructure): object;
    function getDeserializedJsonObj(obj: CccInfrastructure): object;
}
