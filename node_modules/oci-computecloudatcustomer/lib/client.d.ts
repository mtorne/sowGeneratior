/**
 * Compute Cloud@Customer API
 * Use the Compute Cloud@Customer API to manage Compute Cloud@Customer infrastructures and upgrade schedules.
For more information see [Compute Cloud@Customer documentation](https://docs.oracle.com/iaas/compute-cloud-at-customer/home.htm).

 * OpenAPI spec version: 20221208
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { ComputeCloudAtCustomerWaiter } from "./computecloudatcustomer-waiter";
declare const Breaker: any;
export declare enum ComputeCloudAtCustomerApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ComputeCloudAtCustomerClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ComputeCloudAtCustomerWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ComputeCloudAtCustomerWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ComputeCloudAtCustomerWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ComputeCloudAtCustomerWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves a Compute Cloud@Customer infrastructure resource from one compartment to another.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeCccInfrastructureCompartmentRequest
     * @return ChangeCccInfrastructureCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/ChangeCccInfrastructureCompartment.ts.html |here} to see how to use ChangeCccInfrastructureCompartment API.
     */
    changeCccInfrastructureCompartment(changeCccInfrastructureCompartmentRequest: requests.ChangeCccInfrastructureCompartmentRequest): Promise<responses.ChangeCccInfrastructureCompartmentResponse>;
    /**
     * Moves a Compute Cloud@Customer upgrade schedule from one compartment to another using the
     * specified [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeCccUpgradeScheduleCompartmentRequest
     * @return ChangeCccUpgradeScheduleCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/ChangeCccUpgradeScheduleCompartment.ts.html |here} to see how to use ChangeCccUpgradeScheduleCompartment API.
     */
    changeCccUpgradeScheduleCompartment(changeCccUpgradeScheduleCompartmentRequest: requests.ChangeCccUpgradeScheduleCompartmentRequest): Promise<responses.ChangeCccUpgradeScheduleCompartmentResponse>;
    /**
     * Creates a Compute Cloud@Customer infrastructure. Once created, Oracle Services
     * must connect the rack in the data center to this Oracle Cloud Infrastructure resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateCccInfrastructureRequest
     * @return CreateCccInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/CreateCccInfrastructure.ts.html |here} to see how to use CreateCccInfrastructure API.
     */
    createCccInfrastructure(createCccInfrastructureRequest: requests.CreateCccInfrastructureRequest): Promise<responses.CreateCccInfrastructureResponse>;
    /**
     * Creates a new Compute Cloud@Customer upgrade schedule.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateCccUpgradeScheduleRequest
     * @return CreateCccUpgradeScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/CreateCccUpgradeSchedule.ts.html |here} to see how to use CreateCccUpgradeSchedule API.
     */
    createCccUpgradeSchedule(createCccUpgradeScheduleRequest: requests.CreateCccUpgradeScheduleRequest): Promise<responses.CreateCccUpgradeScheduleResponse>;
    /**
     * Deletes a Compute Cloud@Customer infrastructure resource specified by the resource
     * [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCccInfrastructureRequest
     * @return DeleteCccInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/DeleteCccInfrastructure.ts.html |here} to see how to use DeleteCccInfrastructure API.
     */
    deleteCccInfrastructure(deleteCccInfrastructureRequest: requests.DeleteCccInfrastructureRequest): Promise<responses.DeleteCccInfrastructureResponse>;
    /**
     * Deletes a Compute Cloud@Customer upgrade schedule by the specified
     * [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCccUpgradeScheduleRequest
     * @return DeleteCccUpgradeScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/DeleteCccUpgradeSchedule.ts.html |here} to see how to use DeleteCccUpgradeSchedule API.
     */
    deleteCccUpgradeSchedule(deleteCccUpgradeScheduleRequest: requests.DeleteCccUpgradeScheduleRequest): Promise<responses.DeleteCccUpgradeScheduleResponse>;
    /**
     * Gets a Compute Cloud@Customer infrastructure using the infrastructure
     * [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCccInfrastructureRequest
     * @return GetCccInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/GetCccInfrastructure.ts.html |here} to see how to use GetCccInfrastructure API.
     */
    getCccInfrastructure(getCccInfrastructureRequest: requests.GetCccInfrastructureRequest): Promise<responses.GetCccInfrastructureResponse>;
    /**
     * Gets a Compute Cloud@Customer upgrade schedule by the specified
     * [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCccUpgradeScheduleRequest
     * @return GetCccUpgradeScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/GetCccUpgradeSchedule.ts.html |here} to see how to use GetCccUpgradeSchedule API.
     */
    getCccUpgradeSchedule(getCccUpgradeScheduleRequest: requests.GetCccUpgradeScheduleRequest): Promise<responses.GetCccUpgradeScheduleResponse>;
    /**
     * Returns a list of Compute Cloud@Customer infrastructures.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCccInfrastructuresRequest
     * @return ListCccInfrastructuresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/ListCccInfrastructures.ts.html |here} to see how to use ListCccInfrastructures API.
     */
    listCccInfrastructures(listCccInfrastructuresRequest: requests.ListCccInfrastructuresRequest): Promise<responses.ListCccInfrastructuresResponse>;
    /**
     * Returns a list of Compute Cloud@Customer upgrade schedules.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCccUpgradeSchedulesRequest
     * @return ListCccUpgradeSchedulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/ListCccUpgradeSchedules.ts.html |here} to see how to use ListCccUpgradeSchedules API.
     */
    listCccUpgradeSchedules(listCccUpgradeSchedulesRequest: requests.ListCccUpgradeSchedulesRequest): Promise<responses.ListCccUpgradeSchedulesResponse>;
    /**
     * Updates Compute Cloud@Customer infrastructure resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCccInfrastructureRequest
     * @return UpdateCccInfrastructureResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/UpdateCccInfrastructure.ts.html |here} to see how to use UpdateCccInfrastructure API.
     */
    updateCccInfrastructure(updateCccInfrastructureRequest: requests.UpdateCccInfrastructureRequest): Promise<responses.UpdateCccInfrastructureResponse>;
    /**
     * Updates the Compute Cloud@Customer upgrade schedule.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCccUpgradeScheduleRequest
     * @return UpdateCccUpgradeScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/computecloudatcustomer/UpdateCccUpgradeSchedule.ts.html |here} to see how to use UpdateCccUpgradeSchedule API.
     */
    updateCccUpgradeSchedule(updateCccUpgradeScheduleRequest: requests.UpdateCccUpgradeScheduleRequest): Promise<responses.UpdateCccUpgradeScheduleResponse>;
}
export {};
