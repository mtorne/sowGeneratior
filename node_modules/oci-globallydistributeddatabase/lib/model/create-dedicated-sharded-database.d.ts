/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage distributed databases.
 * OpenAPI spec version: 20230301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Request details for creation of ATP-Dedicated based sharded database.
 */
export interface CreateDedicatedShardedDatabase extends model.CreateShardedDatabaseDetails {
    /**
     * The Replication method for sharded database.
     */
    "replicationMethod"?: string;
    /**
     * The Replication factor for RAFT replication based sharded database. Currently supported values are 3, 5 and 7.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "replicationFactor"?: number;
    /**
     * For RAFT replication based sharded database, the value should be atleast twice the number of shards. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "replicationUnit"?: number;
    /**
     * The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production.
     * All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for
     * clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
     *
     */
    "clusterCertificateCommonName"?: string;
    /**
     * The default number of unique chunks in a shardspace. The value of chunks must be
     * greater than 2 times the size of the largest shardgroup in any shardspace.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "chunks"?: number;
    /**
     * Possible workload types.
     */
    "dbWorkload": CreateDedicatedShardedDatabase.DbWorkload;
    /**
     * Sharding Method.
     */
    "shardingMethod": CreateDedicatedShardedDatabase.ShardingMethod;
    /**
     * Oracle Database version of the Autonomous Container Database.
     */
    "dbVersion": string;
    /**
     * The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to
     * get the list of allowed character set for autonomous dedicated database. See documentation:
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     *
     */
    "characterSet": string;
    /**
     * The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to
     * get the list of allowed national character set for autonomous dedicated database. See documentation:
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     *
     */
    "ncharacterSet": string;
    /**
     * The listener port number for sharded database. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "listenerPort": number;
    /**
     * The TLS listener port number for sharded database. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "listenerPortTls": number;
    /**
     * Ons port local for sharded database. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "onsPortLocal": number;
    /**
     * Ons remote port for sharded database. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "onsPortRemote": number;
    /**
     * Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character
     * has to be a letter followed by any combination of letter and number.
     *
     */
    "prefix": string;
    /**
     * Collection of ATP-Dedicated shards that needs to be created.
     */
    "shardDetails": Array<model.CreateDedicatedShardDetail>;
    /**
     * Collection of ATP-Dedicated catalogs that needs to be created.
     */
    "catalogDetails": Array<model.CreateDedicatedCatalogDetail>;
    "dbDeploymentType": string;
}
export declare namespace CreateDedicatedShardedDatabase {
    enum DbWorkload {
        Oltp = "OLTP",
        Dw = "DW"
    }
    enum ShardingMethod {
        User = "USER",
        System = "SYSTEM"
    }
    function getJsonObj(obj: CreateDedicatedShardedDatabase, isParentJsonObj?: boolean): object;
    const dbDeploymentType = "DEDICATED";
    function getDeserializedJsonObj(obj: CreateDedicatedShardedDatabase, isParentJsonObj?: boolean): object;
}
