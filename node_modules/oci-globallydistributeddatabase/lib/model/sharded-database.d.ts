/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage distributed databases.
 * OpenAPI spec version: 20230301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Sharded Database resource.
 */
export interface ShardedDatabase {
    /**
     * Sharded Database identifier
     */
    "id": string;
    /**
     * Identifier of the compartment in which sharded database exists.
     */
    "compartmentId": string;
    /**
     * Oracle sharded database display name.
     */
    "displayName": string;
    /**
     * The time the the Sharded Database was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the Sharded Database was last updated. An RFC3339 formatted datetime string
     */
    "timeUpdated": Date;
    /**
     * Lifecycle states for sharded databases.
     */
    "lifecycleState": ShardedDatabase.LifecycleState;
    /**
     * Detailed message for the lifecycle state.
     */
    "lifecycleStateDetails": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    "dbDeploymentType": string;
}
export declare namespace ShardedDatabase {
    enum LifecycleState {
        Active = "ACTIVE",
        Failed = "FAILED",
        NeedsAttention = "NEEDS_ATTENTION",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Updating = "UPDATING",
        Creating = "CREATING",
        Unavailable = "UNAVAILABLE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ShardedDatabase): object;
    function getDeserializedJsonObj(obj: ShardedDatabase): object;
}
