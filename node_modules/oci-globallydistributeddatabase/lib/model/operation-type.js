"use strict";
/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage distributed databases.
 * OpenAPI spec version: 20230301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationType = void 0;
/**
 * Possible operation types.
 **/
var OperationType;
(function (OperationType) {
    OperationType["CreateShardedDatabase"] = "CREATE_SHARDED_DATABASE";
    OperationType["DeleteShardedDatabase"] = "DELETE_SHARDED_DATABASE";
    OperationType["UpdateShardedDatabase"] = "UPDATE_SHARDED_DATABASE";
    OperationType["ConfigureShardedDatabaseGsms"] = "CONFIGURE_SHARDED_DATABASE_GSMS";
    OperationType["StartShardedDatabase"] = "START_SHARDED_DATABASE";
    OperationType["StopShardedDatabase"] = "STOP_SHARDED_DATABASE";
    OperationType["ValidateNetwork"] = "VALIDATE_NETWORK";
    OperationType["ChangeShardedDbCompartment"] = "CHANGE_SHARDED_DB_COMPARTMENT";
    OperationType["CreatePrivateEndpoint"] = "CREATE_PRIVATE_ENDPOINT";
    OperationType["UpdatePrivateEndpoint"] = "UPDATE_PRIVATE_ENDPOINT";
    OperationType["DeletePrivateEndpoint"] = "DELETE_PRIVATE_ENDPOINT";
    OperationType["ChangePrivateEndpointCompartment"] = "CHANGE_PRIVATE_ENDPOINT_COMPARTMENT";
    OperationType["InsertShards"] = "INSERT_SHARDS";
    OperationType["RemoveShards"] = "REMOVE_SHARDS";
    OperationType["MergeCatalogShards"] = "MERGE_CATALOG_SHARDS";
    OperationType["UploadSignedCertAndGenerateWallet"] = "UPLOAD_SIGNED_CERT_AND_GENERATE_WALLET";
    OperationType["GenerateGsmCertSigningReq"] = "GENERATE_GSM_CERT_SIGNING_REQ";
    OperationType["ConfigureSharding"] = "CONFIGURE_SHARDING";
    OperationType["ExecuteValidateNetworkTests"] = "EXECUTE_VALIDATE_NETWORK_TESTS";
    OperationType["UpdateShard"] = "UPDATE_SHARD";
    OperationType["PrivateDeleteSdb"] = "PRIVATE_DELETE_SDB";
    OperationType["ProcessShardedDatabase"] = "PROCESS_SHARDED_DATABASE";
    OperationType["CreateCatalogs"] = "CREATE_CATALOGS";
    OperationType["CreateShards"] = "CREATE_SHARDS";
    OperationType["CreateGsmNodes"] = "CREATE_GSM_NODES";
    OperationType["AddGsmNodes"] = "ADD_GSM_NODES";
    OperationType["PrivateDeleteAtpdCatalog"] = "PRIVATE_DELETE_ATPD_CATALOG";
    OperationType["PrivateDeleteAtpdShard"] = "PRIVATE_DELETE_ATPD_SHARD";
    OperationType["PrivateDeleteGsm"] = "PRIVATE_DELETE_GSM";
    OperationType["ReinstateProxyInstance"] = "REINSTATE_PROXY_INSTANCE";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
(function (OperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationType = exports.OperationType || (exports.OperationType = {}));
//# sourceMappingURL=operation-type.js.map