"use strict";
/**
 * Marketplace Service API
 * Use the Marketplace API to manage applications in Oracle Cloud Infrastructure Marketplace. For more information, see [Overview of Marketplace](https://docs.oracle.com/iaas/Content/Marketplace/Concepts/marketoverview.htm)
 * OpenAPI spec version: 20181001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThirdPartyPaidListingEligibility = void 0;
var ThirdPartyPaidListingEligibility;
(function (ThirdPartyPaidListingEligibility) {
    let EligibilityReason;
    (function (EligibilityReason) {
        EligibilityReason["Eligible"] = "ELIGIBLE";
        EligibilityReason["IneligibleAccountCountry"] = "INELIGIBLE_ACCOUNT_COUNTRY";
        EligibilityReason["IneligibleRegion"] = "INELIGIBLE_REGION";
        EligibilityReason["IneligibleAccountBlacklisted"] = "INELIGIBLE_ACCOUNT_BLACKLISTED";
        EligibilityReason["IneligibleAccountFeatureDisabled"] = "INELIGIBLE_ACCOUNT_FEATURE_DISABLED";
        EligibilityReason["IneligibleAccountCurrency"] = "INELIGIBLE_ACCOUNT_CURRENCY";
        EligibilityReason["IneligibleAccountNotPaid"] = "INELIGIBLE_ACCOUNT_NOT_PAID";
        EligibilityReason["IneligibleAccountInternal"] = "INELIGIBLE_ACCOUNT_INTERNAL";
        EligibilityReason["IneligibleAccountGovSubscription"] = "INELIGIBLE_ACCOUNT_GOV_SUBSCRIPTION";
        EligibilityReason["NotAuthorized"] = "NOT_AUTHORIZED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        EligibilityReason["UnknownValue"] = "UNKNOWN_VALUE";
    })(EligibilityReason = ThirdPartyPaidListingEligibility.EligibilityReason || (ThirdPartyPaidListingEligibility.EligibilityReason = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ThirdPartyPaidListingEligibility.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ThirdPartyPaidListingEligibility.getDeserializedJsonObj = getDeserializedJsonObj;
})(ThirdPartyPaidListingEligibility = exports.ThirdPartyPaidListingEligibility || (exports.ThirdPartyPaidListingEligibility = {}));
//# sourceMappingURL=third-party-paid-listing-eligibility.js.map