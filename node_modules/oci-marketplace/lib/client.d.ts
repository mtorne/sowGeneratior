/**
 * Marketplace Service API
 * Use the Marketplace API to manage applications in Oracle Cloud Infrastructure Marketplace. For more information, see [Overview of Marketplace](https://docs.oracle.com/iaas/Content/Marketplace/Concepts/marketoverview.htm)
 * OpenAPI spec version: 20181001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { MarketplaceWaiter } from "./marketplace-waiter";
declare const Breaker: any;
export declare enum AccountApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class AccountClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Returns Tenant eligibility and other information for launching a PIC image
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetLaunchEligibilityRequest
     * @return GetLaunchEligibilityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetLaunchEligibility.ts.html |here} to see how to use GetLaunchEligibility API.
     */
    getLaunchEligibility(getLaunchEligibilityRequest: requests.GetLaunchEligibilityRequest): Promise<responses.GetLaunchEligibilityResponse>;
    /**
     * Returns eligibility details of the tenancy to see and launch third party paid listings
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetThirdPartyPaidListingEligibilityRequest
     * @return GetThirdPartyPaidListingEligibilityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetThirdPartyPaidListingEligibility.ts.html |here} to see how to use GetThirdPartyPaidListingEligibility API.
     */
    getThirdPartyPaidListingEligibility(getThirdPartyPaidListingEligibilityRequest: requests.GetThirdPartyPaidListingEligibilityRequest): Promise<responses.GetThirdPartyPaidListingEligibilityResponse>;
}
export declare enum MarketplaceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class MarketplaceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": MarketplaceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new MarketplaceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): MarketplaceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): MarketplaceWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves the specified publication from one compartment to another.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangePublicationCompartmentRequest
     * @return ChangePublicationCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ChangePublicationCompartment.ts.html |here} to see how to use ChangePublicationCompartment API.
     */
    changePublicationCompartment(changePublicationCompartmentRequest: requests.ChangePublicationCompartmentRequest): Promise<responses.ChangePublicationCompartmentResponse>;
    /**
     * Accepts a terms of use agreement for a specific package version of a listing. You must accept all
     * terms of use for a package before you can deploy the package.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAcceptedAgreementRequest
     * @return CreateAcceptedAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/CreateAcceptedAgreement.ts.html |here} to see how to use CreateAcceptedAgreement API.
     */
    createAcceptedAgreement(createAcceptedAgreementRequest: requests.CreateAcceptedAgreementRequest): Promise<responses.CreateAcceptedAgreementResponse>;
    /**
     * Creates a publication of the specified listing type with an optional default package.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreatePublicationRequest
     * @return CreatePublicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/CreatePublication.ts.html |here} to see how to use CreatePublication API.
     */
    createPublication(createPublicationRequest: requests.CreatePublicationRequest): Promise<responses.CreatePublicationResponse>;
    /**
     * Removes a previously accepted terms of use agreement from the list of agreements that Marketplace checks
     * before initiating a deployment. Listings in Marketplace that require acceptance of the specified terms
     * of use can no longer be deployed, but existing deployments aren't affected.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAcceptedAgreementRequest
     * @return DeleteAcceptedAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/DeleteAcceptedAgreement.ts.html |here} to see how to use DeleteAcceptedAgreement API.
     */
    deleteAcceptedAgreement(deleteAcceptedAgreementRequest: requests.DeleteAcceptedAgreementRequest): Promise<responses.DeleteAcceptedAgreementResponse>;
    /**
     * Deletes a publication, which also removes the associated listing from anywhere it was published, such as Marketplace or Compute.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeletePublicationRequest
     * @return DeletePublicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/DeletePublication.ts.html |here} to see how to use DeletePublication API.
     */
    deletePublication(deletePublicationRequest: requests.DeletePublicationRequest): Promise<responses.DeletePublicationResponse>;
    /**
     * Exports container images or helm chart from marketplace to customer's registry.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ExportListingRequest
     * @return ExportListingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ExportListing.ts.html |here} to see how to use ExportListing API.
     */
    exportListing(exportListingRequest: requests.ExportListingRequest): Promise<responses.ExportListingResponse>;
    /**
     * Gets the details of a specific, previously accepted terms of use agreement.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAcceptedAgreementRequest
     * @return GetAcceptedAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetAcceptedAgreement.ts.html |here} to see how to use GetAcceptedAgreement API.
     */
    getAcceptedAgreement(getAcceptedAgreementRequest: requests.GetAcceptedAgreementRequest): Promise<responses.GetAcceptedAgreementResponse>;
    /**
     * Returns a terms of use agreement for a package with a time-based signature that can be used to
     * accept the agreement.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAgreementRequest
     * @return GetAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetAgreement.ts.html |here} to see how to use GetAgreement API.
     */
    getAgreement(getAgreementRequest: requests.GetAgreementRequest): Promise<responses.GetAgreementResponse>;
    /**
       * Gets detailed information about a listing, including the listing's name, version, description, and
  * resources.
  * <p>
  If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
  * you launch the instance, you also need to provide the image ID of the listing resource version that you want.
  * <p>
  Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
  * listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
  * The [AppCatalogListingResourceVersionAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
  * its signature, is returned in the response. With the signature for the terms of use agreement for the desired
  * listing resource version, create a subscription by issuing a
  * [CreateAppCatalogSubscription](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
  * <p>
  To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
  * Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param GetListingRequest
       * @return GetListingResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetListing.ts.html |here} to see how to use GetListing API.
       */
    getListing(getListingRequest: requests.GetListingRequest): Promise<responses.GetListingResponse>;
    /**
       * Get the details of the specified version of a package, including information needed to launch the package.
  * <p>
  If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
  * you launch the instance, you also need to provide the image ID of the listing resource version that you want.
  * <p>
  Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
  * listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
  * The [AppCatalogListingResourceVersionAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
  * its signature, is returned in the response. With the signature for the terms of use agreement for the desired
  * listing resource version, create a subscription by issuing a
  * [CreateAppCatalogSubscription](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
  * <p>
  To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
  * Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param GetPackageRequest
       * @return GetPackageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetPackage.ts.html |here} to see how to use GetPackage API.
       */
    getPackage(getPackageRequest: requests.GetPackageRequest): Promise<responses.GetPackageResponse>;
    /**
     * Gets the details of the specified publication.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPublicationRequest
     * @return GetPublicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetPublication.ts.html |here} to see how to use GetPublication API.
     */
    getPublication(getPublicationRequest: requests.GetPublicationRequest): Promise<responses.GetPublicationResponse>;
    /**
     * Gets the details of a specific package version within a given publication.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPublicationPackageRequest
     * @return GetPublicationPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetPublicationPackage.ts.html |here} to see how to use GetPublicationPackage API.
     */
    getPublicationPackage(getPublicationPackageRequest: requests.GetPublicationPackageRequest): Promise<responses.GetPublicationPackageResponse>;
    /**
     * Gets the details of the specified work request
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists the terms of use agreements that have been accepted in the specified compartment.
     * You can filter results by specifying query parameters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAcceptedAgreementsRequest
     * @return ListAcceptedAgreementsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListAcceptedAgreements.ts.html |here} to see how to use ListAcceptedAgreements API.
     */
    listAcceptedAgreements(listAcceptedAgreementsRequest: requests.ListAcceptedAgreementsRequest): Promise<responses.ListAcceptedAgreementsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAcceptedAgreementsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AcceptedAgreementSummary objects
     * contained in responses from the listAcceptedAgreements operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAcceptedAgreements(request: requests.ListAcceptedAgreementsRequest): AsyncIterableIterator<model.AcceptedAgreementSummary>;
    /**
     * NOTE: This function is deprecated in favor of listAcceptedAgreementsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAcceptedAgreements operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAcceptedAgreementsResponses(request: requests.ListAcceptedAgreementsRequest): AsyncIterableIterator<responses.ListAcceptedAgreementsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AcceptedAgreementSummary objects
     * contained in responses from the listAcceptedAgreements operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAcceptedAgreementsRecordIterator(request: requests.ListAcceptedAgreementsRequest): AsyncIterableIterator<model.AcceptedAgreementSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAcceptedAgreements operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAcceptedAgreementsResponseIterator(request: requests.ListAcceptedAgreementsRequest): AsyncIterableIterator<responses.ListAcceptedAgreementsResponse>;
    /**
     * Returns the terms of use agreements that must be accepted before you can deploy the specified version of a package.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAgreementsRequest
     * @return ListAgreementsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListAgreements.ts.html |here} to see how to use ListAgreements API.
     */
    listAgreements(listAgreementsRequest: requests.ListAgreementsRequest): Promise<responses.ListAgreementsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAgreementsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AgreementSummary objects
     * contained in responses from the listAgreements operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAgreements(request: requests.ListAgreementsRequest): AsyncIterableIterator<model.AgreementSummary>;
    /**
     * NOTE: This function is deprecated in favor of listAgreementsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAgreements operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAgreementsResponses(request: requests.ListAgreementsRequest): AsyncIterableIterator<responses.ListAgreementsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AgreementSummary objects
     * contained in responses from the listAgreements operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAgreementsRecordIterator(request: requests.ListAgreementsRequest): AsyncIterableIterator<model.AgreementSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAgreements operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAgreementsResponseIterator(request: requests.ListAgreementsRequest): AsyncIterableIterator<responses.ListAgreementsResponse>;
    /**
     * Gets the list of all the categories for listings published to Oracle Cloud Infrastructure Marketplace. Categories apply
     * to the software product provided by the listing.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCategoriesRequest
     * @return ListCategoriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListCategories.ts.html |here} to see how to use ListCategories API.
     */
    listCategories(listCategoriesRequest: requests.ListCategoriesRequest): Promise<responses.ListCategoriesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listCategoriesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.CategorySummary objects
     * contained in responses from the listCategories operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCategories(request: requests.ListCategoriesRequest): AsyncIterableIterator<model.CategorySummary>;
    /**
     * NOTE: This function is deprecated in favor of listCategoriesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listCategories operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllCategoriesResponses(request: requests.ListCategoriesRequest): AsyncIterableIterator<responses.ListCategoriesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.CategorySummary objects
     * contained in responses from the listCategories operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCategoriesRecordIterator(request: requests.ListCategoriesRequest): AsyncIterableIterator<model.CategorySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listCategories operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listCategoriesResponseIterator(request: requests.ListCategoriesRequest): AsyncIterableIterator<responses.ListCategoriesResponse>;
    /**
       * Gets a list of listings from Oracle Cloud Infrastructure Marketplace by searching keywords and
  * filtering according to listing attributes.
  * <p>
  If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
  * you launch the instance, you also need to provide the image ID of the listing resource version that you want.
  * <p>
  Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
  * listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
  * The [AppCatalogListingResourceVersionAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
  * its signature, is returned in the response. With the signature for the terms of use agreement for the desired
  * listing resource version, create a subscription by issuing a
  * [CreateAppCatalogSubscription](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
  * <p>
  To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
  * Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListListingsRequest
       * @return ListListingsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListListings.ts.html |here} to see how to use ListListings API.
       */
    listListings(listListingsRequest: requests.ListListingsRequest): Promise<responses.ListListingsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listListingsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ListingSummary objects
     * contained in responses from the listListings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllListings(request: requests.ListListingsRequest): AsyncIterableIterator<model.ListingSummary>;
    /**
     * NOTE: This function is deprecated in favor of listListingsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listListings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllListingsResponses(request: requests.ListListingsRequest): AsyncIterableIterator<responses.ListListingsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ListingSummary objects
     * contained in responses from the listListings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listListingsRecordIterator(request: requests.ListListingsRequest): AsyncIterableIterator<model.ListingSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listListings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listListingsResponseIterator(request: requests.ListListingsRequest): AsyncIterableIterator<responses.ListListingsResponse>;
    /**
       * Gets the list of packages for a listing.
  * <p>
  If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
  * you launch the instance, you also need to provide the image ID of the listing resource version that you want.
  * <p>
  Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
  * listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
  * The [AppCatalogListingResourceVersionAgreements](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
  * its signature, is returned in the response. With the signature for the terms of use agreement for the desired
  * listing resource version, create a subscription by issuing a
  * [CreateAppCatalogSubscription](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
  * <p>
  To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
  * Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.oracle.com/iaas/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListPackagesRequest
       * @return ListPackagesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListPackages.ts.html |here} to see how to use ListPackages API.
       */
    listPackages(listPackagesRequest: requests.ListPackagesRequest): Promise<responses.ListPackagesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPackagesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ListingPackageSummary objects
     * contained in responses from the listPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackages(request: requests.ListPackagesRequest): AsyncIterableIterator<model.ListingPackageSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPackagesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackagesResponses(request: requests.ListPackagesRequest): AsyncIterableIterator<responses.ListPackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ListingPackageSummary objects
     * contained in responses from the listPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPackagesRecordIterator(request: requests.ListPackagesRequest): AsyncIterableIterator<model.ListingPackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPackagesResponseIterator(request: requests.ListPackagesRequest): AsyncIterableIterator<responses.ListPackagesResponse>;
    /**
     * Lists the packages in the specified publication.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPublicationPackagesRequest
     * @return ListPublicationPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListPublicationPackages.ts.html |here} to see how to use ListPublicationPackages API.
     */
    listPublicationPackages(listPublicationPackagesRequest: requests.ListPublicationPackagesRequest): Promise<responses.ListPublicationPackagesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPublicationPackagesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.PublicationPackageSummary objects
     * contained in responses from the listPublicationPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublicationPackages(request: requests.ListPublicationPackagesRequest): AsyncIterableIterator<model.PublicationPackageSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPublicationPackagesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPublicationPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublicationPackagesResponses(request: requests.ListPublicationPackagesRequest): AsyncIterableIterator<responses.ListPublicationPackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.PublicationPackageSummary objects
     * contained in responses from the listPublicationPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublicationPackagesRecordIterator(request: requests.ListPublicationPackagesRequest): AsyncIterableIterator<model.PublicationPackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPublicationPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublicationPackagesResponseIterator(request: requests.ListPublicationPackagesRequest): AsyncIterableIterator<responses.ListPublicationPackagesResponse>;
    /**
     * Lists the publications in the specified compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPublicationsRequest
     * @return ListPublicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListPublications.ts.html |here} to see how to use ListPublications API.
     */
    listPublications(listPublicationsRequest: requests.ListPublicationsRequest): Promise<responses.ListPublicationsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPublicationsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.PublicationSummary objects
     * contained in responses from the listPublications operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublications(request: requests.ListPublicationsRequest): AsyncIterableIterator<model.PublicationSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPublicationsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPublications operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublicationsResponses(request: requests.ListPublicationsRequest): AsyncIterableIterator<responses.ListPublicationsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.PublicationSummary objects
     * contained in responses from the listPublications operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublicationsRecordIterator(request: requests.ListPublicationsRequest): AsyncIterableIterator<model.PublicationSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPublications operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublicationsResponseIterator(request: requests.ListPublicationsRequest): AsyncIterableIterator<responses.ListPublicationsResponse>;
    /**
     * Gets the list of all the publishers of listings available in Oracle Cloud Infrastructure Marketplace.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPublishersRequest
     * @return ListPublishersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListPublishers.ts.html |here} to see how to use ListPublishers API.
     */
    listPublishers(listPublishersRequest: requests.ListPublishersRequest): Promise<responses.ListPublishersResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPublishersRecordIterator function.
     * Creates a new async iterator which will iterate over the models.PublisherSummary objects
     * contained in responses from the listPublishers operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublishers(request: requests.ListPublishersRequest): AsyncIterableIterator<model.PublisherSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPublishersResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPublishers operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPublishersResponses(request: requests.ListPublishersRequest): AsyncIterableIterator<responses.ListPublishersResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.PublisherSummary objects
     * contained in responses from the listPublishers operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublishersRecordIterator(request: requests.ListPublishersRequest): AsyncIterableIterator<model.PublisherSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPublishers operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPublishersResponseIterator(request: requests.ListPublishersRequest): AsyncIterableIterator<responses.ListPublishersResponse>;
    /**
     * Lists available types of reports for the compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListReportTypesRequest
     * @return ListReportTypesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListReportTypes.ts.html |here} to see how to use ListReportTypes API.
     */
    listReportTypes(listReportTypesRequest: requests.ListReportTypesRequest): Promise<responses.ListReportTypesResponse>;
    /**
     * Lists reports in the compartment that match the specified report type and date.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListReportsRequest
     * @return ListReportsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListReports.ts.html |here} to see how to use ListReports API.
     */
    listReports(listReportsRequest: requests.ListReportsRequest): Promise<responses.ListReportsResponse>;
    /**
     * Returns list of all tax implications that current tenant may be liable to once they launch the listing.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTaxesRequest
     * @return ListTaxesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListTaxes.ts.html |here} to see how to use ListTaxes API.
     */
    listTaxes(listTaxesRequest: requests.ListTaxesRequest): Promise<responses.ListTaxesResponse>;
    /**
     * List all errors for a work request
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * List all logs for a work request
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * List all work requests in a compartment
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Queries all Marketplace Applications to find listings that match the specified criteria. To search
     * for a listing, you can use a free text or structured search.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchListingsRequest
     * @return SearchListingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/SearchListings.ts.html |here} to see how to use SearchListings API.
     */
    searchListings(searchListingsRequest: requests.SearchListingsRequest): Promise<responses.SearchListingsResponse>;
    /**
     * NOTE: This function is deprecated in favor of searchListingsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ListingSummary objects
     * contained in responses from the searchListings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchAllListings(request: requests.SearchListingsRequest): AsyncIterableIterator<model.ListingSummary>;
    /**
     * NOTE: This function is deprecated in favor of searchListingsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the searchListings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchAllListingsResponses(request: requests.SearchListingsRequest): AsyncIterableIterator<responses.SearchListingsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ListingSummary objects
     * contained in responses from the searchListings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchListingsRecordIterator(request: requests.SearchListingsRequest): AsyncIterableIterator<model.ListingSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the searchListings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchListingsResponseIterator(request: requests.SearchListingsRequest): AsyncIterableIterator<responses.SearchListingsResponse>;
    /**
     * Updates the display name or tags associated with a listing's previously accepted terms of use agreement.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAcceptedAgreementRequest
     * @return UpdateAcceptedAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/UpdateAcceptedAgreement.ts.html |here} to see how to use UpdateAcceptedAgreement API.
     */
    updateAcceptedAgreement(updateAcceptedAgreementRequest: requests.UpdateAcceptedAgreementRequest): Promise<responses.UpdateAcceptedAgreementResponse>;
    /**
     * Updates the details of an existing publication.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdatePublicationRequest
     * @return UpdatePublicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplace/UpdatePublication.ts.html |here} to see how to use UpdatePublication API.
     */
    updatePublication(updatePublicationRequest: requests.UpdatePublicationRequest): Promise<responses.UpdatePublicationResponse>;
}
export {};
