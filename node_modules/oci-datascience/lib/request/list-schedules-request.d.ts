/**
 *
 *
 * OpenAPI spec version: 20190101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/datascience/ListSchedules.ts.html |here} to see how to use ListSchedulesRequest.
 */
export interface ListSchedulesRequest extends common.BaseRequest {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    "projectId"?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    "lifecycleState"?: model.ScheduleLifecycleState;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    "displayName"?: string;
    /**
     * unique Schedule identifier
     */
    "id"?: string;
    /**
   * For list pagination. The maximum number of results per page,
  * or items to return in a paginated \"List\" call.
  * 1 is the minimum, 100 is the maximum.
  * See [List Pagination](https://docs.oracle.com/iaas/Content/General/Concepts/usingapi.htm#nine).
  * <p>
  Example: {@code 50}
  *
   */
    "limit"?: number;
    /**
   * For list pagination. The value of the {@code opc-next-page} response
  * header from the previous \"List\" call.
  * <p>
  See [List Pagination](https://docs.oracle.com/iaas/Content/General/Concepts/usingapi.htm#nine).
  *
   */
    "page"?: string;
    /**
     * Specifies sort order to use, either {@code ASC} (ascending) or {@code DESC} (descending).
     *
     */
    "sortOrder"?: ListSchedulesRequest.SortOrder;
    /**
     * The field to sort by. Only one sort order may be provided. Default order for timeCreated is descending. Default order for displayName is ascending.
     *
     */
    "sortBy"?: ListSchedulesRequest.SortBy;
    /**
     * Unique Oracle assigned identifier for the request. If you need to contact Oracle about a particular request, then provide the request ID.
     *
     */
    "opcRequestId"?: string;
}
export declare namespace ListSchedulesRequest {
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        TimeCreated = "timeCreated",
        DisplayName = "displayName"
    }
}
