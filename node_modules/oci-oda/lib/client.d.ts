/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { ManagementWaiter } from "./management-waiter";
import { OdaWaiter } from "./oda-waiter";
declare const Breaker: any;
export declare enum ManagementApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ManagementClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ManagementWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Bulk create composite and value list entities into a skill.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param BulkCreateSkillEntitiesRequest
     * @return BulkCreateSkillEntitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/BulkCreateSkillEntities.ts.html |here} to see how to use BulkCreateSkillEntities API.
     */
    bulkCreateSkillEntities(bulkCreateSkillEntitiesRequest: requests.BulkCreateSkillEntitiesRequest): Promise<responses.BulkCreateSkillEntitiesResponse>;
    /**
     * Cascading delete of the custom entities in a skill.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CascadingDeleteSkillCustomEntitiesRequest
     * @return CascadingDeleteSkillCustomEntitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CascadingDeleteSkillCustomEntities.ts.html |here} to see how to use CascadingDeleteSkillCustomEntities API.
     */
    cascadingDeleteSkillCustomEntities(cascadingDeleteSkillCustomEntitiesRequest: requests.CascadingDeleteSkillCustomEntitiesRequest): Promise<responses.CascadingDeleteSkillCustomEntitiesResponse>;
    /**
       * Starts an asynchronous job to move the specified ODA Private Endpoint into a different compartment.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response header
  * value and use it to call `GET /workRequests/{workRequestID}`.
  * When provided, If-Match is checked against ETag values of the resource.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ChangeOdaPrivateEndpointCompartmentRequest
       * @return ChangeOdaPrivateEndpointCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ChangeOdaPrivateEndpointCompartment.ts.html |here} to see how to use ChangeOdaPrivateEndpointCompartment API.
       */
    changeOdaPrivateEndpointCompartment(changeOdaPrivateEndpointCompartmentRequest: requests.ChangeOdaPrivateEndpointCompartmentRequest): Promise<responses.ChangeOdaPrivateEndpointCompartmentResponse>;
    /**
     * This will store the provided parameters in the Digital Assistant instance and update any Digital Assistants with matching parameters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ConfigureDigitalAssistantParametersRequest
     * @return ConfigureDigitalAssistantParametersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ConfigureDigitalAssistantParameters.ts.html |here} to see how to use ConfigureDigitalAssistantParameters API.
     */
    configureDigitalAssistantParameters(configureDigitalAssistantParametersRequest: requests.ConfigureDigitalAssistantParametersRequest): Promise<responses.ConfigureDigitalAssistantParametersResponse>;
    /**
     * Creates a new Authentication Provider
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAuthenticationProviderRequest
     * @return CreateAuthenticationProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateAuthenticationProvider.ts.html |here} to see how to use CreateAuthenticationProvider API.
     */
    createAuthenticationProvider(createAuthenticationProviderRequest: requests.CreateAuthenticationProviderRequest): Promise<responses.CreateAuthenticationProviderResponse>;
    /**
     * Creates a new Channel.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateChannelRequest
     * @return CreateChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateChannel.ts.html |here} to see how to use CreateChannel API.
     */
    createChannel(createChannelRequest: requests.CreateChannelRequest): Promise<responses.CreateChannelResponse>;
    /**
     * Creates a new Digital Assistant.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDigitalAssistantRequest
     * @return CreateDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateDigitalAssistant.ts.html |here} to see how to use CreateDigitalAssistant API.
     */
    createDigitalAssistant(createDigitalAssistantRequest: requests.CreateDigitalAssistantRequest): Promise<responses.CreateDigitalAssistantResponse>;
    /**
       * Starts an asynchronous job to create an ODA Private Endpoint.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestID}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateOdaPrivateEndpointRequest
       * @return CreateOdaPrivateEndpointResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateOdaPrivateEndpoint.ts.html |here} to see how to use CreateOdaPrivateEndpoint API.
       */
    createOdaPrivateEndpoint(createOdaPrivateEndpointRequest: requests.CreateOdaPrivateEndpointRequest): Promise<responses.CreateOdaPrivateEndpointResponse>;
    /**
       * Starts an asynchronous job to create an ODA Private Endpoint Attachment.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestID}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateOdaPrivateEndpointAttachmentRequest
       * @return CreateOdaPrivateEndpointAttachmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateOdaPrivateEndpointAttachment.ts.html |here} to see how to use CreateOdaPrivateEndpointAttachment API.
       */
    createOdaPrivateEndpointAttachment(createOdaPrivateEndpointAttachmentRequest: requests.CreateOdaPrivateEndpointAttachmentRequest): Promise<responses.CreateOdaPrivateEndpointAttachmentResponse>;
    /**
       * Starts an asynchronous job to create an ODA Private Endpoint Scan Proxy.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestID}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateOdaPrivateEndpointScanProxyRequest
       * @return CreateOdaPrivateEndpointScanProxyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateOdaPrivateEndpointScanProxy.ts.html |here} to see how to use CreateOdaPrivateEndpointScanProxy API.
       */
    createOdaPrivateEndpointScanProxy(createOdaPrivateEndpointScanProxyRequest: requests.CreateOdaPrivateEndpointScanProxyRequest): Promise<responses.CreateOdaPrivateEndpointScanProxyResponse>;
    /**
     * Creates a new Skill from scratch.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateSkillRequest
     * @return CreateSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateSkill.ts.html |here} to see how to use CreateSkill API.
     */
    createSkill(createSkillRequest: requests.CreateSkillRequest): Promise<responses.CreateSkillResponse>;
    /**
     * Creates a new Skill Parameter.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateSkillParameterRequest
     * @return CreateSkillParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateSkillParameter.ts.html |here} to see how to use CreateSkillParameter API.
     */
    createSkillParameter(createSkillParameterRequest: requests.CreateSkillParameterRequest): Promise<responses.CreateSkillParameterResponse>;
    /**
     * Creates a new Translator
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateTranslatorRequest
     * @return CreateTranslatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateTranslator.ts.html |here} to see how to use CreateTranslator API.
     */
    createTranslator(createTranslatorRequest: requests.CreateTranslatorRequest): Promise<responses.CreateTranslatorResponse>;
    /**
     * Delete the specified Authentication Provider.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAuthenticationProviderRequest
     * @return DeleteAuthenticationProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteAuthenticationProvider.ts.html |here} to see how to use DeleteAuthenticationProvider API.
     */
    deleteAuthenticationProvider(deleteAuthenticationProviderRequest: requests.DeleteAuthenticationProviderRequest): Promise<responses.DeleteAuthenticationProviderResponse>;
    /**
     * Delete the specified Channel.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteChannelRequest
     * @return DeleteChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteChannel.ts.html |here} to see how to use DeleteChannel API.
     */
    deleteChannel(deleteChannelRequest: requests.DeleteChannelRequest): Promise<responses.DeleteChannelResponse>;
    /**
     * Delete the specified Digital Assistant.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDigitalAssistantRequest
     * @return DeleteDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteDigitalAssistant.ts.html |here} to see how to use DeleteDigitalAssistant API.
     */
    deleteDigitalAssistant(deleteDigitalAssistantRequest: requests.DeleteDigitalAssistantRequest): Promise<responses.DeleteDigitalAssistantResponse>;
    /**
     * Starts an asynchronous job to delete the specified ODA Private Endpoint.
     * To monitor the status of the job, take the `opc-work-request-id` response header value and use it to call `GET /workRequests/{workRequestID}`.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOdaPrivateEndpointRequest
     * @return DeleteOdaPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteOdaPrivateEndpoint.ts.html |here} to see how to use DeleteOdaPrivateEndpoint API.
     */
    deleteOdaPrivateEndpoint(deleteOdaPrivateEndpointRequest: requests.DeleteOdaPrivateEndpointRequest): Promise<responses.DeleteOdaPrivateEndpointResponse>;
    /**
     * Starts an asynchronous job to delete the specified ODA Private Endpoint Attachment.
     * To monitor the status of the job, take the `opc-work-request-id` response header value and use it to call `GET /workRequests/{workRequestID}`.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOdaPrivateEndpointAttachmentRequest
     * @return DeleteOdaPrivateEndpointAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteOdaPrivateEndpointAttachment.ts.html |here} to see how to use DeleteOdaPrivateEndpointAttachment API.
     */
    deleteOdaPrivateEndpointAttachment(deleteOdaPrivateEndpointAttachmentRequest: requests.DeleteOdaPrivateEndpointAttachmentRequest): Promise<responses.DeleteOdaPrivateEndpointAttachmentResponse>;
    /**
     * Starts an asynchronous job to delete the specified ODA Private Endpoint Scan Proxy.
     * To monitor the status of the job, take the `opc-work-request-id` response header value and use it to call `GET /workRequests/{workRequestID}`.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOdaPrivateEndpointScanProxyRequest
     * @return DeleteOdaPrivateEndpointScanProxyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteOdaPrivateEndpointScanProxy.ts.html |here} to see how to use DeleteOdaPrivateEndpointScanProxy API.
     */
    deleteOdaPrivateEndpointScanProxy(deleteOdaPrivateEndpointScanProxyRequest: requests.DeleteOdaPrivateEndpointScanProxyRequest): Promise<responses.DeleteOdaPrivateEndpointScanProxyResponse>;
    /**
     * Delete the specified Skill.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteSkillRequest
     * @return DeleteSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteSkill.ts.html |here} to see how to use DeleteSkill API.
     */
    deleteSkill(deleteSkillRequest: requests.DeleteSkillRequest): Promise<responses.DeleteSkillResponse>;
    /**
     * Delete the specified Skill Parameter.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteSkillParameterRequest
     * @return DeleteSkillParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteSkillParameter.ts.html |here} to see how to use DeleteSkillParameter API.
     */
    deleteSkillParameter(deleteSkillParameterRequest: requests.DeleteSkillParameterRequest): Promise<responses.DeleteSkillParameterResponse>;
    /**
     * Delete the specified Translator.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteTranslatorRequest
     * @return DeleteTranslatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteTranslator.ts.html |here} to see how to use DeleteTranslator API.
     */
    deleteTranslator(deleteTranslatorRequest: requests.DeleteTranslatorRequest): Promise<responses.DeleteTranslatorResponse>;
    /**
     * Exports the specified Digital Assistant as an archive to Object Storage.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ExportDigitalAssistantRequest
     * @return ExportDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ExportDigitalAssistant.ts.html |here} to see how to use ExportDigitalAssistant API.
     */
    exportDigitalAssistant(exportDigitalAssistantRequest: requests.ExportDigitalAssistantRequest): Promise<responses.ExportDigitalAssistantResponse>;
    /**
     * Exports the specified Skill as an archive to Object Storage.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ExportSkillRequest
     * @return ExportSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ExportSkill.ts.html |here} to see how to use ExportSkill API.
     */
    exportSkill(exportSkillRequest: requests.ExportSkillRequest): Promise<responses.ExportSkillResponse>;
    /**
     * Gets the specified Authentication Provider.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAuthenticationProviderRequest
     * @return GetAuthenticationProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetAuthenticationProvider.ts.html |here} to see how to use GetAuthenticationProvider API.
     */
    getAuthenticationProvider(getAuthenticationProviderRequest: requests.GetAuthenticationProviderRequest): Promise<responses.GetAuthenticationProviderResponse>;
    /**
     * Gets the specified Channel.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetChannelRequest
     * @return GetChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetChannel.ts.html |here} to see how to use GetChannel API.
     */
    getChannel(getChannelRequest: requests.GetChannelRequest): Promise<responses.GetChannelResponse>;
    /**
     * Gets the specified Digital Assistant.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDigitalAssistantRequest
     * @return GetDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetDigitalAssistant.ts.html |here} to see how to use GetDigitalAssistant API.
     */
    getDigitalAssistant(getDigitalAssistantRequest: requests.GetDigitalAssistantRequest): Promise<responses.GetDigitalAssistantResponse>;
    /**
     * Gets the specified Digital Assistant Parameter.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDigitalAssistantParameterRequest
     * @return GetDigitalAssistantParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetDigitalAssistantParameter.ts.html |here} to see how to use GetDigitalAssistantParameter API.
     */
    getDigitalAssistantParameter(getDigitalAssistantParameterRequest: requests.GetDigitalAssistantParameterRequest): Promise<responses.GetDigitalAssistantParameterResponse>;
    /**
     * Gets the specified ODA Private Endpoint.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOdaPrivateEndpointRequest
     * @return GetOdaPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetOdaPrivateEndpoint.ts.html |here} to see how to use GetOdaPrivateEndpoint API.
     */
    getOdaPrivateEndpoint(getOdaPrivateEndpointRequest: requests.GetOdaPrivateEndpointRequest): Promise<responses.GetOdaPrivateEndpointResponse>;
    /**
     * Gets the specified ODA Private Endpoint Attachment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOdaPrivateEndpointAttachmentRequest
     * @return GetOdaPrivateEndpointAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetOdaPrivateEndpointAttachment.ts.html |here} to see how to use GetOdaPrivateEndpointAttachment API.
     */
    getOdaPrivateEndpointAttachment(getOdaPrivateEndpointAttachmentRequest: requests.GetOdaPrivateEndpointAttachmentRequest): Promise<responses.GetOdaPrivateEndpointAttachmentResponse>;
    /**
     * Gets the specified ODA Private Endpoint Scan Proxy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOdaPrivateEndpointScanProxyRequest
     * @return GetOdaPrivateEndpointScanProxyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetOdaPrivateEndpointScanProxy.ts.html |here} to see how to use GetOdaPrivateEndpointScanProxy API.
     */
    getOdaPrivateEndpointScanProxy(getOdaPrivateEndpointScanProxyRequest: requests.GetOdaPrivateEndpointScanProxyRequest): Promise<responses.GetOdaPrivateEndpointScanProxyResponse>;
    /**
     * Gets the specified Skill.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSkillRequest
     * @return GetSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetSkill.ts.html |here} to see how to use GetSkill API.
     */
    getSkill(getSkillRequest: requests.GetSkillRequest): Promise<responses.GetSkillResponse>;
    /**
     * Gets the specified Skill Parameter.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetSkillParameterRequest
     * @return GetSkillParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetSkillParameter.ts.html |here} to see how to use GetSkillParameter API.
     */
    getSkillParameter(getSkillParameterRequest: requests.GetSkillParameterRequest): Promise<responses.GetSkillParameterResponse>;
    /**
     * Gets the specified Translator.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTranslatorRequest
     * @return GetTranslatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetTranslator.ts.html |here} to see how to use GetTranslator API.
     */
    getTranslator(getTranslatorRequest: requests.GetTranslatorRequest): Promise<responses.GetTranslatorResponse>;
    /**
     * Import a Bot archive from Object Storage.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ImportBotRequest
     * @return ImportBotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ImportBot.ts.html |here} to see how to use ImportBot API.
     */
    importBot(importBotRequest: requests.ImportBotRequest): Promise<responses.ImportBotResponse>;
    /**
       * Returns a page of Authentication Providers that belong to the specified Digital Assistant instance.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListAuthenticationProvidersRequest
       * @return ListAuthenticationProvidersResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListAuthenticationProviders.ts.html |here} to see how to use ListAuthenticationProviders API.
       */
    listAuthenticationProviders(listAuthenticationProvidersRequest: requests.ListAuthenticationProvidersRequest): Promise<responses.ListAuthenticationProvidersResponse>;
    /**
       * Returns a page of Channels that belong to the specified Digital Assistant instance.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListChannelsRequest
       * @return ListChannelsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListChannels.ts.html |here} to see how to use ListChannels API.
       */
    listChannels(listChannelsRequest: requests.ListChannelsRequest): Promise<responses.ListChannelsResponse>;
    /**
       * Returns a page of Parameters that belong to the specified Digital Assistant.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListDigitalAssistantParametersRequest
       * @return ListDigitalAssistantParametersResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListDigitalAssistantParameters.ts.html |here} to see how to use ListDigitalAssistantParameters API.
       */
    listDigitalAssistantParameters(listDigitalAssistantParametersRequest: requests.ListDigitalAssistantParametersRequest): Promise<responses.ListDigitalAssistantParametersResponse>;
    /**
       * Returns a page of Digital Assistants that belong to the specified Digital Assistant instance.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListDigitalAssistantsRequest
       * @return ListDigitalAssistantsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListDigitalAssistants.ts.html |here} to see how to use ListDigitalAssistants API.
       */
    listDigitalAssistants(listDigitalAssistantsRequest: requests.ListDigitalAssistantsRequest): Promise<responses.ListDigitalAssistantsResponse>;
    /**
       * Returns a page of ODA Instances attached to this ODA Private Endpoint.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListOdaPrivateEndpointAttachmentsRequest
       * @return ListOdaPrivateEndpointAttachmentsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListOdaPrivateEndpointAttachments.ts.html |here} to see how to use ListOdaPrivateEndpointAttachments API.
       */
    listOdaPrivateEndpointAttachments(listOdaPrivateEndpointAttachmentsRequest: requests.ListOdaPrivateEndpointAttachmentsRequest): Promise<responses.ListOdaPrivateEndpointAttachmentsResponse>;
    /**
       * Returns a page of ODA Private Endpoint Scan Proxies that belong to the specified
  * ODA Private Endpoint.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListOdaPrivateEndpointScanProxiesRequest
       * @return ListOdaPrivateEndpointScanProxiesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListOdaPrivateEndpointScanProxies.ts.html |here} to see how to use ListOdaPrivateEndpointScanProxies API.
       */
    listOdaPrivateEndpointScanProxies(listOdaPrivateEndpointScanProxiesRequest: requests.ListOdaPrivateEndpointScanProxiesRequest): Promise<responses.ListOdaPrivateEndpointScanProxiesResponse>;
    /**
       * Returns a page of ODA Private Endpoints that belong to the specified
  * compartment.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListOdaPrivateEndpointsRequest
       * @return ListOdaPrivateEndpointsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListOdaPrivateEndpoints.ts.html |here} to see how to use ListOdaPrivateEndpoints API.
       */
    listOdaPrivateEndpoints(listOdaPrivateEndpointsRequest: requests.ListOdaPrivateEndpointsRequest): Promise<responses.ListOdaPrivateEndpointsResponse>;
    /**
       * Returns a page of Skill Parameters that belong to the specified Skill.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListSkillParametersRequest
       * @return ListSkillParametersResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListSkillParameters.ts.html |here} to see how to use ListSkillParameters API.
       */
    listSkillParameters(listSkillParametersRequest: requests.ListSkillParametersRequest): Promise<responses.ListSkillParametersResponse>;
    /**
       * Returns a page of Skills that belong to the specified Digital Assistant instance.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListSkillsRequest
       * @return ListSkillsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListSkills.ts.html |here} to see how to use ListSkills API.
       */
    listSkills(listSkillsRequest: requests.ListSkillsRequest): Promise<responses.ListSkillsResponse>;
    /**
       * Returns a page of Translators that belong to the specified Digital Assistant instance.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListTranslatorsRequest
       * @return ListTranslatorsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListTranslators.ts.html |here} to see how to use ListTranslators API.
       */
    listTranslators(listTranslatorsRequest: requests.ListTranslatorsRequest): Promise<responses.ListTranslatorsResponse>;
    /**
     * Publish a draft Digital Assistant.
     * Once published the Digital Assistant cannot be modified.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PublishDigitalAssistantRequest
     * @return PublishDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/PublishDigitalAssistant.ts.html |here} to see how to use PublishDigitalAssistant API.
     */
    publishDigitalAssistant(publishDigitalAssistantRequest: requests.PublishDigitalAssistantRequest): Promise<responses.PublishDigitalAssistantResponse>;
    /**
     * Publish a draft Skill.
     * Once published it cannot be modified.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PublishSkillRequest
     * @return PublishSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/PublishSkill.ts.html |here} to see how to use PublishSkill API.
     */
    publishSkill(publishSkillRequest: requests.PublishSkillRequest): Promise<responses.PublishSkillResponse>;
    /**
     * This will generate new keys for any generated keys in the Channel (eg. secretKey, verifyToken).
     * If a Channel has no generated keys then no changes will be made.
     * Ensure that you take note of the newly generated keys in the response as they will not be returned again.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RotateChannelKeysRequest
     * @return RotateChannelKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/RotateChannelKeys.ts.html |here} to see how to use RotateChannelKeys API.
     */
    rotateChannelKeys(rotateChannelKeysRequest: requests.RotateChannelKeysRequest): Promise<responses.RotateChannelKeysResponse>;
    /**
     * Starts a Channel so that it will begin accepting messages.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StartChannelRequest
     * @return StartChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/StartChannel.ts.html |here} to see how to use StartChannel API.
     */
    startChannel(startChannelRequest: requests.StartChannelRequest): Promise<responses.StartChannelResponse>;
    /**
     * Stops a Channel so that it will no longer accept messages.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StopChannelRequest
     * @return StopChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/StopChannel.ts.html |here} to see how to use StopChannel API.
     */
    stopChannel(stopChannelRequest: requests.StopChannelRequest): Promise<responses.StopChannelResponse>;
    /**
     * Train a skill.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param TrainSkillRequest
     * @return TrainSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/TrainSkill.ts.html |here} to see how to use TrainSkill API.
     */
    trainSkill(trainSkillRequest: requests.TrainSkillRequest): Promise<responses.TrainSkillResponse>;
    /**
     * Updates the specified Authentication Provider with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAuthenticationProviderRequest
     * @return UpdateAuthenticationProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateAuthenticationProvider.ts.html |here} to see how to use UpdateAuthenticationProvider API.
     */
    updateAuthenticationProvider(updateAuthenticationProviderRequest: requests.UpdateAuthenticationProviderRequest): Promise<responses.UpdateAuthenticationProviderResponse>;
    /**
     * Updates the specified Channel with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateChannelRequest
     * @return UpdateChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateChannel.ts.html |here} to see how to use UpdateChannel API.
     */
    updateChannel(updateChannelRequest: requests.UpdateChannelRequest): Promise<responses.UpdateChannelResponse>;
    /**
     * Updates the specified Digital Assistant with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDigitalAssistantRequest
     * @return UpdateDigitalAssistantResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateDigitalAssistant.ts.html |here} to see how to use UpdateDigitalAssistant API.
     */
    updateDigitalAssistant(updateDigitalAssistantRequest: requests.UpdateDigitalAssistantRequest): Promise<responses.UpdateDigitalAssistantResponse>;
    /**
     * Updates the specified Digital Assistant Parameter with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDigitalAssistantParameterRequest
     * @return UpdateDigitalAssistantParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateDigitalAssistantParameter.ts.html |here} to see how to use UpdateDigitalAssistantParameter API.
     */
    updateDigitalAssistantParameter(updateDigitalAssistantParameterRequest: requests.UpdateDigitalAssistantParameterRequest): Promise<responses.UpdateDigitalAssistantParameterResponse>;
    /**
     * Starts an asynchronous job to update the specified ODA Private Endpoint with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOdaPrivateEndpointRequest
     * @return UpdateOdaPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateOdaPrivateEndpoint.ts.html |here} to see how to use UpdateOdaPrivateEndpoint API.
     */
    updateOdaPrivateEndpoint(updateOdaPrivateEndpointRequest: requests.UpdateOdaPrivateEndpointRequest): Promise<responses.UpdateOdaPrivateEndpointResponse>;
    /**
     * Updates the specified Skill with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateSkillRequest
     * @return UpdateSkillResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateSkill.ts.html |here} to see how to use UpdateSkill API.
     */
    updateSkill(updateSkillRequest: requests.UpdateSkillRequest): Promise<responses.UpdateSkillResponse>;
    /**
     * Updates the specified Skill Parameter with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateSkillParameterRequest
     * @return UpdateSkillParameterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateSkillParameter.ts.html |here} to see how to use UpdateSkillParameter API.
     */
    updateSkillParameter(updateSkillParameterRequest: requests.UpdateSkillParameterRequest): Promise<responses.UpdateSkillParameterResponse>;
    /**
     * Updates the specified Translator with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateTranslatorRequest
     * @return UpdateTranslatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateTranslator.ts.html |here} to see how to use UpdateTranslator API.
     */
    updateTranslator(updateTranslatorRequest: requests.UpdateTranslatorRequest): Promise<responses.UpdateTranslatorResponse>;
}
export declare enum OdaApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class OdaClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OdaWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OdaWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OdaWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OdaWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves an Digital Assistant instance into a different compartment. When provided, If-Match is checked against
     * ETag values of the resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeOdaInstanceCompartmentRequest
     * @return ChangeOdaInstanceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ChangeOdaInstanceCompartment.ts.html |here} to see how to use ChangeOdaInstanceCompartment API.
     */
    changeOdaInstanceCompartment(changeOdaInstanceCompartmentRequest: requests.ChangeOdaInstanceCompartmentRequest): Promise<responses.ChangeOdaInstanceCompartmentResponse>;
    /**
       * Starts an asynchronous job to create a Digital Assistant instance.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestId}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateOdaInstanceRequest
       * @return CreateOdaInstanceResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateOdaInstance.ts.html |here} to see how to use CreateOdaInstance API.
       */
    createOdaInstance(createOdaInstanceRequest: requests.CreateOdaInstanceRequest): Promise<responses.CreateOdaInstanceResponse>;
    /**
       * Starts an asynchronous job to create a Digital Assistant instance attachment.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestId}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateOdaInstanceAttachmentRequest
       * @return CreateOdaInstanceAttachmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateOdaInstanceAttachment.ts.html |here} to see how to use CreateOdaInstanceAttachment API.
       */
    createOdaInstanceAttachment(createOdaInstanceAttachmentRequest: requests.CreateOdaInstanceAttachmentRequest): Promise<responses.CreateOdaInstanceAttachmentResponse>;
    /**
     * Starts an asynchronous job to delete the specified Digital Assistant instance.
     * To monitor the status of the job, take the `opc-work-request-id` response header value and use it to call `GET /workRequests/{workRequestId}`.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOdaInstanceRequest
     * @return DeleteOdaInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteOdaInstance.ts.html |here} to see how to use DeleteOdaInstance API.
     */
    deleteOdaInstance(deleteOdaInstanceRequest: requests.DeleteOdaInstanceRequest): Promise<responses.DeleteOdaInstanceResponse>;
    /**
     * Starts an asynchronous job to delete the specified Digital Assistant instance attachment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOdaInstanceAttachmentRequest
     * @return DeleteOdaInstanceAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteOdaInstanceAttachment.ts.html |here} to see how to use DeleteOdaInstanceAttachment API.
     */
    deleteOdaInstanceAttachment(deleteOdaInstanceAttachmentRequest: requests.DeleteOdaInstanceAttachmentRequest): Promise<responses.DeleteOdaInstanceAttachmentResponse>;
    /**
     * Gets the specified Digital Assistant instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOdaInstanceRequest
     * @return GetOdaInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetOdaInstance.ts.html |here} to see how to use GetOdaInstance API.
     */
    getOdaInstance(getOdaInstanceRequest: requests.GetOdaInstanceRequest): Promise<responses.GetOdaInstanceResponse>;
    /**
     * Gets an ODA instance attachment by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOdaInstanceAttachmentRequest
     * @return GetOdaInstanceAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetOdaInstanceAttachment.ts.html |here} to see how to use GetOdaInstanceAttachment API.
     */
    getOdaInstanceAttachment(getOdaInstanceAttachmentRequest: requests.GetOdaInstanceAttachmentRequest): Promise<responses.GetOdaInstanceAttachmentResponse>;
    /**
       * Gets information about the work request with the specified ID, including its status.
  * <p>
  You can use this operation to monitor the status of jobs that you
  * requested to create, delete, and update instances.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param GetWorkRequestRequest
       * @return GetWorkRequestResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
       */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Returns a list of ODA instance attachments
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListOdaInstanceAttachmentsRequest
     * @return ListOdaInstanceAttachmentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListOdaInstanceAttachments.ts.html |here} to see how to use ListOdaInstanceAttachments API.
     */
    listOdaInstanceAttachments(listOdaInstanceAttachmentsRequest: requests.ListOdaInstanceAttachmentsRequest): Promise<responses.ListOdaInstanceAttachmentsResponse>;
    /**
       * Returns a page of Digital Assistant instances that belong to the specified
  * compartment.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListOdaInstancesRequest
       * @return ListOdaInstancesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListOdaInstances.ts.html |here} to see how to use ListOdaInstances API.
       */
    listOdaInstances(listOdaInstancesRequest: requests.ListOdaInstancesRequest): Promise<responses.ListOdaInstancesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listOdaInstancesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.OdaInstanceSummary objects
     * contained in responses from the listOdaInstances operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllOdaInstances(request: requests.ListOdaInstancesRequest): AsyncIterableIterator<model.OdaInstanceSummary>;
    /**
     * NOTE: This function is deprecated in favor of listOdaInstancesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listOdaInstances operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllOdaInstancesResponses(request: requests.ListOdaInstancesRequest): AsyncIterableIterator<responses.ListOdaInstancesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.OdaInstanceSummary objects
     * contained in responses from the listOdaInstances operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listOdaInstancesRecordIterator(request: requests.ListOdaInstancesRequest): AsyncIterableIterator<model.OdaInstanceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listOdaInstances operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listOdaInstancesResponseIterator(request: requests.ListOdaInstancesRequest): AsyncIterableIterator<responses.ListOdaInstancesResponse>;
    /**
       * Returns a page of errors for the specified work request.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListWorkRequestErrorsRequest
       * @return ListWorkRequestErrorsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
       */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsRecordIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsResponseIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
       * Returns a page of of log messages for a given work request.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListWorkRequestLogsRequest
       * @return ListWorkRequestLogsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
       */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsRecordIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsResponseIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
       * Returns a page of work requests for the specified compartment.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListWorkRequestsRequest
       * @return ListWorkRequestsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
       */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Starts an inactive Digital Assistant instance. Once active, the instance will be accessible and metering
     * of requests will be started again.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StartOdaInstanceRequest
     * @return StartOdaInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/StartOdaInstance.ts.html |here} to see how to use StartOdaInstance API.
     */
    startOdaInstance(startOdaInstanceRequest: requests.StartOdaInstanceRequest): Promise<responses.StartOdaInstanceResponse>;
    /**
     * Stops an active Digital Assistant instance. Once inactive, the instance will not be accessible and metering
     * of requests will be stopped until the instance is started again. Data associated with the instance
     * is not affected.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StopOdaInstanceRequest
     * @return StopOdaInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/StopOdaInstance.ts.html |here} to see how to use StopOdaInstance API.
     */
    stopOdaInstance(stopOdaInstanceRequest: requests.StopOdaInstanceRequest): Promise<responses.StopOdaInstanceResponse>;
    /**
     * Updates the specified Digital Assistant instance with the information in the request body.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOdaInstanceRequest
     * @return UpdateOdaInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateOdaInstance.ts.html |here} to see how to use UpdateOdaInstance API.
     */
    updateOdaInstance(updateOdaInstanceRequest: requests.UpdateOdaInstanceRequest): Promise<responses.UpdateOdaInstanceResponse>;
    /**
     * Updates the ODA instance attachment
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOdaInstanceAttachmentRequest
     * @return UpdateOdaInstanceAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateOdaInstanceAttachment.ts.html |here} to see how to use UpdateOdaInstanceAttachment API.
     */
    updateOdaInstanceAttachment(updateOdaInstanceAttachmentRequest: requests.UpdateOdaInstanceAttachmentRequest): Promise<responses.UpdateOdaInstanceAttachmentResponse>;
}
export declare enum OdapackageApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class OdapackageClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
       * Starts an asynchronous job to import a package into a Digital Assistant instance.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestId}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateImportedPackageRequest
       * @return CreateImportedPackageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/CreateImportedPackage.ts.html |here} to see how to use CreateImportedPackage API.
       */
    createImportedPackage(createImportedPackageRequest: requests.CreateImportedPackageRequest): Promise<responses.CreateImportedPackageResponse>;
    /**
       * Starts an asynchronous job to delete a package from a Digital Assistant instance.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestId}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param DeleteImportedPackageRequest
       * @return DeleteImportedPackageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/DeleteImportedPackage.ts.html |here} to see how to use DeleteImportedPackage API.
       */
    deleteImportedPackage(deleteImportedPackageRequest: requests.DeleteImportedPackageRequest): Promise<responses.DeleteImportedPackageResponse>;
    /**
     * Returns a list of summaries for imported packages in the instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetImportedPackageRequest
     * @return GetImportedPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetImportedPackage.ts.html |here} to see how to use GetImportedPackage API.
     */
    getImportedPackage(getImportedPackageRequest: requests.GetImportedPackageRequest): Promise<responses.GetImportedPackageResponse>;
    /**
     * Returns details about a package, and how to import it.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPackageRequest
     * @return GetPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/GetPackage.ts.html |here} to see how to use GetPackage API.
     */
    getPackage(getPackageRequest: requests.GetPackageRequest): Promise<responses.GetPackageResponse>;
    /**
     * Returns a list of summaries for imported packages in the instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListImportedPackagesRequest
     * @return ListImportedPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListImportedPackages.ts.html |here} to see how to use ListImportedPackages API.
     */
    listImportedPackages(listImportedPackagesRequest: requests.ListImportedPackagesRequest): Promise<responses.ListImportedPackagesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listImportedPackagesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ImportedPackageSummary objects
     * contained in responses from the listImportedPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllImportedPackages(request: requests.ListImportedPackagesRequest): AsyncIterableIterator<model.ImportedPackageSummary>;
    /**
     * NOTE: This function is deprecated in favor of listImportedPackagesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listImportedPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllImportedPackagesResponses(request: requests.ListImportedPackagesRequest): AsyncIterableIterator<responses.ListImportedPackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ImportedPackageSummary objects
     * contained in responses from the listImportedPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listImportedPackagesRecordIterator(request: requests.ListImportedPackagesRequest): AsyncIterableIterator<model.ImportedPackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listImportedPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listImportedPackagesResponseIterator(request: requests.ListImportedPackagesRequest): AsyncIterableIterator<responses.ListImportedPackagesResponse>;
    /**
       * Returns a page of summaries for packages that are available for import. The optional odaInstanceId query
  * parameter can be used to filter packages that are available for import by a specific instance. If odaInstanceId
  * query parameter is not provided, the returned list will
  * include packages available within the region indicated by the request URL. The optional resourceType query
  * param may be specified to filter packages that contain the indicated resource type. If no resourceType query
  * param is given, packages containing all resource types will be returned. The optional name query parameter can
  * be used to limit the list to packages whose name matches the given name. The optional displayName query
  * parameter can be used to limit the list to packages whose displayName matches the given name. The optional
  * isLatestVersionOnly query parameter can be used to limit the returned list to include only the latest version
  * of any given package. If not specified, all versions of any otherwise matching package will be returned.
  * <p>
  If the `opc-next-page` header appears in the response, then
  * there are more items to retrieve. To get the next page in the subsequent
  * GET request, include the header's value as the `page` query parameter.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListPackagesRequest
       * @return ListPackagesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/ListPackages.ts.html |here} to see how to use ListPackages API.
       */
    listPackages(listPackagesRequest: requests.ListPackagesRequest): Promise<responses.ListPackagesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPackagesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.PackageSummary objects
     * contained in responses from the listPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackages(request: requests.ListPackagesRequest): AsyncIterableIterator<model.PackageSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPackagesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackagesResponses(request: requests.ListPackagesRequest): AsyncIterableIterator<responses.ListPackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.PackageSummary objects
     * contained in responses from the listPackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPackagesRecordIterator(request: requests.ListPackagesRequest): AsyncIterableIterator<model.PackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPackagesResponseIterator(request: requests.ListPackagesRequest): AsyncIterableIterator<responses.ListPackagesResponse>;
    /**
       * Starts an asynchronous job to update a package within a Digital Assistant instance.
  * <p>
  To monitor the status of the job, take the `opc-work-request-id` response
  * header value and use it to call `GET /workRequests/{workRequestId}`.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param UpdateImportedPackageRequest
       * @return UpdateImportedPackageResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/oda/UpdateImportedPackage.ts.html |here} to see how to use UpdateImportedPackage API.
       */
    updateImportedPackage(updateImportedPackageRequest: requests.UpdateImportedPackageRequest): Promise<responses.UpdateImportedPackageResponse>;
}
export {};
