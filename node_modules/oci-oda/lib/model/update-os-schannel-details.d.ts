/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Properties to update an Oracle Streaming Service (OSS) channel.
 */
export interface UpdateOSSChannelDetails extends model.UpdateChannelDetails {
    /**
     * The IDs of the Skills and Digital Assistants that the Channel is routed to.
     */
    "eventSinkBotIds"?: Array<string>;
    /**
     * The topic inbound messages are received on.
     */
    "inboundMessageTopic"?: string;
    /**
     * The topic outbound messages are sent on.
     */
    "outboundMessageTopic"?: string;
    /**
     * The Oracle Streaming Service bootstrap servers.
     */
    "bootstrapServers"?: string;
    /**
     * The security protocol to use when conecting to the Oracle Streaming Service. See Oracle Streaming Service documentation for a list of valid values.
     */
    "securityProtocol"?: string;
    /**
     * The SASL mechanmism to use when conecting to the Oracle Streaming Service. See Oracle Streaming Service documentation for a list of valid values.
     */
    "saslMechanism"?: string;
    /**
     * The tenancy to use when connecting to the Oracle Streaming Service.
     */
    "tenancyName"?: string;
    /**
     * The user name to use when connecting to the Oracle Streaming Service.
     */
    "userName"?: string;
    /**
     * The stream pool OCI to use when connecting to the Oracle Streaming Service.
     */
    "streamPoolId"?: string;
    /**
     * The authentication token to use when connecting to the Oracle Streaming Service.
     */
    "authToken"?: string;
    "type": string;
}
export declare namespace UpdateOSSChannelDetails {
    function getJsonObj(obj: UpdateOSSChannelDetails, isParentJsonObj?: boolean): object;
    const type = "OSS";
    function getDeserializedJsonObj(obj: UpdateOSSChannelDetails, isParentJsonObj?: boolean): object;
}
