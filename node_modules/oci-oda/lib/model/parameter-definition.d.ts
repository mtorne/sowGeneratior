/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A parameter to a resource.
 */
export interface ParameterDefinition {
    /**
     * The name of the parameter
     */
    "name": string;
    /**
     * Enumerated parameter type.
     */
    "type": ParameterDefinition.Type;
    /**
     * Description of the parameter.
     */
    "description"?: string;
    /**
     * Is this parameter required. Ignored for parameters with direction = OUTPUT.
     */
    "isRequired"?: boolean;
    /**
     * Is the data for this parameter sensitive (e.g. should the data be hidden in UI, encrypted if stored, etc.)
     */
    "isSensitive"?: boolean;
    /**
     * Default value for the parameter.
     */
    "defaultValue"?: string;
    /**
     * Used for character string types such as STRING to constrain the length of the value Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "minLength"?: number;
    /**
     * Used for character string types such as STRING to constrain the length of the value Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maxLength"?: number;
    /**
     * Regular expression used to validate the value of a string type such as STRING
     */
    "pattern"?: string;
    /**
     * Is this parameter an input parameter, output parameter, or both?
     */
    "direction"?: ParameterDefinition.Direction;
    /**
     * A forward-slash-delimited 'path' in an imaginary hierarchy, at which this parameter's UI widgets should be placed
     */
    "uiPlacementHint"?: string;
    /**
     * Any configuration needed to help the resource type process this parameter (e.g. link to manifest, etc.).
     */
    "resourceTypeMetadata"?: any;
}
export declare namespace ParameterDefinition {
    enum Type {
        String = "STRING",
        Uri = "URI",
        Url = "URL",
        Number = "NUMBER",
        Boolean = "BOOLEAN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Direction {
        Input = "INPUT",
        Output = "OUTPUT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ParameterDefinition): object;
    function getDeserializedJsonObj(obj: ParameterDefinition): object;
}
