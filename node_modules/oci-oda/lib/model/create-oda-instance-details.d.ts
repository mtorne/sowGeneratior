/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Properties that are required to create a Digital Assistant instance.
 */
export interface CreateOdaInstanceDetails {
    /**
     * User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    "displayName"?: string;
    /**
     * Description of the Digital Assistant instance.
     */
    "description"?: string;
    /**
     * Identifier of the compartment.
     */
    "compartmentId": string;
    /**
     * Shape or size of the instance.
     */
    "shapeName": CreateOdaInstanceDetails.ShapeName;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     */
    "isRoleBasedAccess"?: boolean;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     */
    "identityDomain"?: string;
}
export declare namespace CreateOdaInstanceDetails {
    enum ShapeName {
        Development = "DEVELOPMENT",
        Production = "PRODUCTION"
    }
    function getJsonObj(obj: CreateOdaInstanceDetails): object;
    function getDeserializedJsonObj(obj: CreateOdaInstanceDetails): object;
}
