/**
 * RoverCloudService API
 * A description of the RoverCloudService API.
 * OpenAPI spec version: 20201210
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The status of the rover bundle status by a specified work request id.
 */
export interface RoverBundleStatus {
    /**
     * The progress of the workflow.
     */
    "status": RoverBundleStatus.Status;
    /**
     * Percentage of the work request completed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete"?: number;
    /**
     * The date and time the work request was created. An RFC3339 formatted datetime string.
     *
     */
    "timeAccepted"?: Date;
    /**
     * The date and time the work request was started. An RFC3339 formatted datetime string.
     *
     */
    "timeStarted"?: Date;
    /**
     * The date and time the work request was finished. An RFC3339 formatted datetime string.
     *
     */
    "timeFinished"?: Date;
    /**
     * The full name of the bundle.
     */
    "bundleName"?: string;
    /**
     * The error message if work request fails.
     */
    "errorMessage"?: string;
}
export declare namespace RoverBundleStatus {
    enum Status {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Failed = "FAILED",
        Completed = "COMPLETED",
        Canceling = "CANCELING",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: RoverBundleStatus): object;
    function getDeserializedJsonObj(obj: RoverBundleStatus): object;
}
