/**
 * Service Catalog API
 * Manage solutions in Oracle Cloud Infrastructure Service Catalog.
 * OpenAPI spec version: 20210527
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { ServiceCatalogWaiter } from "./servicecatalog-waiter";
declare const Breaker: any;
export declare enum ServiceCatalogApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ServiceCatalogClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ServiceCatalogWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ServiceCatalogWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ServiceCatalogWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ServiceCatalogWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Replace all associations of a given service catalog in one bulk transaction.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param BulkReplaceServiceCatalogAssociationsRequest
     * @return BulkReplaceServiceCatalogAssociationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/BulkReplaceServiceCatalogAssociations.ts.html |here} to see how to use BulkReplaceServiceCatalogAssociations API.
     */
    bulkReplaceServiceCatalogAssociations(bulkReplaceServiceCatalogAssociationsRequest: requests.BulkReplaceServiceCatalogAssociationsRequest): Promise<responses.BulkReplaceServiceCatalogAssociationsResponse>;
    /**
     * Moves the specified private application from one compartment to another.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangePrivateApplicationCompartmentRequest
     * @return ChangePrivateApplicationCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ChangePrivateApplicationCompartment.ts.html |here} to see how to use ChangePrivateApplicationCompartment API.
     */
    changePrivateApplicationCompartment(changePrivateApplicationCompartmentRequest: requests.ChangePrivateApplicationCompartmentRequest): Promise<responses.ChangePrivateApplicationCompartmentResponse>;
    /**
     * Moves the specified service catalog from one compartment to another.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeServiceCatalogCompartmentRequest
     * @return ChangeServiceCatalogCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ChangeServiceCatalogCompartment.ts.html |here} to see how to use ChangeServiceCatalogCompartment API.
     */
    changeServiceCatalogCompartment(changeServiceCatalogCompartmentRequest: requests.ChangeServiceCatalogCompartmentRequest): Promise<responses.ChangeServiceCatalogCompartmentResponse>;
    /**
     * Creates a private application along with a single package to be hosted.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreatePrivateApplicationRequest
     * @return CreatePrivateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/CreatePrivateApplication.ts.html |here} to see how to use CreatePrivateApplication API.
     */
    createPrivateApplication(createPrivateApplicationRequest: requests.CreatePrivateApplicationRequest): Promise<responses.CreatePrivateApplicationResponse>;
    /**
     * Creates a brand new service catalog in a given compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateServiceCatalogRequest
     * @return CreateServiceCatalogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/CreateServiceCatalog.ts.html |here} to see how to use CreateServiceCatalog API.
     */
    createServiceCatalog(createServiceCatalogRequest: requests.CreateServiceCatalogRequest): Promise<responses.CreateServiceCatalogResponse>;
    /**
     * Creates an association between service catalog and a resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateServiceCatalogAssociationRequest
     * @return CreateServiceCatalogAssociationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/CreateServiceCatalogAssociation.ts.html |here} to see how to use CreateServiceCatalogAssociation API.
     */
    createServiceCatalogAssociation(createServiceCatalogAssociationRequest: requests.CreateServiceCatalogAssociationRequest): Promise<responses.CreateServiceCatalogAssociationResponse>;
    /**
     * Deletes an existing private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeletePrivateApplicationRequest
     * @return DeletePrivateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/DeletePrivateApplication.ts.html |here} to see how to use DeletePrivateApplication API.
     */
    deletePrivateApplication(deletePrivateApplicationRequest: requests.DeletePrivateApplicationRequest): Promise<responses.DeletePrivateApplicationResponse>;
    /**
     * Deletes the specified service catalog from the compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteServiceCatalogRequest
     * @return DeleteServiceCatalogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/DeleteServiceCatalog.ts.html |here} to see how to use DeleteServiceCatalog API.
     */
    deleteServiceCatalog(deleteServiceCatalogRequest: requests.DeleteServiceCatalogRequest): Promise<responses.DeleteServiceCatalogResponse>;
    /**
     * Removes an association between service catalog and a resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteServiceCatalogAssociationRequest
     * @return DeleteServiceCatalogAssociationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/DeleteServiceCatalogAssociation.ts.html |here} to see how to use DeleteServiceCatalogAssociation API.
     */
    deleteServiceCatalogAssociation(deleteServiceCatalogAssociationRequest: requests.DeleteServiceCatalogAssociationRequest): Promise<responses.DeleteServiceCatalogAssociationResponse>;
    /**
     * Gets the details of the specified private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPrivateApplicationRequest
     * @return GetPrivateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetPrivateApplication.ts.html |here} to see how to use GetPrivateApplication API.
     */
    getPrivateApplication(getPrivateApplicationRequest: requests.GetPrivateApplicationRequest): Promise<responses.GetPrivateApplicationResponse>;
    /**
     * Downloads the binary payload of the logo image of the private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPrivateApplicationActionDownloadLogoRequest
     * @return GetPrivateApplicationActionDownloadLogoResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetPrivateApplicationActionDownloadLogo.ts.html |here} to see how to use GetPrivateApplicationActionDownloadLogo API.
     */
    getPrivateApplicationActionDownloadLogo(getPrivateApplicationActionDownloadLogoRequest: requests.GetPrivateApplicationActionDownloadLogoRequest): Promise<responses.GetPrivateApplicationActionDownloadLogoResponse>;
    /**
     * Gets the details of a specific package within a given private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPrivateApplicationPackageRequest
     * @return GetPrivateApplicationPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetPrivateApplicationPackage.ts.html |here} to see how to use GetPrivateApplicationPackage API.
     */
    getPrivateApplicationPackage(getPrivateApplicationPackageRequest: requests.GetPrivateApplicationPackageRequest): Promise<responses.GetPrivateApplicationPackageResponse>;
    /**
     * Downloads the configuration that was used to create the private application package.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPrivateApplicationPackageActionDownloadConfigRequest
     * @return GetPrivateApplicationPackageActionDownloadConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetPrivateApplicationPackageActionDownloadConfig.ts.html |here} to see how to use GetPrivateApplicationPackageActionDownloadConfig API.
     */
    getPrivateApplicationPackageActionDownloadConfig(getPrivateApplicationPackageActionDownloadConfigRequest: requests.GetPrivateApplicationPackageActionDownloadConfigRequest): Promise<responses.GetPrivateApplicationPackageActionDownloadConfigResponse>;
    /**
     * Gets detailed information about the service catalog including name, compartmentId
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetServiceCatalogRequest
     * @return GetServiceCatalogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetServiceCatalog.ts.html |here} to see how to use GetServiceCatalog API.
     */
    getServiceCatalog(getServiceCatalogRequest: requests.GetServiceCatalogRequest): Promise<responses.GetServiceCatalogResponse>;
    /**
     * Gets detailed information about specific service catalog association.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetServiceCatalogAssociationRequest
     * @return GetServiceCatalogAssociationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetServiceCatalogAssociation.ts.html |here} to see how to use GetServiceCatalogAssociation API.
     */
    getServiceCatalogAssociation(getServiceCatalogAssociationRequest: requests.GetServiceCatalogAssociationRequest): Promise<responses.GetServiceCatalogAssociationResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists all the applications in a service catalog or a tenancy.
     * If no parameter is specified, all catalogs from all compartments in
     * the tenancy will be scanned for any type of content.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListApplicationsRequest
     * @return ListApplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListApplications.ts.html |here} to see how to use ListApplications API.
     */
    listApplications(listApplicationsRequest: requests.ListApplicationsRequest): Promise<responses.ListApplicationsResponse>;
    /**
     * Lists the packages in the specified private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPrivateApplicationPackagesRequest
     * @return ListPrivateApplicationPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListPrivateApplicationPackages.ts.html |here} to see how to use ListPrivateApplicationPackages API.
     */
    listPrivateApplicationPackages(listPrivateApplicationPackagesRequest: requests.ListPrivateApplicationPackagesRequest): Promise<responses.ListPrivateApplicationPackagesResponse>;
    /**
     * Lists all the private applications in a given compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPrivateApplicationsRequest
     * @return ListPrivateApplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListPrivateApplications.ts.html |here} to see how to use ListPrivateApplications API.
     */
    listPrivateApplications(listPrivateApplicationsRequest: requests.ListPrivateApplicationsRequest): Promise<responses.ListPrivateApplicationsResponse>;
    /**
     * Lists all the resource associations for a specific service catalog.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListServiceCatalogAssociationsRequest
     * @return ListServiceCatalogAssociationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListServiceCatalogAssociations.ts.html |here} to see how to use ListServiceCatalogAssociations API.
     */
    listServiceCatalogAssociations(listServiceCatalogAssociationsRequest: requests.ListServiceCatalogAssociationsRequest): Promise<responses.ListServiceCatalogAssociationsResponse>;
    /**
     * Lists all the service catalogs in the given compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListServiceCatalogsRequest
     * @return ListServiceCatalogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListServiceCatalogs.ts.html |here} to see how to use ListServiceCatalogs API.
     */
    listServiceCatalogs(listServiceCatalogsRequest: requests.ListServiceCatalogsRequest): Promise<responses.ListServiceCatalogsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Updates the details of an existing private application.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdatePrivateApplicationRequest
     * @return UpdatePrivateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/UpdatePrivateApplication.ts.html |here} to see how to use UpdatePrivateApplication API.
     */
    updatePrivateApplication(updatePrivateApplicationRequest: requests.UpdatePrivateApplicationRequest): Promise<responses.UpdatePrivateApplicationResponse>;
    /**
     * Updates the details of a previously created service catalog.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateServiceCatalogRequest
     * @return UpdateServiceCatalogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/servicecatalog/UpdateServiceCatalog.ts.html |here} to see how to use UpdateServiceCatalog API.
     */
    updateServiceCatalog(updateServiceCatalogRequest: requests.UpdateServiceCatalogRequest): Promise<responses.UpdateServiceCatalogResponse>;
}
export {};
