/**
 * Oracle Cloud Migrations API
 * A description of the Oracle Cloud Migrations API.
 * OpenAPI spec version: 20220919
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Description of the migration plan.
 */
export interface MigrationPlan {
    /**
     * The unique Oracle ID (OCID) that is immutable on creation.
     */
    "id": string;
    /**
     * The OCID of the compartment containing the migration plan.
     */
    "compartmentId": string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    "displayName"?: string;
    /**
     * The time when the migration plan was created. An RFC3339 formatted datetime string.
     */
    "timeCreated": Date;
    /**
     * The time when the migration plan was updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the migration plan.
     */
    "lifecycleState": MigrationPlan.LifecycleState;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: string;
    /**
     * The OCID of the associated migration.
     */
    "migrationId": string;
    /**
     * List of strategies for the resources to be migrated.
     */
    "strategies": Array<model.ResourceAssessmentStrategy>;
    "migrationPlanStats"?: model.MigrationPlanStats;
    /**
     * Limits of the resources that are needed for migration. Example: {\"BlockVolume\": 2, \"VCN\": 1}
     */
    "calculatedLimits": {
        [key: string]: number;
    };
    /**
     * List of target environments.
     */
    "targetEnvironments": Array<model.TargetEnvironment>;
    /**
     * OCID of the referenced ORM job.
     */
    "referenceToRmsStack"?: string;
    /**
     * Source migraiton plan ID to be cloned.
     */
    "sourceMigrationPlanId"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace MigrationPlan {
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        NeedsAttention = "NEEDS_ATTENTION",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: MigrationPlan): object;
    function getDeserializedJsonObj(obj: MigrationPlan): object;
}
