"use strict";
/**
 * Oracle Cloud Migrations API
 * A description of the Oracle Cloud Migrations API.
 * OpenAPI spec version: 20220919
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompatibilityMessage = void 0;
var CompatibilityMessage;
(function (CompatibilityMessage) {
    let Severity;
    (function (Severity) {
        Severity["Error"] = "ERROR";
        Severity["Warning"] = "WARNING";
        Severity["Info"] = "INFO";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Severity["UnknownValue"] = "UNKNOWN_VALUE";
    })(Severity = CompatibilityMessage.Severity || (CompatibilityMessage.Severity = {}));
    let Name;
    (function (Name) {
        Name["NotEnoughData"] = "NOT_ENOUGH_DATA";
        Name["InvalidData"] = "INVALID_DATA";
        Name["CpuCompatibilityWarning"] = "CPU_COMPATIBILITY_WARNING";
        Name["CpuMetricInfo"] = "CPU_METRIC_INFO";
        Name["MemoryCompatibilityWarning"] = "MEMORY_COMPATIBILITY_WARNING";
        Name["MemoryMetricInfo"] = "MEMORY_METRIC_INFO";
        Name["VnicsCompatibilityWarning"] = "VNICS_COMPATIBILITY_WARNING";
        Name["BandwidthCompatibilityWarning"] = "BANDWIDTH_COMPATIBILITY_WARNING";
        Name["GpuCompatibilityWarning"] = "GPU_COMPATIBILITY_WARNING";
        Name["OsWarning"] = "OS_WARNING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Name["UnknownValue"] = "UNKNOWN_VALUE";
    })(Name = CompatibilityMessage.Name || (CompatibilityMessage.Name = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    CompatibilityMessage.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    CompatibilityMessage.getDeserializedJsonObj = getDeserializedJsonObj;
})(CompatibilityMessage = exports.CompatibilityMessage || (exports.CompatibilityMessage = {}));
//# sourceMappingURL=compatibility-message.js.map