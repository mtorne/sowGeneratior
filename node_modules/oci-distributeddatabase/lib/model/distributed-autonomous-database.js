"use strict";
/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage the Globally distributed databases.
 * OpenAPI spec version: 20250101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributedAutonomousDatabase = void 0;
const model = __importStar(require("../model"));
var DistributedAutonomousDatabase;
(function (DistributedAutonomousDatabase) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Failed"] = "FAILED";
        LifecycleState["NeedsAttention"] = "NEEDS_ATTENTION";
        LifecycleState["Inactive"] = "INACTIVE";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Creating"] = "CREATING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = DistributedAutonomousDatabase.LifecycleState || (DistributedAutonomousDatabase.LifecycleState = {}));
    let ShardingMethod;
    (function (ShardingMethod) {
        ShardingMethod["User"] = "USER";
        ShardingMethod["System"] = "SYSTEM";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ShardingMethod["UnknownValue"] = "UNKNOWN_VALUE";
    })(ShardingMethod = DistributedAutonomousDatabase.ShardingMethod || (DistributedAutonomousDatabase.ShardingMethod = {}));
    let DbWorkload;
    (function (DbWorkload) {
        DbWorkload["Oltp"] = "OLTP";
        DbWorkload["Dw"] = "DW";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DbWorkload["UnknownValue"] = "UNKNOWN_VALUE";
    })(DbWorkload = DistributedAutonomousDatabase.DbWorkload || (DistributedAutonomousDatabase.DbWorkload = {}));
    let ReplicationMethod;
    (function (ReplicationMethod) {
        ReplicationMethod["Raft"] = "RAFT";
        ReplicationMethod["Dg"] = "DG";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ReplicationMethod["UnknownValue"] = "UNKNOWN_VALUE";
    })(ReplicationMethod = DistributedAutonomousDatabase.ReplicationMethod || (DistributedAutonomousDatabase.ReplicationMethod = {}));
    let DbDeploymentType;
    (function (DbDeploymentType) {
        DbDeploymentType["AdbD"] = "ADB_D";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DbDeploymentType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DbDeploymentType = DistributedAutonomousDatabase.DbDeploymentType || (DistributedAutonomousDatabase.DbDeploymentType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "connectionStrings": obj.connectionStrings
                ? model.DistributedAutonomousDatabaseConnectionString.getJsonObj(obj.connectionStrings)
                : undefined,
            "latestGsmImage": obj.latestGsmImage
                ? model.DistributedAutonomousDatabaseGsmImage.getJsonObj(obj.latestGsmImage)
                : undefined,
            "shardDetails": obj.shardDetails
                ? obj.shardDetails.map(item => {
                    return model.DistributedAutonomousDatabaseShard.getJsonObj(item);
                })
                : undefined,
            "catalogDetails": obj.catalogDetails
                ? obj.catalogDetails.map(item => {
                    return model.DistributedAutonomousDatabaseCatalog.getJsonObj(item);
                })
                : undefined,
            "gsmDetails": obj.gsmDetails
                ? obj.gsmDetails.map(item => {
                    return model.DistributedAutonomousDatabaseGsm.getJsonObj(item);
                })
                : undefined,
            "metadata": obj.metadata
                ? model.DistributedAutonomousDbMetadata.getJsonObj(obj.metadata)
                : undefined
        });
        return jsonObj;
    }
    DistributedAutonomousDatabase.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "connectionStrings": obj.connectionStrings
                ? model.DistributedAutonomousDatabaseConnectionString.getDeserializedJsonObj(obj.connectionStrings)
                : undefined,
            "latestGsmImage": obj.latestGsmImage
                ? model.DistributedAutonomousDatabaseGsmImage.getDeserializedJsonObj(obj.latestGsmImage)
                : undefined,
            "shardDetails": obj.shardDetails
                ? obj.shardDetails.map(item => {
                    return model.DistributedAutonomousDatabaseShard.getDeserializedJsonObj(item);
                })
                : undefined,
            "catalogDetails": obj.catalogDetails
                ? obj.catalogDetails.map(item => {
                    return model.DistributedAutonomousDatabaseCatalog.getDeserializedJsonObj(item);
                })
                : undefined,
            "gsmDetails": obj.gsmDetails
                ? obj.gsmDetails.map(item => {
                    return model.DistributedAutonomousDatabaseGsm.getDeserializedJsonObj(item);
                })
                : undefined,
            "metadata": obj.metadata
                ? model.DistributedAutonomousDbMetadata.getDeserializedJsonObj(obj.metadata)
                : undefined
        });
        return jsonObj;
    }
    DistributedAutonomousDatabase.getDeserializedJsonObj = getDeserializedJsonObj;
})(DistributedAutonomousDatabase = exports.DistributedAutonomousDatabase || (exports.DistributedAutonomousDatabase = {}));
//# sourceMappingURL=distributed-autonomous-database.js.map