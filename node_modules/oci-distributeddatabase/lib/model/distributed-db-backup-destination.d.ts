/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage the Globally distributed databases.
 * OpenAPI spec version: 20250101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Backup destination details
 */
export interface DistributedDbBackupDestination {
    /**
     * Type of the database backup destination.
     */
    "type": DistributedDbBackupDestination.Type;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     */
    "id"?: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) user that is used to access the Recovery Appliance.
     */
    "vpcUser"?: string;
    /**
     * For a RECOVERY_APPLIANCE backup destination, the password for the VPC user that is used to access the Recovery Appliance.
     */
    "vpcPassword"?: string;
    /**
     * Indicates whether Zero Data Loss functionality is enabled for a Recovery Appliance backup destination in an Autonomous Container Database. When enabled, the database automatically ships all redo logs in real-time to the Recovery Appliance for a Zero Data Loss recovery setup (sub-second RPO). Defaults to {@code TRUE} if no value is given.
     */
    "isZeroDataLossEnabled"?: boolean;
    /**
     * Proxy URL to connect to object store.
     */
    "internetProxy"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DBRS policy used for backup.
     */
    "dbrsPolicyId"?: string;
    /**
     * Indicates whether the backup destination is cross-region or local region.
     */
    "isRemote"?: boolean;
    /**
     * The name of the remote region where the remote automatic incremental backups will be stored.
     * For information about valid region names, see
     * [Regions and Availability Domains](https://docs.oracle.com/iaas/Content/General/Concepts/regions.htm).
     *
     */
    "remoteRegion"?: string;
}
export declare namespace DistributedDbBackupDestination {
    enum Type {
        Nfs = "NFS",
        RecoveryAppliance = "RECOVERY_APPLIANCE",
        ObjectStore = "OBJECT_STORE",
        Local = "LOCAL",
        Dbrs = "DBRS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DistributedDbBackupDestination): object;
    function getDeserializedJsonObj(obj: DistributedDbBackupDestination): object;
}
