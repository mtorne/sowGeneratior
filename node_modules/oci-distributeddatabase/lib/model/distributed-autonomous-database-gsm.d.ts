/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage the Globally distributed databases.
 * OpenAPI spec version: 20250101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of global service manager(GSM also known as shard director) instances for the Globally distributed autonomous database.
 */
export interface DistributedAutonomousDatabaseGsm {
    /**
     * Name of the Global service manager instance
     */
    "name": string;
    /**
     * The compute count for the Global service manager instance. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "computeCount": number;
    /**
     * The data disk group size to be allocated in GBs for the Global service manager instance. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "dataStorageSizeInGbs": number;
    /**
     * The time the Global service manager instance was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the Global service manager instance was last updated. An RFC3339 formatted datetime string
     */
    "timeUpdated": Date;
    /**
     * Status of the gsm for the Globally distributed autonomous database.
     */
    "status": DistributedAutonomousDatabaseGsm.Status;
    /**
     * The time the ssl certificate associated with Global service manager expires. An RFC3339 formatted datetime string
     */
    "timeSslCertificateExpires"?: Date;
    /**
     * the identifier of the underlying supporting resource.
     */
    "supportingResourceId"?: string;
    "gsmImageDetails"?: model.DistributedAutonomousDatabaseGsmImage;
    "metadata"?: model.DistributedAutonomousDbMetadata;
}
export declare namespace DistributedAutonomousDatabaseGsm {
    enum Status {
        Failed = "FAILED",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Updating = "UPDATING",
        Creating = "CREATING",
        Created = "CREATED",
        ReadyForConfiguration = "READY_FOR_CONFIGURATION",
        Configured = "CONFIGURED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DistributedAutonomousDatabaseGsm): object;
    function getDeserializedJsonObj(obj: DistributedAutonomousDatabaseGsm): object;
}
