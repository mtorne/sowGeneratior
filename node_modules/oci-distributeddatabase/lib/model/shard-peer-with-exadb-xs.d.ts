/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage the Globally distributed databases.
 * OpenAPI spec version: 20250101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of the shard peer
 */
export interface ShardPeerWithExadbXs {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VmCluster.
     */
    "vmClusterId": string;
    /**
     * The name of the shardGroup for the peer.
     */
    "shardGroup": string;
    /**
     * Status of catalog with VmCluster for the Globally ditributed database.
     */
    "status": ShardPeerWithExadbXs.Status;
    /**
     * the identifier of the underlying supporting resource.
     */
    "supportingResourceId"?: string;
    /**
     * the identifier of the container database for underlying supporting resource.
     */
    "containerDatabaseId"?: string;
    /**
     * The time the shard peer was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the shard peer was last updated. An RFC3339 formatted datetime string
     */
    "timeUpdated": Date;
    "metadata"?: model.DistributedDbMetadata;
}
export declare namespace ShardPeerWithExadbXs {
    enum Status {
        Failed = "FAILED",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Updating = "UPDATING",
        Creating = "CREATING",
        Created = "CREATED",
        ReadyForConfiguration = "READY_FOR_CONFIGURATION",
        Configured = "CONFIGURED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ShardPeerWithExadbXs): object;
    function getDeserializedJsonObj(obj: ShardPeerWithExadbXs): object;
}
