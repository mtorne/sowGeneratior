/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage the Globally distributed databases.
 * OpenAPI spec version: 20250101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Backup Options
 * To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
 *
 */
export interface DistributedDbBackupConfig {
    /**
     * If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     */
    "isAutoBackupEnabled"?: boolean;
    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups.
     * This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window.
     * When the value is updated, it is applied to all existing automatic backups.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "recoveryWindowInDays"?: number;
    /**
     * Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).
     * Example: {@code SLOT_TWO}
     *
     */
    "autoBackupWindow"?: DistributedDbBackupConfig.AutoBackupWindow;
    /**
     * Time window selected for initiating full backup for the database system. There are twelve available two-hour time windows. If no option is selected, the value is null and a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).
     * Example: {@code SLOT_TWO}
     *
     */
    "autoFullBackupWindow"?: DistributedDbBackupConfig.AutoFullBackupWindow;
    /**
     * Day of the week the full backup should be applied on the database system. If no option is selected, the value is null and we will default to Sunday.
     */
    "autoFullBackupDay"?: DistributedDbBackupConfig.AutoFullBackupDay;
    /**
     * If set to true, configures automatic full backups in the local region (the region of the DB system) for the first backup run immediately.
     */
    "canRunImmediateFullBackup"?: boolean;
    /**
     * If set to true, configures automatic incremental backups in the local region (the region of the DB system) and the remote region with a default frequency of 1 hour.
     * If you previously used RMAN or dbcli to configure backups, using the Console or the API for manged backups creates a new backup configuration for your database. The new configuration replaces the configuration created with RMAN or dbcli.
     * This means that you can no longer rely on your previously configured unmanaged backups to work.
     *
     */
    "isRemoteBackupEnabled"?: boolean;
    /**
     * The name of the remote region where the remote automatic incremental backups will be stored.
     * For information about valid region names, see
     * [Regions and Availability Domains](https://docs.oracle.com/iaas/Content/General/Concepts/regions.htm).
     *
     */
    "remoteRegion"?: string;
    /**
     * Backup destination details.
     */
    "backupDestinationDetails"?: Array<model.DistributedDbBackupDestination>;
    /**
     * This defines when the backups will be deleted. - IMMEDIATE option keep the backup for predefined time i.e 72 hours and then delete permanently... - RETAIN will keep the backups as per the policy defined for database backups.
     */
    "backupDeletionPolicy"?: DistributedDbBackupConfig.BackupDeletionPolicy;
}
export declare namespace DistributedDbBackupConfig {
    enum AutoBackupWindow {
        SlotOne = "SLOT_ONE",
        SlotTwo = "SLOT_TWO",
        SlotThree = "SLOT_THREE",
        SlotFour = "SLOT_FOUR",
        SlotFive = "SLOT_FIVE",
        SlotSix = "SLOT_SIX",
        SlotSeven = "SLOT_SEVEN",
        SlotEight = "SLOT_EIGHT",
        SlotNine = "SLOT_NINE",
        SlotTen = "SLOT_TEN",
        SlotEleven = "SLOT_ELEVEN",
        SlotTwelve = "SLOT_TWELVE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AutoFullBackupWindow {
        SlotOne = "SLOT_ONE",
        SlotTwo = "SLOT_TWO",
        SlotThree = "SLOT_THREE",
        SlotFour = "SLOT_FOUR",
        SlotFive = "SLOT_FIVE",
        SlotSix = "SLOT_SIX",
        SlotSeven = "SLOT_SEVEN",
        SlotEight = "SLOT_EIGHT",
        SlotNine = "SLOT_NINE",
        SlotTen = "SLOT_TEN",
        SlotEleven = "SLOT_ELEVEN",
        SlotTwelve = "SLOT_TWELVE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AutoFullBackupDay {
        Sunday = "SUNDAY",
        Monday = "MONDAY",
        Tuesday = "TUESDAY",
        Wednesday = "WEDNESDAY",
        Thursday = "THURSDAY",
        Friday = "FRIDAY",
        Saturday = "SATURDAY",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum BackupDeletionPolicy {
        DeleteImmediately = "DELETE_IMMEDIATELY",
        DeleteAfterRetentionPeriod = "DELETE_AFTER_RETENTION_PERIOD",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DistributedDbBackupConfig): object;
    function getDeserializedJsonObj(obj: DistributedDbBackupConfig): object;
}
