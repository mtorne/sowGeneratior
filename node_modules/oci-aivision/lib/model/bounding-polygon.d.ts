/**
 * Vision API
 * Using Vision, you can upload images to detect and classify objects in them. If you have lots of images, you can process them in batch using asynchronous API endpoints. Vision's features are thematically split between Document AI for document-centric images, and Image Analysis for object and scene-based images. Pretrained models and custom models are supported.
 * OpenAPI spec version: 20220125
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The object-bounding polygon box.
 */
export interface BoundingPolygon {
    /**
     * An array of normalized points defining the polygon's perimeter, with an implicit segment between subsequent points and between the first and last point.
     * Rectangles are defined with four points. For example, {@code [{\"x\": 0, \"y\": 0}, {\"x\": 1, \"y\": 0}, {\"x\": 1, \"y\": 0.5}, {\"x\": 0, \"y\": 0.5}]} represents the top half of an image.
     *
     */
    "normalizedVertices": Array<model.NormalizedVertex>;
}
export declare namespace BoundingPolygon {
    function getJsonObj(obj: BoundingPolygon): object;
    function getDeserializedJsonObj(obj: BoundingPolygon): object;
}
