/**
 *
 *
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/devops/ListRefs.ts.html |here} to see how to use ListRefsRequest.
 */
export interface ListRefsRequest extends common.BaseRequest {
    /**
     * Unique repository identifier.
     */
    "repositoryId": string;
    /**
     * Reference type to distinguish between branch and tag. If it is not specified, all references are returned.
     */
    "refType"?: ListRefsRequest.RefType;
    /**
     * Commit ID in a repository.
     */
    "commitId"?: string;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * A filter to return only resources that match the given reference name.
     */
    "refName"?: string;
    /**
     * The sort order to use. Use either ascending or descending.
     */
    "sortOrder"?: model.SortOrder;
    /**
     * The field to sort by. Only one sort order may be provided. Default order for reference name is ascending. Default order for reference type is ascending. If no value is specified reference name is default.
     *
     */
    "sortBy"?: ListRefsRequest.SortBy;
    /**
     * Unique Oracle-assigned identifier for the request.  If you need to contact Oracle about a particular request, provide the request ID.
     */
    "opcRequestId"?: string;
}
export declare namespace ListRefsRequest {
    enum RefType {
        Branch = "BRANCH",
        Tag = "TAG"
    }
    enum SortBy {
        RefType = "refType",
        RefName = "refName"
    }
}
