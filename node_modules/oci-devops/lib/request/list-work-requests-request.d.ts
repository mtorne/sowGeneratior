/**
 *
 *
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/devops/ListWorkRequests.ts.html |here} to see how to use ListWorkRequestsRequest.
 */
export interface ListWorkRequestsRequest extends common.BaseRequest {
    /**
     * The OCID of the compartment in which to list resources.
     */
    "compartmentId": string;
    /**
     * The ID of the asynchronous work request.
     */
    "workRequestId"?: string;
    /**
     * A filter to return only resources where the lifecycle state matches the given operation status.
     */
    "status"?: model.OperationStatus;
    /**
     * The ID of the resource affected by the work request.
     */
    "resourceId"?: string;
    /**
     * Unique Oracle-assigned identifier for the request.  If you need to contact Oracle about a particular request, provide the request ID.
     */
    "opcRequestId"?: string;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The sort order to use. Use either ascending or descending.
     */
    "sortOrder"?: model.SortOrder;
    /**
     * The field to sort by. Only one sort order can be provided. Default sort order is descending and is based on the timeAccepted field.
     */
    "sortBy"?: ListWorkRequestsRequest.SortBy;
    /**
     * A filter to return only resources where their Operation Types matches the parameter operation types
     */
    "operationTypeMultiValueQuery"?: Array<string>;
}
export declare namespace ListWorkRequestsRequest {
    enum SortBy {
        TimeAccepted = "timeAccepted"
    }
}
