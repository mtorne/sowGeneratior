/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A rule which must be satisfied for matching pull requests before the pull request can be merged
 */
export interface UpdateApprovalRuleDetails {
    /**
     * Name which is used to uniquely identify an approval rule.
     */
    "name": string;
    /**
     * Branch name where pull requests targeting the branch must satisfy the approval rule. This value being null means the rule applies to all pull requests
     */
    "destinationBranch"?: string;
    /**
     * List of users who must provide approvals up to the minApprovalsCount specified in the rule. An empty list means the approvals can come from any user.
     */
    "reviewers"?: Array<model.UpdateReviewerDetails>;
    /**
     * Minimum number of approvals which must be provided by the reviewers specified in the list before the rule can be satisfied Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "minApprovalsCount": number;
}
export declare namespace UpdateApprovalRuleDetails {
    function getJsonObj(obj: UpdateApprovalRuleDetails): object;
    function getDeserializedJsonObj(obj: UpdateApprovalRuleDetails): object;
}
