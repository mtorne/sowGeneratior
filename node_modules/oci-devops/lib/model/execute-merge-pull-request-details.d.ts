/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about the merge.
 */
export interface ExecuteMergePullRequestDetails extends model.MergePullRequestDetails {
    /**
     * The commit message to be shown for this pull request in the destination branch after merge is done.
     */
    "commitMessage": string;
    /**
     * the strategy of merging.
     */
    "mergeStrategy": model.MergeStrategy;
    /**
     * What needs to happen after the merge is done successfully.
     */
    "postMergeAction"?: ExecuteMergePullRequestDetails.PostMergeAction;
    "actionType": string;
}
export declare namespace ExecuteMergePullRequestDetails {
    enum PostMergeAction {
        DeleteSourceBranch = "DELETE_SOURCE_BRANCH",
        KeepSourceBranch = "KEEP_SOURCE_BRANCH"
    }
    function getJsonObj(obj: ExecuteMergePullRequestDetails, isParentJsonObj?: boolean): object;
    const actionType = "EXECUTE";
    function getDeserializedJsonObj(obj: ExecuteMergePullRequestDetails, isParentJsonObj?: boolean): object;
}
