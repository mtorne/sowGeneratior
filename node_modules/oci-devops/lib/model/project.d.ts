/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * DevOps project groups resources needed to implement the CI/CD workload. DevOps resources include artifacts, pipelines, and environments.
 */
export interface Project {
    /**
     * Unique identifier that is immutable on creation.
     */
    "id": string;
    /**
     * Project name (case-sensitive).
     */
    "name": string;
    /**
     * Project description.
     */
    "description"?: string;
    /**
     * The OCID of the compartment where the project is created.
     */
    "compartmentId": string;
    /**
     * Namespace associated with the project.
     */
    "namespace"?: string;
    "notificationConfig": model.NotificationConfig;
    /**
     * Time the project was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    "timeCreated"?: Date;
    /**
     * Time the project was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the project.
     */
    "lifecycleState"?: Project.LifecycleState;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: {@code {\"bar-key\": \"value\"}}
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace Project {
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Project): object;
    function getDeserializedJsonObj(obj: Project): object;
}
