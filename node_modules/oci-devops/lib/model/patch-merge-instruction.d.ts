/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * An operation that recursively updates items of the selection, or adding the value if the selection is empty.
 * If the value is not an object, it is used directly, otherwise each key-value member is used
 * to create or update a member of the same name in the target and the same process is applied recursively for each object-typed value
 * (similar to [RFC 7396](https://tools.ietf.org/html/rfc7396#section-2) JSON Merge Patch, except that null values are copied
 * rather than transformed into deletions).
 * NOT_FOUND exceptions are handled by creating the implied containing structure.
 * To avoid referential errors if an item's descendant is also in the selection, items of the selection are processed in order of decreasing depth.
 *
 */
export interface PatchMergeInstruction extends model.PatchInstruction {
    /**
     * A value to be merged into the target.
     */
    "value"?: any;
    "operation": string;
}
export declare namespace PatchMergeInstruction {
    function getJsonObj(obj: PatchMergeInstruction, isParentJsonObj?: boolean): object;
    const operation = "MERGE";
    function getDeserializedJsonObj(obj: PatchMergeInstruction, isParentJsonObj?: boolean): object;
}
