/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Specifies the execution details for Kubernetes (OKE) helm chart deployment stage.
 */
export interface OkeHelmChartDeploymentStageExecutionProgress extends model.DeployStageExecutionProgress {
    /**
     * Release name of the Helm chart.
     */
    "releaseName"?: string;
    /**
     * The URL of an OCIR repository.
     */
    "chartUrl"?: string;
    /**
     * The version of the helm chart stored in OCIR repository.
     */
    "version"?: string;
    /**
     * Default namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    "namespace"?: string;
    /**
     * Helm Diff output
     * Example:
     * Helm diff was successful
     * data:
     * - greeting: Version 1.0
     * + greeting: Version 1.1
     *
     */
    "helmDiff"?: string;
    "deployStageType": string;
}
export declare namespace OkeHelmChartDeploymentStageExecutionProgress {
    function getJsonObj(obj: OkeHelmChartDeploymentStageExecutionProgress, isParentJsonObj?: boolean): object;
    const deployStageType = "OKE_HELM_CHART_DEPLOYMENT";
    function getDeserializedJsonObj(obj: OkeHelmChartDeploymentStageExecutionProgress, isParentJsonObj?: boolean): object;
}
