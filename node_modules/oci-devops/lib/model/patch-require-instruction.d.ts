/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A precondition operation that requires a selection to be non-empty, and optionally to include an item with a specified value
 * (useful for asserting that a value exists before attempting to update it, avoiding accidental creation).
 * It fails if the selection is empty, or if value is provided and no item of the selection matches it.
 *
 */
export interface PatchRequireInstruction extends model.PatchInstruction {
    /**
     * A value to be compared against each item of the selection.
     * If this value is an object, then it matches any item that would be unaffected by applying this value as a merge operation.
     * Otherwise, it matches any item to which it is equal according to the rules of [JSON Schema](https://tools.ietf.org/html/draft-handrews-json-schema-00#section-4.2.3).
     *
     */
    "value"?: any;
    "operation": string;
}
export declare namespace PatchRequireInstruction {
    function getJsonObj(obj: PatchRequireInstruction, isParentJsonObj?: boolean): object;
    const operation = "REQUIRE";
    function getDeserializedJsonObj(obj: PatchRequireInstruction, isParentJsonObj?: boolean): object;
}
