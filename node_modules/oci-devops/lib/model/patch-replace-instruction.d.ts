/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * An operation that \"puts\" a value, replacing every item of the selection with it, or creating it if the selection is empty.
 * NOT_FOUND exceptions are handled by creating the implied containing structure (but note that this may put the target in an invalid state,
 * which can be prevented by use of precondition operations).
 * To avoid referential errors if an item's descendant is also in the selection, items of the selection are processed in order of decreasing depth.
 *
 */
export interface PatchReplaceInstruction extends model.PatchInstruction {
    /**
     * A value to be added into the target.
     */
    "value": any;
    "operation": string;
}
export declare namespace PatchReplaceInstruction {
    function getJsonObj(obj: PatchReplaceInstruction, isParentJsonObj?: boolean): object;
    const operation = "REPLACE";
    function getDeserializedJsonObj(obj: PatchReplaceInstruction, isParentJsonObj?: boolean): object;
}
