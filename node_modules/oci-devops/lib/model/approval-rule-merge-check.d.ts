/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](https://docs.oracle.com/iaas/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The status of the approval rules.
 */
export interface ApprovalRuleMergeCheck extends model.MergeCheck {
    /**
     * The name of the rule.
     */
    "ruleName"?: string;
    /**
     * The status of the approval rule.
     */
    "status"?: ApprovalRuleMergeCheck.Status;
    /**
     * The number of total approvals needed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalApprovalCount"?: number;
    /**
     * The current number of approvals. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "currentApprovalCount"?: number;
    /**
     * The list of default reviewers.
     */
    "reviewers"?: Array<model.PrincipalDetails>;
    /**
     * The level of rule.
     */
    "level"?: ApprovalRuleMergeCheck.Level;
    "type": string;
}
export declare namespace ApprovalRuleMergeCheck {
    enum Status {
        NeedsApproval = "NEEDS_APPROVAL",
        Succeeded = "SUCCEEDED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Level {
        Project = "PROJECT",
        Repository = "REPOSITORY",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ApprovalRuleMergeCheck, isParentJsonObj?: boolean): object;
    const type = "APPROVAL_RULE";
    function getDeserializedJsonObj(obj: ApprovalRuleMergeCheck, isParentJsonObj?: boolean): object;
}
