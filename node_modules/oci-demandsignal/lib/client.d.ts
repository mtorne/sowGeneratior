/**
 * OCI Control Center Demand Signal API
 * Use the OCI Control Center Demand Signal API to manage Demand Signals.
 * OpenAPI spec version: 20240430
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { OccDemandSignalWaiter } from "./occdemandsignal-waiter";
declare const Breaker: any;
export declare enum OccDemandSignalApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class OccDemandSignalClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OccDemandSignalWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OccDemandSignalWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OccDemandSignalWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OccDemandSignalWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves a OccDemandSignal into a different compartment within the same tenancy. For information about moving resources between
     * compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeOccDemandSignalCompartmentRequest
     * @return ChangeOccDemandSignalCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/ChangeOccDemandSignalCompartment.ts.html |here} to see how to use ChangeOccDemandSignalCompartment API.
     */
    changeOccDemandSignalCompartment(changeOccDemandSignalCompartmentRequest: requests.ChangeOccDemandSignalCompartmentRequest): Promise<responses.ChangeOccDemandSignalCompartmentResponse>;
    /**
     * Creates a OccDemandSignal.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateOccDemandSignalRequest
     * @return CreateOccDemandSignalResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/CreateOccDemandSignal.ts.html |here} to see how to use CreateOccDemandSignal API.
     */
    createOccDemandSignal(createOccDemandSignalRequest: requests.CreateOccDemandSignalRequest): Promise<responses.CreateOccDemandSignalResponse>;
    /**
     * Deletes a OccDemandSignal.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOccDemandSignalRequest
     * @return DeleteOccDemandSignalResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/DeleteOccDemandSignal.ts.html |here} to see how to use DeleteOccDemandSignal API.
     */
    deleteOccDemandSignal(deleteOccDemandSignalRequest: requests.DeleteOccDemandSignalRequest): Promise<responses.DeleteOccDemandSignalResponse>;
    /**
     * Gets information about a OccDemandSignal.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOccDemandSignalRequest
     * @return GetOccDemandSignalResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/GetOccDemandSignal.ts.html |here} to see how to use GetOccDemandSignal API.
     */
    getOccDemandSignal(getOccDemandSignalRequest: requests.GetOccDemandSignalRequest): Promise<responses.GetOccDemandSignalResponse>;
    /**
     * Gets a list of OccDemandSignals.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListOccDemandSignalsRequest
     * @return ListOccDemandSignalsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/ListOccDemandSignals.ts.html |here} to see how to use ListOccDemandSignals API.
     */
    listOccDemandSignals(listOccDemandSignalsRequest: requests.ListOccDemandSignalsRequest): Promise<responses.ListOccDemandSignalsResponse>;
    /**
     * Updates the data of an OccDemandSignal.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PatchOccDemandSignalRequest
     * @return PatchOccDemandSignalResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/PatchOccDemandSignal.ts.html |here} to see how to use PatchOccDemandSignal API.
     */
    patchOccDemandSignal(patchOccDemandSignalRequest: requests.PatchOccDemandSignalRequest): Promise<responses.PatchOccDemandSignalResponse>;
    /**
     * Updates a OccDemandSignal.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOccDemandSignalRequest
     * @return UpdateOccDemandSignalResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/demandsignal/UpdateOccDemandSignal.ts.html |here} to see how to use UpdateOccDemandSignal API.
     */
    updateOccDemandSignal(updateOccDemandSignalRequest: requests.UpdateOccDemandSignalRequest): Promise<responses.UpdateOccDemandSignalResponse>;
}
export {};
