"use strict";
/**
 * Oracle Cloud VMware Solution API
 * Use the Oracle Cloud VMware API to create SDDCs and manage ESXi hosts and software.
For more information, see [Oracle Cloud VMware Solution](https://docs.oracle.com/iaas/Content/VMware/Concepts/ocvsoverview.htm).

 * OpenAPI spec version: 20230701
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationTypes = void 0;
/**
 * Possible asynchronous operation types.
 **/
var OperationTypes;
(function (OperationTypes) {
    OperationTypes["CreateSddc"] = "CREATE_SDDC";
    OperationTypes["DeleteSddc"] = "DELETE_SDDC";
    OperationTypes["CreateCluster"] = "CREATE_CLUSTER";
    OperationTypes["DeleteCluster"] = "DELETE_CLUSTER";
    OperationTypes["CreateEsxiHost"] = "CREATE_ESXI_HOST";
    OperationTypes["DeleteEsxiHost"] = "DELETE_ESXI_HOST";
    OperationTypes["UpgradeHcx"] = "UPGRADE_HCX";
    OperationTypes["DowngradeHcx"] = "DOWNGRADE_HCX";
    OperationTypes["CancelDowngradeHcx"] = "CANCEL_DOWNGRADE_HCX";
    OperationTypes["RefreshHcxLicenseStatus"] = "REFRESH_HCX_LICENSE_STATUS";
    OperationTypes["SwapBilling"] = "SWAP_BILLING";
    OperationTypes["ReplaceHost"] = "REPLACE_HOST";
    OperationTypes["InPlaceUpgrade"] = "IN_PLACE_UPGRADE";
    OperationTypes["CreateDatastore"] = "CREATE_DATASTORE";
    OperationTypes["UpdateDatastore"] = "UPDATE_DATASTORE";
    OperationTypes["AddBlockVolumeToDatastore"] = "ADD_BLOCK_VOLUME_TO_DATASTORE";
    OperationTypes["DeleteDatastore"] = "DELETE_DATASTORE";
    OperationTypes["CreateDatastoreCluster"] = "CREATE_DATASTORE_CLUSTER";
    OperationTypes["UpdateDatastoreCluster"] = "UPDATE_DATASTORE_CLUSTER";
    OperationTypes["AttachDatastoreClusterToEsxiHost"] = "ATTACH_DATASTORE_CLUSTER_TO_ESXI_HOST";
    OperationTypes["AttachDatastoreClusterToCluster"] = "ATTACH_DATASTORE_CLUSTER_TO_CLUSTER";
    OperationTypes["DetachDatastoreClusterFromEsxiHost"] = "DETACH_DATASTORE_CLUSTER_FROM_ESXI_HOST";
    OperationTypes["DetachDatastoreClusterFromCluster"] = "DETACH_DATASTORE_CLUSTER_FROM_CLUSTER";
    OperationTypes["DeleteDatastoreCluster"] = "DELETE_DATASTORE_CLUSTER";
    OperationTypes["AddDatastoreToDatastoreCluster"] = "ADD_DATASTORE_TO_DATASTORE_CLUSTER";
    OperationTypes["RemoveDatastoreFromDatastoreCluster"] = "REMOVE_DATASTORE_FROM_DATASTORE_CLUSTER";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationTypes["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationTypes = exports.OperationTypes || (exports.OperationTypes = {}));
(function (OperationTypes) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationTypes.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationTypes.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationTypes = exports.OperationTypes || (exports.OperationTypes = {}));
//# sourceMappingURL=operation-types.js.map