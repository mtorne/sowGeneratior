/**
 *
 *
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMonitoredResourceTypes.ts.html |here} to see how to use ListMonitoredResourceTypesRequest.
 */
export interface ListMonitoredResourceTypesRequest extends common.BaseRequest {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which
     * monitored resource types should be listed.
     *
     */
    "compartmentId": string;
    /**
     * A filter to return monitored resource types that match exactly with the resource type name given.
     *
     */
    "name"?: string;
    /**
     * A filter to return only resources that matches with lifecycleState given.
     */
    "status"?: model.ResourceTypeLifecycleState;
    /**
     * A filter to exclude system resource types. If set to true, system resource types will be excluded.
     *
     */
    "isExcludeSystemTypes"?: boolean;
    /**
     * A filter to return monitored resource types that has the matching namespace.
     *
     */
    "metricNamespace"?: string;
    /**
     * A filter to return only resources with matching source type.
     */
    "sourceType"?: model.SourceType;
    /**
     * A filter to return only resources with matching resource category.
     */
    "resourceCategory"?: model.ResourceCategory;
    /**
     * The field to sort by. Only one sort order may be provided.
     * Default order for 'timeUpdated' is descending. Default order for 'name' is ascending.
     *
     */
    "sortBy"?: ListMonitoredResourceTypesRequest.SortBy;
    /**
     * The sort order to use, either ascending ({@code ASC}) or descending ({@code DESC}).
     *
     */
    "sortOrder"?: model.SortOrder;
    /**
     * For list pagination. The maximum number of results per page, or items to return in a
     * paginated \"List\" call. For important details about how pagination works, see
     * [List Pagination](https://docs.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
     *
     */
    "limit"?: number;
    /**
     * For list pagination. The value of the {@code opc-next-page} response header from the
     * previous \"List\" call. For important details about how pagination works, see
     * [List Pagination](https://docs.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
     *
     */
    "page"?: string;
    /**
     * Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
     * particular request, please provide the request ID.
     *
     */
    "opcRequestId"?: string;
    /**
   * Partial response refers to an optimization technique offered
  * by the RESTful web APIs, to return only the information
  * (fields) required by the client. In this mechanism, the client
  * sends the required field names as the query parameters for
  * an API to the server, and the server trims down the default
  * response content by removing the fields that are not required
  * by the client. The parameter controls which fields to
  * return and should be a query string parameter called \"fields\" of
  * an array type, provide the values as enums, and use collectionFormat.
  * <p>
  MonitoredResourceType Id, name and compartment will be added by default.
  *
   */
    "fields"?: Array<string>;
    /**
     * Partial response refers to an optimization technique offered
     * by the RESTful web APIs, to return all the information except
     * the fields requested to be excluded (excludeFields) by the client.
     * In this mechanism, the client
     * sends the exclude field names as the query parameters for
     * an API to the server, and the server trims down the default
     * response content by removing the fields that are not required
     * by the client. The parameter controls which fields to
     * exlude and to return and should be a query string parameter
     * called \"excludeFields\" of an array type, provide the values
     * as enums, and use collectionFormat.
     *
     */
    "excludeFields"?: Array<string>;
}
export declare namespace ListMonitoredResourceTypesRequest {
    enum SortBy {
        TimeUpdated = "timeUpdated",
        Name = "name"
    }
}
