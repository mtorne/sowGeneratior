/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { StackMonitoringWaiter } from "./stackmonitoring-waiter";
declare const Breaker: any;
export declare enum StackMonitoringApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class StackMonitoringClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": StackMonitoringWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new StackMonitoringWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): StackMonitoringWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): StackMonitoringWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Apply the Monitoring Template identified by the id
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ApplyMonitoringTemplateRequest
     * @return ApplyMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ApplyMonitoringTemplate.ts.html |here} to see how to use ApplyMonitoringTemplate API.
     */
    applyMonitoringTemplate(applyMonitoringTemplateRequest: requests.ApplyMonitoringTemplateRequest): Promise<responses.ApplyMonitoringTemplateResponse>;
    /**
     * Create an association between two monitored resources. Associations can be created
     * between resources from different compartments as long they are in same tenancy.
     * User should have required access in both the compartments.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AssociateMonitoredResourcesRequest
     * @return AssociateMonitoredResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/AssociateMonitoredResources.ts.html |here} to see how to use AssociateMonitoredResources API.
     */
    associateMonitoredResources(associateMonitoredResourcesRequest: requests.AssociateMonitoredResourcesRequest): Promise<responses.AssociateMonitoredResourcesResponse>;
    /**
       * Moves the configuration item to another compartment.
  * Basically, this will disable any configuration for this configuration type in thie compartment,
  * and will enable it in the new one.
  * <p>
  For example, if for a HOST resource type, the configuration with AUTO_PROMOTE in the configuration type
  * and TRUE as value is moved, automatic discovery will not take place in this compartment any more, but in the new one.
  * <p>
  So this operation will have the same effect as deleting the configuration item in the old compartment and
  * recreating it in another compartment.
  * <p>
  When provided, If-Match is checked against ETag values of the resource.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ChangeConfigCompartmentRequest
       * @return ChangeConfigCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ChangeConfigCompartment.ts.html |here} to see how to use ChangeConfigCompartment API.
       */
    changeConfigCompartment(changeConfigCompartmentRequest: requests.ChangeConfigCompartmentRequest): Promise<responses.ChangeConfigCompartmentResponse>;
    /**
     * Moves a Metric Extension resource from one compartment identifier to another.
     * When provided, If-Match is checked against ETag values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeMetricExtensionCompartmentRequest
     * @return ChangeMetricExtensionCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ChangeMetricExtensionCompartment.ts.html |here} to see how to use ChangeMetricExtensionCompartment API.
     */
    changeMetricExtensionCompartment(changeMetricExtensionCompartmentRequest: requests.ChangeMetricExtensionCompartmentRequest): Promise<responses.ChangeMetricExtensionCompartmentResponse>;
    /**
     * Moves a monitored resource from one compartment to another.
     * When provided, If-Match is checked against ETag values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeMonitoredResourceCompartmentRequest
     * @return ChangeMonitoredResourceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ChangeMonitoredResourceCompartment.ts.html |here} to see how to use ChangeMonitoredResourceCompartment API.
     */
    changeMonitoredResourceCompartment(changeMonitoredResourceCompartmentRequest: requests.ChangeMonitoredResourceCompartmentRequest): Promise<responses.ChangeMonitoredResourceCompartmentResponse>;
    /**
     * Moves a stack monitoring resource task from one compartment to another.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeMonitoredResourceTaskCompartmentRequest
     * @return ChangeMonitoredResourceTaskCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ChangeMonitoredResourceTaskCompartment.ts.html |here} to see how to use ChangeMonitoredResourceTaskCompartment API.
     */
    changeMonitoredResourceTaskCompartment(changeMonitoredResourceTaskCompartmentRequest: requests.ChangeMonitoredResourceTaskCompartmentRequest): Promise<responses.ChangeMonitoredResourceTaskCompartmentResponse>;
    /**
     * Moves a ProcessSet resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeProcessSetCompartmentRequest
     * @return ChangeProcessSetCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ChangeProcessSetCompartment.ts.html |here} to see how to use ChangeProcessSetCompartment API.
     */
    changeProcessSetCompartment(changeProcessSetCompartmentRequest: requests.ChangeProcessSetCompartmentRequest): Promise<responses.ChangeProcessSetCompartmentResponse>;
    /**
     * Create a new alarm condition in same monitoringTemplate compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAlarmConditionRequest
     * @return CreateAlarmConditionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateAlarmCondition.ts.html |here} to see how to use CreateAlarmCondition API.
     */
    createAlarmCondition(createAlarmConditionRequest: requests.CreateAlarmConditionRequest): Promise<responses.CreateAlarmConditionResponse>;
    /**
     * Creates the specified Baseline-able metric
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateBaselineableMetricRequest
     * @return CreateBaselineableMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateBaselineableMetric.ts.html |here} to see how to use CreateBaselineableMetric API.
     */
    createBaselineableMetric(createBaselineableMetricRequest: requests.CreateBaselineableMetricRequest): Promise<responses.CreateBaselineableMetricResponse>;
    /**
       * Creates a configuration item, for example to define
  * whether resources of a specific type should be discovered automatically.
  * <p>
  For example, when a new Management Agent gets registered in a certain compartment,
  * this Management Agent can potentially get promoted to a HOST resource.
  * The configuration item will determine if HOST resources in the selected compartment will be
  * discovered automatically.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateConfigRequest
       * @return CreateConfigResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateConfig.ts.html |here} to see how to use CreateConfig API.
       */
    createConfig(createConfigRequest: requests.CreateConfigRequest): Promise<responses.CreateConfigResponse>;
    /**
     * API to create discovery Job and submit discovery Details to agent.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDiscoveryJobRequest
     * @return CreateDiscoveryJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateDiscoveryJob.ts.html |here} to see how to use CreateDiscoveryJob API.
     */
    createDiscoveryJob(createDiscoveryJobRequest: requests.CreateDiscoveryJobRequest): Promise<responses.CreateDiscoveryJobResponse>;
    /**
     * Creates a new Maintenance Window for the given resources. It will create also the
     * Alarms Suppression for each alarm that the resource migth trigger.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateMaintenanceWindowRequest
     * @return CreateMaintenanceWindowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMaintenanceWindow.ts.html |here} to see how to use CreateMaintenanceWindow API.
     */
    createMaintenanceWindow(createMaintenanceWindowRequest: requests.CreateMaintenanceWindowRequest): Promise<responses.CreateMaintenanceWindowResponse>;
    /**
     * Creates a new metric extension resource for a given compartment
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMetricExtensionRequest
     * @return CreateMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMetricExtension.ts.html |here} to see how to use CreateMetricExtension API.
     */
    createMetricExtension(createMetricExtensionRequest: requests.CreateMetricExtensionRequest): Promise<responses.CreateMetricExtensionResponse>;
    /**
     * Creates a new monitored resource for the given resource type with the details and submits
     * a work request for promoting the resource to agent. Once the resource is successfully
     * added to agent, resource state will be marked active.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMonitoredResourceRequest
     * @return CreateMonitoredResourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMonitoredResource.ts.html |here} to see how to use CreateMonitoredResource API.
     */
    createMonitoredResource(createMonitoredResourceRequest: requests.CreateMonitoredResourceRequest): Promise<responses.CreateMonitoredResourceResponse>;
    /**
     * Create a new stack monitoring resource task.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateMonitoredResourceTaskRequest
     * @return CreateMonitoredResourceTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMonitoredResourceTask.ts.html |here} to see how to use CreateMonitoredResourceTask API.
     */
    createMonitoredResourceTask(createMonitoredResourceTaskRequest: requests.CreateMonitoredResourceTaskRequest): Promise<responses.CreateMonitoredResourceTaskResponse>;
    /**
     * Creates a new monitored resource type.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateMonitoredResourceTypeRequest
     * @return CreateMonitoredResourceTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMonitoredResourceType.ts.html |here} to see how to use CreateMonitoredResourceType API.
     */
    createMonitoredResourceType(createMonitoredResourceTypeRequest: requests.CreateMonitoredResourceTypeRequest): Promise<responses.CreateMonitoredResourceTypeResponse>;
    /**
     * Creates a new monitoring template for a given compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateMonitoringTemplateRequest
     * @return CreateMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateMonitoringTemplate.ts.html |here} to see how to use CreateMonitoringTemplate API.
     */
    createMonitoringTemplate(createMonitoringTemplateRequest: requests.CreateMonitoringTemplateRequest): Promise<responses.CreateMonitoringTemplateResponse>;
    /**
     * API to create Process Set.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProcessSetRequest
     * @return CreateProcessSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/CreateProcessSet.ts.html |here} to see how to use CreateProcessSet API.
     */
    createProcessSet(createProcessSetRequest: requests.CreateProcessSetRequest): Promise<responses.CreateProcessSetResponse>;
    /**
     * Deletes the alarm conditions by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteAlarmConditionRequest
     * @return DeleteAlarmConditionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteAlarmCondition.ts.html |here} to see how to use DeleteAlarmCondition API.
     */
    deleteAlarmCondition(deleteAlarmConditionRequest: requests.DeleteAlarmConditionRequest): Promise<responses.DeleteAlarmConditionResponse>;
    /**
     * Deletes the Baseline-able metric for the given id
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteBaselineableMetricRequest
     * @return DeleteBaselineableMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteBaselineableMetric.ts.html |here} to see how to use DeleteBaselineableMetric API.
     */
    deleteBaselineableMetric(deleteBaselineableMetricRequest: requests.DeleteBaselineableMetricRequest): Promise<responses.DeleteBaselineableMetricResponse>;
    /**
     * Deletes a configuration identified by the id.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteConfigRequest
     * @return DeleteConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteConfig.ts.html |here} to see how to use DeleteConfig API.
     */
    deleteConfig(deleteConfigRequest: requests.DeleteConfigRequest): Promise<responses.DeleteConfigResponse>;
    /**
     * Deletes a DiscoveryJob by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDiscoveryJobRequest
     * @return DeleteDiscoveryJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteDiscoveryJob.ts.html |here} to see how to use DeleteDiscoveryJob API.
     */
    deleteDiscoveryJob(deleteDiscoveryJobRequest: requests.DeleteDiscoveryJobRequest): Promise<responses.DeleteDiscoveryJobResponse>;
    /**
     * Deletes a maintenance window by identifier
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMaintenanceWindowRequest
     * @return DeleteMaintenanceWindowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteMaintenanceWindow.ts.html |here} to see how to use DeleteMaintenanceWindow API.
     */
    deleteMaintenanceWindow(deleteMaintenanceWindowRequest: requests.DeleteMaintenanceWindowRequest): Promise<responses.DeleteMaintenanceWindowResponse>;
    /**
     * Deletes a metric extension by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMetricExtensionRequest
     * @return DeleteMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteMetricExtension.ts.html |here} to see how to use DeleteMetricExtension API.
     */
    deleteMetricExtension(deleteMetricExtensionRequest: requests.DeleteMetricExtensionRequest): Promise<responses.DeleteMetricExtensionResponse>;
    /**
     * Delete monitored resource by the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * By default, only the specified resource is deleted. If the parameter 'isDeleteMembers' is set to true,
     * then the member resources will be deleted too. If the operation fails partially, the deleted entries
     * will not be rolled back.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMonitoredResourceRequest
     * @return DeleteMonitoredResourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteMonitoredResource.ts.html |here} to see how to use DeleteMonitoredResource API.
     */
    deleteMonitoredResource(deleteMonitoredResourceRequest: requests.DeleteMonitoredResourceRequest): Promise<responses.DeleteMonitoredResourceResponse>;
    /**
     * Deletes a monitored resource type by identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMonitoredResourceTypeRequest
     * @return DeleteMonitoredResourceTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteMonitoredResourceType.ts.html |here} to see how to use DeleteMonitoredResourceType API.
     */
    deleteMonitoredResourceType(deleteMonitoredResourceTypeRequest: requests.DeleteMonitoredResourceTypeRequest): Promise<responses.DeleteMonitoredResourceTypeResponse>;
    /**
     * Deletes the monitoring template by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMonitoringTemplateRequest
     * @return DeleteMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteMonitoringTemplate.ts.html |here} to see how to use DeleteMonitoringTemplate API.
     */
    deleteMonitoringTemplate(deleteMonitoringTemplateRequest: requests.DeleteMonitoringTemplateRequest): Promise<responses.DeleteMonitoringTemplateResponse>;
    /**
     * Deletes a Process Set
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteProcessSetRequest
     * @return DeleteProcessSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DeleteProcessSet.ts.html |here} to see how to use DeleteProcessSet API.
     */
    deleteProcessSet(deleteProcessSetRequest: requests.DeleteProcessSetRequest): Promise<responses.DeleteProcessSetResponse>;
    /**
     * Disable external database resource monitoring. All the references in DBaaS,
     * DBM and resource service will be deleted as part of this operation.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DisableExternalDatabaseRequest
     * @return DisableExternalDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DisableExternalDatabase.ts.html |here} to see how to use DisableExternalDatabase API.
     */
    disableExternalDatabase(disableExternalDatabaseRequest: requests.DisableExternalDatabaseRequest): Promise<responses.DisableExternalDatabaseResponse>;
    /**
     * Submits a request to disable matching metric extension Id for the given Resource IDs
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DisableMetricExtensionRequest
     * @return DisableMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DisableMetricExtension.ts.html |here} to see how to use DisableMetricExtension API.
     */
    disableMetricExtension(disableMetricExtensionRequest: requests.DisableMetricExtensionRequest): Promise<responses.DisableMetricExtensionResponse>;
    /**
     * Removes associations between two monitored resources.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DisassociateMonitoredResourcesRequest
     * @return DisassociateMonitoredResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/DisassociateMonitoredResources.ts.html |here} to see how to use DisassociateMonitoredResources API.
     */
    disassociateMonitoredResources(disassociateMonitoredResourcesRequest: requests.DisassociateMonitoredResourcesRequest): Promise<responses.DisassociateMonitoredResourcesResponse>;
    /**
     * Submits a request to enable matching metric extension Id for the given Resource IDs
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param EnableMetricExtensionRequest
     * @return EnableMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/EnableMetricExtension.ts.html |here} to see how to use EnableMetricExtension API.
     */
    enableMetricExtension(enableMetricExtensionRequest: requests.EnableMetricExtensionRequest): Promise<responses.EnableMetricExtensionResponse>;
    /**
     * Evaluates metric for anomalies for the given data points
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param EvaluateBaselineableMetricRequest
     * @return EvaluateBaselineableMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/EvaluateBaselineableMetric.ts.html |here} to see how to use EvaluateBaselineableMetric API.
     */
    evaluateBaselineableMetric(evaluateBaselineableMetricRequest: requests.EvaluateBaselineableMetricRequest): Promise<responses.EvaluateBaselineableMetricResponse>;
    /**
     * Export generates a template used to create new metric extension resources similar to matching metric extension id.
     * Response is a file that contains metric extension definition with placeholders for fields to be changed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ExportMetricExtensionRequest
     * @return ExportMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ExportMetricExtension.ts.html |here} to see how to use ExportMetricExtension API.
     */
    exportMetricExtension(exportMetricExtensionRequest: requests.ExportMetricExtensionRequest): Promise<responses.ExportMetricExtensionResponse>;
    /**
     * Export the specified monitoring template
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ExportMonitoringTemplateRequest
     * @return ExportMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ExportMonitoringTemplate.ts.html |here} to see how to use ExportMonitoringTemplate API.
     */
    exportMonitoringTemplate(exportMonitoringTemplateRequest: requests.ExportMonitoringTemplateRequest): Promise<responses.ExportMonitoringTemplateResponse>;
    /**
     * Gets a Alarm Condition by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAlarmConditionRequest
     * @return GetAlarmConditionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetAlarmCondition.ts.html |here} to see how to use GetAlarmCondition API.
     */
    getAlarmCondition(getAlarmConditionRequest: requests.GetAlarmConditionRequest): Promise<responses.GetAlarmConditionResponse>;
    /**
     * Get the Baseline-able metric for the given id
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetBaselineableMetricRequest
     * @return GetBaselineableMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetBaselineableMetric.ts.html |here} to see how to use GetBaselineableMetric API.
     */
    getBaselineableMetric(getBaselineableMetricRequest: requests.GetBaselineableMetricRequest): Promise<responses.GetBaselineableMetricResponse>;
    /**
     * Gets the details of a configuration.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConfigRequest
     * @return GetConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetConfig.ts.html |here} to see how to use GetConfig API.
     */
    getConfig(getConfigRequest: requests.GetConfigRequest): Promise<responses.GetConfigResponse>;
    /**
     * API to get the details of discovery Job by identifier.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDiscoveryJobRequest
     * @return GetDiscoveryJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetDiscoveryJob.ts.html |here} to see how to use GetDiscoveryJob API.
     */
    getDiscoveryJob(getDiscoveryJobRequest: requests.GetDiscoveryJobRequest): Promise<responses.GetDiscoveryJobResponse>;
    /**
     * Get maintenance window for the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMaintenanceWindowRequest
     * @return GetMaintenanceWindowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMaintenanceWindow.ts.html |here} to see how to use GetMaintenanceWindow API.
     */
    getMaintenanceWindow(getMaintenanceWindowRequest: requests.GetMaintenanceWindowRequest): Promise<responses.GetMaintenanceWindowResponse>;
    /**
     * Gets a Metric Extension by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMetricExtensionRequest
     * @return GetMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMetricExtension.ts.html |here} to see how to use GetMetricExtension API.
     */
    getMetricExtension(getMetricExtensionRequest: requests.GetMetricExtensionRequest): Promise<responses.GetMetricExtensionResponse>;
    /**
     * Get monitored resource for the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitoredResourceRequest
     * @return GetMonitoredResourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMonitoredResource.ts.html |here} to see how to use GetMonitoredResource API.
     */
    getMonitoredResource(getMonitoredResourceRequest: requests.GetMonitoredResourceRequest): Promise<responses.GetMonitoredResourceResponse>;
    /**
     * Gets stack monitoring resource task details by identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitoredResourceTaskRequest
     * @return GetMonitoredResourceTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMonitoredResourceTask.ts.html |here} to see how to use GetMonitoredResourceTask API.
     */
    getMonitoredResourceTask(getMonitoredResourceTaskRequest: requests.GetMonitoredResourceTaskRequest): Promise<responses.GetMonitoredResourceTaskResponse>;
    /**
     * Gets a monitored resource type by identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitoredResourceTypeRequest
     * @return GetMonitoredResourceTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMonitoredResourceType.ts.html |here} to see how to use GetMonitoredResourceType API.
     */
    getMonitoredResourceType(getMonitoredResourceTypeRequest: requests.GetMonitoredResourceTypeRequest): Promise<responses.GetMonitoredResourceTypeResponse>;
    /**
     * Gets a Monitoring Template by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitoringTemplateRequest
     * @return GetMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetMonitoringTemplate.ts.html |here} to see how to use GetMonitoringTemplate API.
     */
    getMonitoringTemplate(getMonitoringTemplateRequest: requests.GetMonitoringTemplateRequest): Promise<responses.GetMonitoringTemplateResponse>;
    /**
     * API to get the details of a Process Set by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProcessSetRequest
     * @return GetProcessSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetProcessSet.ts.html |here} to see how to use GetProcessSet API.
     */
    getProcessSet(getProcessSetRequest: requests.GetProcessSetRequest): Promise<responses.GetProcessSetResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Returns a list of Alarm Conditions.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAlarmConditionsRequest
     * @return ListAlarmConditionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListAlarmConditions.ts.html |here} to see how to use ListAlarmConditions API.
     */
    listAlarmConditions(listAlarmConditionsRequest: requests.ListAlarmConditionsRequest): Promise<responses.ListAlarmConditionsResponse>;
    /**
     * List of summary of baseline-able metrics for a given resource group if specified.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListBaselineableMetricsRequest
     * @return ListBaselineableMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListBaselineableMetrics.ts.html |here} to see how to use ListBaselineableMetrics API.
     */
    listBaselineableMetrics(listBaselineableMetricsRequest: requests.ListBaselineableMetricsRequest): Promise<responses.ListBaselineableMetricsResponse>;
    /**
     * Get a list of configurations in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListConfigsRequest
     * @return ListConfigsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListConfigs.ts.html |here} to see how to use ListConfigs API.
     */
    listConfigs(listConfigsRequest: requests.ListConfigsRequest): Promise<responses.ListConfigsResponse>;
    /**
     * List Defined Monitoring Templates.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDefinedMonitoringTemplatesRequest
     * @return ListDefinedMonitoringTemplatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListDefinedMonitoringTemplates.ts.html |here} to see how to use ListDefinedMonitoringTemplates API.
     */
    listDefinedMonitoringTemplates(listDefinedMonitoringTemplatesRequest: requests.ListDefinedMonitoringTemplatesRequest): Promise<responses.ListDefinedMonitoringTemplatesResponse>;
    /**
     * API to get all the logs of a Discovery Job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDiscoveryJobLogsRequest
     * @return ListDiscoveryJobLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListDiscoveryJobLogs.ts.html |here} to see how to use ListDiscoveryJobLogs API.
     */
    listDiscoveryJobLogs(listDiscoveryJobLogsRequest: requests.ListDiscoveryJobLogsRequest): Promise<responses.ListDiscoveryJobLogsResponse>;
    /**
     * API to get the details of all Discovery Jobs.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDiscoveryJobsRequest
     * @return ListDiscoveryJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListDiscoveryJobs.ts.html |here} to see how to use ListDiscoveryJobs API.
     */
    listDiscoveryJobs(listDiscoveryJobsRequest: requests.ListDiscoveryJobsRequest): Promise<responses.ListDiscoveryJobsResponse>;
    /**
     * Returns a list of maintenance windows.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMaintenanceWindowsRequest
     * @return ListMaintenanceWindowsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMaintenanceWindows.ts.html |here} to see how to use ListMaintenanceWindows API.
     */
    listMaintenanceWindows(listMaintenanceWindowsRequest: requests.ListMaintenanceWindowsRequest): Promise<responses.ListMaintenanceWindowsResponse>;
    /**
     * Returns a list of metric extensions
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMetricExtensionsRequest
     * @return ListMetricExtensionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMetricExtensions.ts.html |here} to see how to use ListMetricExtensions API.
     */
    listMetricExtensions(listMetricExtensionsRequest: requests.ListMetricExtensionsRequest): Promise<responses.ListMetricExtensionsResponse>;
    /**
     * Returns a list of stack monitoring resource tasks in the compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMonitoredResourceTasksRequest
     * @return ListMonitoredResourceTasksResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMonitoredResourceTasks.ts.html |here} to see how to use ListMonitoredResourceTasks API.
     */
    listMonitoredResourceTasks(listMonitoredResourceTasksRequest: requests.ListMonitoredResourceTasksRequest): Promise<responses.ListMonitoredResourceTasksResponse>;
    /**
     * Returns list of resource types accessible to the customer.
     * There are two types of resource types - System resource types and User resource types.
     * System resource types are available out of the box in the stack monitoring resource service
     * and are accessible to all the tenant users. User resource types are created in the context
     * of a tenancy and are visible only for the tenancy. By default, both System resource types
     * and User resource types are returned.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMonitoredResourceTypesRequest
     * @return ListMonitoredResourceTypesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMonitoredResourceTypes.ts.html |here} to see how to use ListMonitoredResourceTypes API.
     */
    listMonitoredResourceTypes(listMonitoredResourceTypesRequest: requests.ListMonitoredResourceTypesRequest): Promise<responses.ListMonitoredResourceTypesResponse>;
    /**
     * Returns a list of monitored resources.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMonitoredResourcesRequest
     * @return ListMonitoredResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMonitoredResources.ts.html |here} to see how to use ListMonitoredResources API.
     */
    listMonitoredResources(listMonitoredResourcesRequest: requests.ListMonitoredResourcesRequest): Promise<responses.ListMonitoredResourcesResponse>;
    /**
     * Returns a list of Monitoring Templates.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMonitoringTemplatesRequest
     * @return ListMonitoringTemplatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListMonitoringTemplates.ts.html |here} to see how to use ListMonitoringTemplates API.
     */
    listMonitoringTemplates(listMonitoringTemplatesRequest: requests.ListMonitoringTemplatesRequest): Promise<responses.ListMonitoringTemplatesResponse>;
    /**
     * API to get the details of all Process Sets.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProcessSetsRequest
     * @return ListProcessSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListProcessSets.ts.html |here} to see how to use ListProcessSets API.
     */
    listProcessSets(listProcessSetsRequest: requests.ListProcessSetsRequest): Promise<responses.ListProcessSetsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Each resource is assigned a license based on which features are enabled for it.
     * User is charged differently based on license.
     * Specify the license type to be updated for the parent resource in the topology.
     * The license type value is propagated to the member resources as well.
     * Member resource is a resource which has \"contains\" association with the resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ManageLicenseRequest
     * @return ManageLicenseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/ManageLicense.ts.html |here} to see how to use ManageLicense API.
     */
    manageLicense(manageLicenseRequest: requests.ManageLicenseRequest): Promise<responses.ManageLicenseResponse>;
    /**
     * Publish the Metric Extension identified by the id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PublishMetricExtensionRequest
     * @return PublishMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/PublishMetricExtension.ts.html |here} to see how to use PublishMetricExtension API.
     */
    publishMetricExtension(publishMetricExtensionRequest: requests.PublishMetricExtensionRequest): Promise<responses.PublishMetricExtensionResponse>;
    /**
     * Gets resource count based on the aggregation criteria specified using \"groupBy\" parameter.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RequestMonitoredResourcesSummarizedCountRequest
     * @return RequestMonitoredResourcesSummarizedCountResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/RequestMonitoredResourcesSummarizedCount.ts.html |here} to see how to use RequestMonitoredResourcesSummarizedCount API.
     */
    requestMonitoredResourcesSummarizedCount(requestMonitoredResourcesSummarizedCountRequest: requests.RequestMonitoredResourcesSummarizedCountRequest): Promise<responses.RequestMonitoredResourcesSummarizedCountResponse>;
    /**
     * Gets metric extension metrics count based on the aggregation criteria specified using request body.
     * Either metricExtensionId or compartmentId must be passed even when no other filter property is passed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RequestSummarizedMetricExtensionsMetricsRequest
     * @return RequestSummarizedMetricExtensionsMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/RequestSummarizedMetricExtensionsMetrics.ts.html |here} to see how to use RequestSummarizedMetricExtensionsMetrics API.
     */
    requestSummarizedMetricExtensionsMetrics(requestSummarizedMetricExtensionsMetricsRequest: requests.RequestSummarizedMetricExtensionsMetricsRequest): Promise<responses.RequestSummarizedMetricExtensionsMetricsResponse>;
    /**
     * Gets metric extension resources count based on the aggregation criteria specified using request body.
     * Either metricExtensionId or compartmentId should be passed, if no other property is passed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RequestSummarizedMetricExtensionsResourcesRequest
     * @return RequestSummarizedMetricExtensionsResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/RequestSummarizedMetricExtensionsResources.ts.html |here} to see how to use RequestSummarizedMetricExtensionsResources API.
     */
    requestSummarizedMetricExtensionsResources(requestSummarizedMetricExtensionsResourcesRequest: requests.RequestSummarizedMetricExtensionsResourcesRequest): Promise<responses.RequestSummarizedMetricExtensionsResourcesResponse>;
    /**
     * Retry the last failed operation. The operation failed will be the most recent one. It won't apply for previous failed operations.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RetryFailedMaintenanceWindowOperationRequest
     * @return RetryFailedMaintenanceWindowOperationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/RetryFailedMaintenanceWindowOperation.ts.html |here} to see how to use RetryFailedMaintenanceWindowOperation API.
     */
    retryFailedMaintenanceWindowOperation(retryFailedMaintenanceWindowOperationRequest: requests.RetryFailedMaintenanceWindowOperationRequest): Promise<responses.RetryFailedMaintenanceWindowOperationResponse>;
    /**
     * List all associated resources recursively up-to a specified level,
     * for the monitored resources of type specified.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchAssociatedResourcesRequest
     * @return SearchAssociatedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/SearchAssociatedResources.ts.html |here} to see how to use SearchAssociatedResources API.
     */
    searchAssociatedResources(searchAssociatedResourcesRequest: requests.SearchAssociatedResourcesRequest): Promise<responses.SearchAssociatedResourcesResponse>;
    /**
     * Search associations in the given compartment based on the search criteria.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchMonitoredResourceAssociationsRequest
     * @return SearchMonitoredResourceAssociationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/SearchMonitoredResourceAssociations.ts.html |here} to see how to use SearchMonitoredResourceAssociations API.
     */
    searchMonitoredResourceAssociations(searchMonitoredResourceAssociationsRequest: requests.SearchMonitoredResourceAssociationsRequest): Promise<responses.SearchMonitoredResourceAssociationsResponse>;
    /**
     * List the member resources for the given monitored resource identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchMonitoredResourceMembersRequest
     * @return SearchMonitoredResourceMembersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/SearchMonitoredResourceMembers.ts.html |here} to see how to use SearchMonitoredResourceMembers API.
     */
    searchMonitoredResourceMembers(searchMonitoredResourceMembersRequest: requests.SearchMonitoredResourceMembersRequest): Promise<responses.SearchMonitoredResourceMembersResponse>;
    /**
     * Gets a list of all monitored resources in a compartment for the given search criteria.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SearchMonitoredResourcesRequest
     * @return SearchMonitoredResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/SearchMonitoredResources.ts.html |here} to see how to use SearchMonitoredResources API.
     */
    searchMonitoredResources(searchMonitoredResourcesRequest: requests.SearchMonitoredResourcesRequest): Promise<responses.SearchMonitoredResourcesResponse>;
    /**
     * Stop a maintenance window before the end time is reached.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StopMaintenanceWindowRequest
     * @return StopMaintenanceWindowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/StopMaintenanceWindow.ts.html |here} to see how to use StopMaintenanceWindow API.
     */
    stopMaintenanceWindow(stopMaintenanceWindowRequest: requests.StopMaintenanceWindowRequest): Promise<responses.StopMaintenanceWindowResponse>;
    /**
     * Performs test of Metric Extension on a specific resource Id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param TestMetricExtensionRequest
     * @return TestMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/TestMetricExtension.ts.html |here} to see how to use TestMetricExtension API.
     */
    testMetricExtension(testMetricExtensionRequest: requests.TestMetricExtensionRequest): Promise<responses.TestMetricExtensionResponse>;
    /**
     * Unapply the Monitoring Template identified by the id
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UnapplyMonitoringTemplateRequest
     * @return UnapplyMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UnapplyMonitoringTemplate.ts.html |here} to see how to use UnapplyMonitoringTemplate API.
     */
    unapplyMonitoringTemplate(unapplyMonitoringTemplateRequest: requests.UnapplyMonitoringTemplateRequest): Promise<responses.UnapplyMonitoringTemplateResponse>;
    /**
     * Update a Alarm Condition by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAlarmConditionRequest
     * @return UpdateAlarmConditionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateAlarmCondition.ts.html |here} to see how to use UpdateAlarmCondition API.
     */
    updateAlarmCondition(updateAlarmConditionRequest: requests.UpdateAlarmConditionRequest): Promise<responses.UpdateAlarmConditionResponse>;
    /**
     * Provided tags will be added or updated in the existing list of tags for the affected resources.
     * Resources to be updated are identified based on association types specified.
     * If association types not specified, then tags will be updated only for the resource identified by
     * the given monitored resource identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAndPropagateTagsRequest
     * @return UpdateAndPropagateTagsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateAndPropagateTags.ts.html |here} to see how to use UpdateAndPropagateTags API.
     */
    updateAndPropagateTags(updateAndPropagateTagsRequest: requests.UpdateAndPropagateTagsRequest): Promise<responses.UpdateAndPropagateTagsResponse>;
    /**
     * Updates the Baseline-able metric for the given id
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateBaselineableMetricRequest
     * @return UpdateBaselineableMetricResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateBaselineableMetric.ts.html |here} to see how to use UpdateBaselineableMetric API.
     */
    updateBaselineableMetric(updateBaselineableMetricRequest: requests.UpdateBaselineableMetricRequest): Promise<responses.UpdateBaselineableMetricResponse>;
    /**
     * Updates the configuration identified by the id given.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateConfigRequest
     * @return UpdateConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateConfig.ts.html |here} to see how to use UpdateConfig API.
     */
    updateConfig(updateConfigRequest: requests.UpdateConfigRequest): Promise<responses.UpdateConfigResponse>;
    /**
     * Update maintenance window by the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMaintenanceWindowRequest
     * @return UpdateMaintenanceWindowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMaintenanceWindow.ts.html |here} to see how to use UpdateMaintenanceWindow API.
     */
    updateMaintenanceWindow(updateMaintenanceWindowRequest: requests.UpdateMaintenanceWindowRequest): Promise<responses.UpdateMaintenanceWindowResponse>;
    /**
     * Updates the Metric Extension
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMetricExtensionRequest
     * @return UpdateMetricExtensionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMetricExtension.ts.html |here} to see how to use UpdateMetricExtension API.
     */
    updateMetricExtension(updateMetricExtensionRequest: requests.UpdateMetricExtensionRequest): Promise<responses.UpdateMetricExtensionResponse>;
    /**
     * Update monitored resource by the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * Note that \"properties\" object, if specified, will entirely replace the existing object,
     * as part this operation.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMonitoredResourceRequest
     * @return UpdateMonitoredResourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMonitoredResource.ts.html |here} to see how to use UpdateMonitoredResource API.
     */
    updateMonitoredResource(updateMonitoredResourceRequest: requests.UpdateMonitoredResourceRequest): Promise<responses.UpdateMonitoredResourceResponse>;
    /**
     * Update stack monitoring resource task by the given identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMonitoredResourceTaskRequest
     * @return UpdateMonitoredResourceTaskResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMonitoredResourceTask.ts.html |here} to see how to use UpdateMonitoredResourceTask API.
     */
    updateMonitoredResourceTask(updateMonitoredResourceTaskRequest: requests.UpdateMonitoredResourceTaskRequest): Promise<responses.UpdateMonitoredResourceTaskResponse>;
    /**
     * Update the Monitored Resource Type identified by the identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMonitoredResourceTypeRequest
     * @return UpdateMonitoredResourceTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMonitoredResourceType.ts.html |here} to see how to use UpdateMonitoredResourceType API.
     */
    updateMonitoredResourceType(updateMonitoredResourceTypeRequest: requests.UpdateMonitoredResourceTypeRequest): Promise<responses.UpdateMonitoredResourceTypeResponse>;
    /**
     * Updates the Monitoring Template
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateMonitoringTemplateRequest
     * @return UpdateMonitoringTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateMonitoringTemplate.ts.html |here} to see how to use UpdateMonitoringTemplate API.
     */
    updateMonitoringTemplate(updateMonitoringTemplateRequest: requests.UpdateMonitoringTemplateRequest): Promise<responses.UpdateMonitoringTemplateResponse>;
    /**
     * API to update a Process Set identified by a given ocid.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateProcessSetRequest
     * @return UpdateProcessSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/stackmonitoring/UpdateProcessSet.ts.html |here} to see how to use UpdateProcessSet API.
     */
    updateProcessSet(updateProcessSetRequest: requests.UpdateProcessSetRequest): Promise<responses.UpdateProcessSetResponse>;
}
export {};
