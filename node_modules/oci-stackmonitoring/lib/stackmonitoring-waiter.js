"use strict";
/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StackMonitoringWaiter = void 0;
const models = __importStar(require("./model"));
const oci_common_1 = require("oci-common");
class StackMonitoringWaiter {
    constructor(client, config) {
        this.client = client;
        this.config = config;
    }
    /**
     * Waits forAlarmCondition till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAlarmConditionResponse | null (null in case of 404 response)
     */
    forAlarmCondition(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAlarmCondition(request), response => targetStates.includes(response.alarmCondition.lifecycleState), targetStates.includes(models.AlarmConditionLifeCycleStates.Deleted));
        });
    }
    /**
     * Waits forBaselineableMetric till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetBaselineableMetricResponse | null (null in case of 404 response)
     */
    forBaselineableMetric(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getBaselineableMetric(request), response => targetStates.includes(response.baselineableMetric.lifecycleState), targetStates.includes(models.BaselineableMetricLifeCycleStates.Deleted));
        });
    }
    /**
     * Waits forConfig till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetConfigResponse | null (null in case of 404 response)
     */
    forConfig(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getConfig(request), response => targetStates.includes(response.config.lifecycleState), targetStates.includes(models.Config.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDiscoveryJob till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDiscoveryJobResponse | null (null in case of 404 response)
     */
    forDiscoveryJob(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDiscoveryJob(request), response => targetStates.includes(response.discoveryJob.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forMaintenanceWindow till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMaintenanceWindowResponse | null (null in case of 404 response)
     */
    forMaintenanceWindow(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMaintenanceWindow(request), response => targetStates.includes(response.maintenanceWindow.lifecycleState), targetStates.includes(models.MaintenanceWindowLifecycleState.Deleted));
        });
    }
    /**
     * Waits forMetricExtension till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMetricExtensionResponse | null (null in case of 404 response)
     */
    forMetricExtension(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMetricExtension(request), response => targetStates.includes(response.metricExtension.lifecycleState), targetStates.includes(models.MetricExtensionLifeCycleStates.Deleted));
        });
    }
    /**
     * Waits forMonitoredResource till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMonitoredResourceResponse | null (null in case of 404 response)
     */
    forMonitoredResource(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMonitoredResource(request), response => targetStates.includes(response.monitoredResource.lifecycleState), targetStates.includes(models.ResourceLifecycleState.Deleted));
        });
    }
    /**
     * Waits forMonitoredResourceTask till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMonitoredResourceTaskResponse
     */
    forMonitoredResourceTask(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getMonitoredResourceTask(request), response => targetStates.includes(response.monitoredResourceTask.lifecycleState));
        });
    }
    /**
     * Waits forMonitoredResourceType till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMonitoredResourceTypeResponse | null (null in case of 404 response)
     */
    forMonitoredResourceType(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMonitoredResourceType(request), response => targetStates.includes(response.monitoredResourceType.lifecycleState), targetStates.includes(models.ResourceTypeLifecycleState.Deleted));
        });
    }
    /**
     * Waits forMonitoringTemplate till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMonitoringTemplateResponse | null (null in case of 404 response)
     */
    forMonitoringTemplate(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMonitoringTemplate(request), response => targetStates.includes(response.monitoringTemplate.lifecycleState), targetStates.includes(models.MonitoringTemplateLifeCycleStates.Deleted));
        });
    }
    /**
     * Waits forProcessSet till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetProcessSetResponse | null (null in case of 404 response)
     */
    forProcessSet(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getProcessSet(request), response => targetStates.includes(response.processSet.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forWorkRequest
     *
     * @param request the request to send
     * @return response returns GetWorkRequestResponse
     */
    forWorkRequest(request) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getWorkRequest(request), response => (response.workRequest.timeFinished ? true : false));
        });
    }
}
exports.StackMonitoringWaiter = StackMonitoringWaiter;
//# sourceMappingURL=stackmonitoring-waiter.js.map