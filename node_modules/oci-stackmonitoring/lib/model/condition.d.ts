/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The Monitoring Template Alarm Condition.
 */
export interface Condition {
    /**
     * Severity - Critical/Warning
     */
    "severity": model.AlarmConditionSeverity;
    /**
     * The Monitoring Query Language (MQL) expression to evaluate for the alarm.
     */
    "query": string;
    /**
     * The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.
     */
    "body"?: string;
    /**
     * Whether the note need to add into bottom of the body for mapping the alarms information with template or not.
     */
    "shouldAppendNote"?: boolean;
    /**
     * Whether the URL need to add into bottom of the body for mapping the alarms information with template or not.
     */
    "shouldAppendUrl"?: boolean;
    /**
     * The period of time that the condition defined in the alarm must persist before the alarm state changes from \"OK\" to \"FIRING\".
     */
    "triggerDelay"?: string;
}
export declare namespace Condition {
    function getJsonObj(obj: Condition): object;
    function getDeserializedJsonObj(obj: Condition): object;
}
