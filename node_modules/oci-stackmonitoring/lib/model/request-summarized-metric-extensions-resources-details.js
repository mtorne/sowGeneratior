"use strict";
/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestSummarizedMetricExtensionsResourcesDetails = void 0;
var RequestSummarizedMetricExtensionsResourcesDetails;
(function (RequestSummarizedMetricExtensionsResourcesDetails) {
    let AssociationStatus;
    (function (AssociationStatus) {
        AssociationStatus["Enabled"] = "ENABLED";
        AssociationStatus["Disabled"] = "DISABLED";
    })(AssociationStatus = RequestSummarizedMetricExtensionsResourcesDetails.AssociationStatus || (RequestSummarizedMetricExtensionsResourcesDetails.AssociationStatus = {}));
    let GroupBy;
    (function (GroupBy) {
        GroupBy["MetricExtensionId"] = "METRIC_EXTENSION_ID";
    })(GroupBy = RequestSummarizedMetricExtensionsResourcesDetails.GroupBy || (RequestSummarizedMetricExtensionsResourcesDetails.GroupBy = {}));
    let SortBy;
    (function (SortBy) {
        SortBy["Count"] = "COUNT";
    })(SortBy = RequestSummarizedMetricExtensionsResourcesDetails.SortBy || (RequestSummarizedMetricExtensionsResourcesDetails.SortBy = {}));
    let SortOrder;
    (function (SortOrder) {
        SortOrder["Asc"] = "ASC";
        SortOrder["Desc"] = "DESC";
    })(SortOrder = RequestSummarizedMetricExtensionsResourcesDetails.SortOrder || (RequestSummarizedMetricExtensionsResourcesDetails.SortOrder = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    RequestSummarizedMetricExtensionsResourcesDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    RequestSummarizedMetricExtensionsResourcesDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(RequestSummarizedMetricExtensionsResourcesDetails = exports.RequestSummarizedMetricExtensionsResourcesDetails || (exports.RequestSummarizedMetricExtensionsResourcesDetails = {}));
//# sourceMappingURL=request-summarized-metric-extensions-resources-details.js.map