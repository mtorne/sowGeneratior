/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about updating a monitoring template. The monitoring template displayName should be unique in a compartment.
 */
export interface UpdateMonitoringTemplateDetails {
    /**
     * A user-friendly name for the monitoring template. It is unique and mutable in nature.
     */
    "displayName"?: string;
    /**
     * A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable.
     */
    "description"?: string;
    /**
     * A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource
     */
    "destinations"?: Array<string>;
    /**
     * User can create the out of box alarm only for multiple resourceTypes not for individual resource instances and groups for specified compartment.
     */
    "isAlarmsEnabled"?: boolean;
    /**
     * Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     */
    "isSplitNotificationEnabled"?: boolean;
    /**
     * List of members of this monitoring template.
     */
    "members"?: Array<model.MemberReference>;
    /**
     * The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     */
    "repeatNotificationDuration"?: string;
    /**
     * The format to use for alarm notifications.
     */
    "messageFormat"?: model.MessageFormat;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace UpdateMonitoringTemplateDetails {
    function getJsonObj(obj: UpdateMonitoringTemplateDetails): object;
    function getDeserializedJsonObj(obj: UpdateMonitoringTemplateDetails): object;
}
