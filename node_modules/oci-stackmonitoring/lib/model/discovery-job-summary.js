"use strict";
/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscoveryJobSummary = void 0;
var DiscoveryJobSummary;
(function (DiscoveryJobSummary) {
    let ResourceType;
    (function (ResourceType) {
        ResourceType["WeblogicDomain"] = "WEBLOGIC_DOMAIN";
        ResourceType["EbsInstance"] = "EBS_INSTANCE";
        ResourceType["SqlServer"] = "SQL_SERVER";
        ResourceType["ApacheTomcat"] = "APACHE_TOMCAT";
        ResourceType["OracleDatabase"] = "ORACLE_DATABASE";
        ResourceType["OciOracleDb"] = "OCI_ORACLE_DB";
        ResourceType["OciOracleCdb"] = "OCI_ORACLE_CDB";
        ResourceType["OciOraclePdb"] = "OCI_ORACLE_PDB";
        ResourceType["Host"] = "HOST";
        ResourceType["OraclePsft"] = "ORACLE_PSFT";
        ResourceType["OracleMft"] = "ORACLE_MFT";
        ResourceType["ApacheHttpServer"] = "APACHE_HTTP_SERVER";
        ResourceType["OracleGoldengate"] = "ORACLE_GOLDENGATE";
        ResourceType["CustomResource"] = "CUSTOM_RESOURCE";
        ResourceType["OracleHttpServer"] = "ORACLE_HTTP_SERVER";
        ResourceType["MicrosoftIis"] = "MICROSOFT_IIS";
        ResourceType["Nginx"] = "NGINX";
        ResourceType["JbossServer"] = "JBOSS_SERVER";
        ResourceType["JbossDomain"] = "JBOSS_DOMAIN";
        ResourceType["OracleJvm"] = "ORACLE_JVM";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ResourceType["UnknownValue"] = "UNKNOWN_VALUE";
    })(ResourceType = DiscoveryJobSummary.ResourceType || (DiscoveryJobSummary.ResourceType = {}));
    let DiscoveryType;
    (function (DiscoveryType) {
        DiscoveryType["Add"] = "ADD";
        DiscoveryType["AddWithRetry"] = "ADD_WITH_RETRY";
        DiscoveryType["Refresh"] = "REFRESH";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DiscoveryType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DiscoveryType = DiscoveryJobSummary.DiscoveryType || (DiscoveryJobSummary.DiscoveryType = {}));
    let Status;
    (function (Status) {
        Status["Success"] = "SUCCESS";
        Status["Failure"] = "FAILURE";
        Status["Inprogress"] = "INPROGRESS";
        Status["Inactive"] = "INACTIVE";
        Status["Created"] = "CREATED";
        Status["Deleted"] = "DELETED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = DiscoveryJobSummary.Status || (DiscoveryJobSummary.Status = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DiscoveryJobSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DiscoveryJobSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(DiscoveryJobSummary = exports.DiscoveryJobSummary || (exports.DiscoveryJobSummary = {}));
//# sourceMappingURL=discovery-job-summary.js.map