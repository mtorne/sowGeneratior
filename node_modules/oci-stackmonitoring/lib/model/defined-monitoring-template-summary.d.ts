/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary information about defined Monitoring Template for specified resourceType.
 */
export interface DefinedMonitoringTemplateSummary {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the definedMonitoringTemplate.
     */
    "id": string;
    /**
     * The name of the definedMonitoringTemplate.
     */
    "displayName": string;
    /**
     * The stack monitoring service or application emitting the metric that is evaluated by the alarm.
     */
    "namespace": string;
    /**
     * Type of composite resource type OCID like EBS/PEOPLE_SOFT.
     */
    "compositeType"?: string;
    /**
     * The resource types OCID.
     */
    "resourceType": string;
    /**
     * Defined Monitoring template alarm conditions
     */
    "definedAlarmConditions": Array<model.DefinedAlarmCondition>;
    /**
     * The date and time the monitoringTemplate was created. Format defined by RFC3339.
     */
    "timeCreated": Date;
    /**
     * The date and time the monitoringTemplate was updated. Format defined by RFC3339.
     */
    "timeUpdated"?: Date;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace DefinedMonitoringTemplateSummary {
    function getJsonObj(obj: DefinedMonitoringTemplateSummary): object;
    function getDeserializedJsonObj(obj: DefinedMonitoringTemplateSummary): object;
}
