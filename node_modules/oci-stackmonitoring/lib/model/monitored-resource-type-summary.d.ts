/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The summary of monitored resource type.
 */
export interface MonitoredResourceTypeSummary {
    /**
     * Monitored resource type identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     */
    "id": string;
    /**
     * A unique monitored resource type name. The name must be unique across tenancy.
     * Name can not be changed.
     *
     */
    "name": string;
    /**
     * Monitored resource type display name.
     */
    "displayName"?: string;
    /**
     * A friendly description.
     */
    "description"?: string;
    /**
     * Metric namespace for resource type.
     */
    "metricNamespace"?: string;
    /**
     * Compartment Identifier [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     */
    "compartmentId": string;
    "availabilityMetricsConfig"?: model.AvailabilityMetricsDetails;
    "handlerConfig"?: model.AgentExtensionHandlerConfiguration;
    /**
     * If boolean flag is true, then the resource type cannot be modified or deleted.
     */
    "isSystemDefined"?: boolean;
    /**
     * Lifecycle state of the monitored resource type.
     */
    "lifecycleState"?: model.ResourceTypeLifecycleState;
    /**
     * Source type to indicate if the resource is stack monitoring discovered, OCI native resource, etc.
     *
     */
    "sourceType"?: model.SourceType;
    /**
     * Resource Category to indicate the kind of resource type.
     *
     */
    "resourceCategory"?: model.ResourceCategory;
    "metadata"?: model.SystemFormatResourceTypeMetadataDetails;
    /**
     * Key/Value pair for additional namespaces used by stack monitoring services for SYSTEM (SMB) resource types.
     */
    "additionalNamespaceMap"?: {
        [key: string]: string;
    };
    /**
     * The date and time when the monitored resource type was created, expressed in
     * [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     *
     */
    "timeCreated"?: Date;
    /**
     * The date and time when the monitored resource was updated, expressed in
     * [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     *
     */
    "timeUpdated"?: Date;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace MonitoredResourceTypeSummary {
    function getJsonObj(obj: MonitoredResourceTypeSummary): object;
    function getDeserializedJsonObj(obj: MonitoredResourceTypeSummary): object;
}
