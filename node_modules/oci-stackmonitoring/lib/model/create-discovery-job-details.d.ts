/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The request of DiscoveryJob details.
 */
export interface CreateDiscoveryJobDetails {
    /**
     * Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
     *
     */
    "discoveryType"?: CreateDiscoveryJobDetails.DiscoveryType;
    /**
     * Client who submits discovery job.
     */
    "discoveryClient"?: string;
    /**
     * The OCID of Compartment
     */
    "compartmentId": string;
    "discoveryDetails": model.DiscoveryDetails;
    /**
     * If this parameter set to true, the specified tags will be applied
     * to all resources discovered in the current request.
     * Default is true.
     *
     */
    "shouldPropagateTagsToDiscoveredResources"?: boolean;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateDiscoveryJobDetails {
    enum DiscoveryType {
        Add = "ADD",
        AddWithRetry = "ADD_WITH_RETRY",
        Refresh = "REFRESH"
    }
    function getJsonObj(obj: CreateDiscoveryJobDetails): object;
    function getDeserializedJsonObj(obj: CreateDiscoveryJobDetails): object;
}
