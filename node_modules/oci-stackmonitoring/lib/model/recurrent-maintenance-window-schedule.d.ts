/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Schedule information for the Maintenance Window that is executed multiple times.
 *
 */
export interface RecurrentMaintenanceWindowSchedule extends model.MaintenanceWindowSchedule {
    /**
     * Start time of Maintenance window. A RFC3339 formatted datetime string
     *
     */
    "timeMaintenanceWindowStart"?: Date;
    /**
     * Start time of Maintenance window. A RFC3339 formatted datetime string
     *
     */
    "timeMaintenanceWindowEnd"?: Date;
    /**
     * A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence.
     * Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10
     * FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY.
     * BYDAY: Comma separated days for Weekly Maintenance Window.
     * BYHOUR: Specifies the start hour of each recurrence after {@code timeMaintenanceWindowStart} value.
     * BYMINUTE: Specifies the start minute of each reccurrence after {@code timeMaintenanceWindowStart} value. The default value is 00
     * BYSECOND: Specifies the start second of each reccurrence after {@code timeMaintenanceWindowStart} value. The default value is 00
     * Other Rules are not supported.
     *
     */
    "maintenanceWindowRecurrences": string;
    /**
     * Duration time of each recurrence of each Maintenance Window.
     * It must be specified as a string in ISO 8601 extended format.
     *
     */
    "maintenanceWindowDuration"?: string;
    "scheduleType": string;
}
export declare namespace RecurrentMaintenanceWindowSchedule {
    function getJsonObj(obj: RecurrentMaintenanceWindowSchedule, isParentJsonObj?: boolean): object;
    const scheduleType = "RECURRENT";
    function getDeserializedJsonObj(obj: RecurrentMaintenanceWindowSchedule, isParentJsonObj?: boolean): object;
}
