/**
 * Bastion API
 * Use the Bastion API to provide restricted and time-limited access to target resources that don't have public endpoints. Bastions let authorized users connect from specific IP addresses to target resources using Secure Shell (SSH) sessions. For more information, see [the Bastion documentation](https://docs.oracle.com/iaas/Content/Bastion/home.htm).
 * OpenAPI spec version: 20210331
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A bastion session resource. A bastion session lets authorized users connect to a target resource using a Secure Shell (SSH) for a predetermined amount of time.
 */
export interface Session {
    /**
     * The unique identifier (OCID) of the session, which can't be changed after creation.
     */
    "id": string;
    /**
     * The name of the session.
     */
    "displayName"?: string;
    /**
     * The unique identifier (OCID) of the bastion that is hosting this session.
     */
    "bastionId": string;
    /**
     * The name of the bastion that is hosting this session.
     */
    "bastionName": string;
    /**
     * The username that the session uses to connect to the target resource.
     */
    "bastionUserName"?: string;
    "targetResourceDetails": model.DynamicPortForwardingSessionTargetResourceDetails | model.ManagedSshSessionTargetResourceDetails | model.PortForwardingSessionTargetResourceDetails;
    /**
     * The connection message for the session.
     */
    "sshMetadata"?: {
        [key: string]: string;
    };
    /**
     * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     */
    "keyType"?: Session.KeyType;
    "keyDetails": model.PublicKeyDetails;
    /**
     * The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
     */
    "bastionPublicHostKeyInfo"?: string;
    /**
     * The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2020-01-25T21:10:29.600Z}
     *
     */
    "timeCreated": Date;
    /**
     * The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * Example: {@code 2020-01-25T21:10:29.600Z}
     *
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the session.
     */
    "lifecycleState": model.SessionLifecycleState;
    /**
     * A message describing the current session state in more detail.
     */
    "lifecycleDetails"?: string;
    /**
     * The amount of time the session can remain active. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sessionTtlInSeconds": number;
}
export declare namespace Session {
    enum KeyType {
        Pub = "PUB",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Session): object;
    function getDeserializedJsonObj(obj: Session): object;
}
