/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { AttachmentWaiter } from "./attachment-waiter";
import { MarketplacePublisherWaiter } from "./marketplacepublisher-waiter";
import { OfferWaiter } from "./offer-waiter";
declare const Breaker: any;
export declare enum AttachmentApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class AttachmentClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": AttachmentWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new AttachmentWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): AttachmentWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): AttachmentWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Creates a new Attachment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAttachmentRequest
     * @return CreateAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateAttachment.ts.html |here} to see how to use CreateAttachment API.
     */
    createAttachment(createAttachmentRequest: requests.CreateAttachmentRequest): Promise<responses.CreateAttachmentResponse>;
    /**
     * Deletes a Attachment resource by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAttachmentRequest
     * @return DeleteAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteAttachment.ts.html |here} to see how to use DeleteAttachment API.
     */
    deleteAttachment(deleteAttachmentRequest: requests.DeleteAttachmentRequest): Promise<responses.DeleteAttachmentResponse>;
    /**
     * Gets a Attachment by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAttachmentRequest
     * @return GetAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetAttachment.ts.html |here} to see how to use GetAttachment API.
     */
    getAttachment(getAttachmentRequest: requests.GetAttachmentRequest): Promise<responses.GetAttachmentResponse>;
    /**
     * Gets a Attachment content by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAttachmentContentRequest
     * @return GetAttachmentContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetAttachmentContent.ts.html |here} to see how to use GetAttachmentContent API.
     */
    getAttachmentContent(getAttachmentContentRequest: requests.GetAttachmentContentRequest): Promise<responses.GetAttachmentContentResponse>;
    /**
     * Returns a list of Attachments. Requires either the BuyerCompartmentId or the SellerCompartmentId params. If neither or both are provided, then the API will return a 400.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAttachmentsRequest
     * @return ListAttachmentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListAttachments.ts.html |here} to see how to use ListAttachments API.
     */
    listAttachments(listAttachmentsRequest: requests.ListAttachmentsRequest): Promise<responses.ListAttachmentsResponse>;
}
export declare enum MarketplacePublisherApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class MarketplacePublisherClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": MarketplacePublisherWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new MarketplacePublisherWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): MarketplacePublisherWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): MarketplacePublisherWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Mark the Term Version identified by the id as active
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ActivateTermVersionRequest
     * @return ActivateTermVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ActivateTermVersion.ts.html |here} to see how to use ActivateTermVersion API.
     */
    activateTermVersion(activateTermVersionRequest: requests.ActivateTermVersionRequest): Promise<responses.ActivateTermVersionResponse>;
    /**
     * Cancels the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Cascade delete the listing and its subresources.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CascadingDeleteListingRequest
     * @return CascadingDeleteListingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CascadingDeleteListing.ts.html |here} to see how to use CascadingDeleteListing API.
     */
    cascadingDeleteListing(cascadingDeleteListingRequest: requests.CascadingDeleteListingRequest): Promise<responses.CascadingDeleteListingResponse>;
    /**
     * Cascade delete listing revision and its subresources.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CascadingDeleteListingRevisionRequest
     * @return CascadingDeleteListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CascadingDeleteListingRevision.ts.html |here} to see how to use CascadingDeleteListingRevision API.
     */
    cascadingDeleteListingRevision(cascadingDeleteListingRevisionRequest: requests.CascadingDeleteListingRevisionRequest): Promise<responses.CascadingDeleteListingRevisionResponse>;
    /**
     * Moves the specified artifact to the specified compartment within the same tenancy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeArtifactCompartmentRequest
     * @return ChangeArtifactCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ChangeArtifactCompartment.ts.html |here} to see how to use ChangeArtifactCompartment API.
     */
    changeArtifactCompartment(changeArtifactCompartmentRequest: requests.ChangeArtifactCompartmentRequest): Promise<responses.ChangeArtifactCompartmentResponse>;
    /**
     * Moves a listing from one compartment to another
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeListingCompartmentRequest
     * @return ChangeListingCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ChangeListingCompartment.ts.html |here} to see how to use ChangeListingCompartment API.
     */
    changeListingCompartment(changeListingCompartmentRequest: requests.ChangeListingCompartmentRequest): Promise<responses.ChangeListingCompartmentResponse>;
    /**
     * Updates the Listing Revision to New status
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeListingRevisionToNewStatusRequest
     * @return ChangeListingRevisionToNewStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ChangeListingRevisionToNewStatus.ts.html |here} to see how to use ChangeListingRevisionToNewStatus API.
     */
    changeListingRevisionToNewStatus(changeListingRevisionToNewStatusRequest: requests.ChangeListingRevisionToNewStatusRequest): Promise<responses.ChangeListingRevisionToNewStatusResponse>;
    /**
     * Moves a term from one compartment to another
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeTermCompartmentRequest
     * @return ChangeTermCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ChangeTermCompartment.ts.html |here} to see how to use ChangeTermCompartment API.
     */
    changeTermCompartment(changeTermCompartmentRequest: requests.ChangeTermCompartmentRequest): Promise<responses.ChangeTermCompartmentResponse>;
    /**
     * Clone the published/withdrawn Listing Revision identified by the identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CloneListingRevisionRequest
     * @return CloneListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CloneListingRevision.ts.html |here} to see how to use CloneListingRevision API.
     */
    cloneListingRevision(cloneListingRevisionRequest: requests.CloneListingRevisionRequest): Promise<responses.CloneListingRevisionResponse>;
    /**
       * Creates a new artifact in your compartment.
  * You must specify your compartment ID in the request object.
  * <p>
  You must also specify a *name* for the artifact(although it can be an empty string). It does not
  * have to be unique, and you can change it anytime with {@link #updateArtifact(UpdateArtifactRequest) updateArtifact}..
  * <p>
  You must also specify a *artifactType* for the artifact. Allowed values are CONTAINER_IMAGE and HELM_CHART
  * <p>
  You must also provide the container or helm chart registry details for the corresponding images.
  * Oracle container registry details (Registry/Concepts/registryoverview.htm).
  * <p>
  After you send your request, the new object's `status` will temporarily be IN_PROGRESS and `lifecycleState` will be CREATING.
  * Before using the object, first make sure its `lifecycleState` has changed to ACTIVE and the status has changed to \u2018AVAILABLE\u2019 for the new Artifact.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateArtifactRequest
       * @return CreateArtifactResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateArtifact.ts.html |here} to see how to use CreateArtifact API.
       */
    createArtifact(createArtifactRequest: requests.CreateArtifactRequest): Promise<responses.CreateArtifactResponse>;
    /**
       * Creates a new listing in your compartment.
  * You must specify your compartment ID in the request object.
  * <p>
  You must also specify a *name* for the listing and cannot be updated later.
  * <p>
  You must also specify a *packageType* for the listing. Allowed values are CONTAINER_IMAGE and HELM_CHART
  * <p>
  After you send your request, the new object's `lifecycleState` will be CREATING.
  * Before using the object, first make sure its `lifecycleState` has changed to ACTIVE.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param CreateListingRequest
       * @return CreateListingResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateListing.ts.html |here} to see how to use CreateListing API.
       */
    createListing(createListingRequest: requests.CreateListingRequest): Promise<responses.CreateListingResponse>;
    /**
     * Creates a new Listing Revision.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateListingRevisionRequest
     * @return CreateListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateListingRevision.ts.html |here} to see how to use CreateListingRevision API.
     */
    createListingRevision(createListingRevisionRequest: requests.CreateListingRevisionRequest): Promise<responses.CreateListingRevisionResponse>;
    /**
     * Creates a new listing revision attachment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateListingRevisionAttachmentRequest
     * @return CreateListingRevisionAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateListingRevisionAttachment.ts.html |here} to see how to use CreateListingRevisionAttachment API.
     */
    createListingRevisionAttachment(createListingRevisionAttachmentRequest: requests.CreateListingRevisionAttachmentRequest): Promise<responses.CreateListingRevisionAttachmentResponse>;
    /**
     * Creates a new Listing Revision Note.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateListingRevisionNoteRequest
     * @return CreateListingRevisionNoteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateListingRevisionNote.ts.html |here} to see how to use CreateListingRevisionNote API.
     */
    createListingRevisionNote(createListingRevisionNoteRequest: requests.CreateListingRevisionNoteRequest): Promise<responses.CreateListingRevisionNoteResponse>;
    /**
     * Creates a new Listing Revision Package.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateListingRevisionPackageRequest
     * @return CreateListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateListingRevisionPackage.ts.html |here} to see how to use CreateListingRevisionPackage API.
     */
    createListingRevisionPackage(createListingRevisionPackageRequest: requests.CreateListingRevisionPackageRequest): Promise<responses.CreateListingRevisionPackageResponse>;
    /**
     * Creates a new Term.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateTermRequest
     * @return CreateTermResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateTerm.ts.html |here} to see how to use CreateTerm API.
     */
    createTerm(createTermRequest: requests.CreateTermRequest): Promise<responses.CreateTermResponse>;
    /**
     * Creates a new Term Version.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateTermVersionRequest
     * @return CreateTermVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateTermVersion.ts.html |here} to see how to use CreateTermVersion API.
     */
    createTermVersion(createTermVersionRequest: requests.CreateTermVersionRequest): Promise<responses.CreateTermVersionResponse>;
    /**
     * Deletes the specified artifact.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteArtifactRequest
     * @return DeleteArtifactResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteArtifact.ts.html |here} to see how to use DeleteArtifact API.
     */
    deleteArtifact(deleteArtifactRequest: requests.DeleteArtifactRequest): Promise<responses.DeleteArtifactResponse>;
    /**
     * Deletes a listing by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteListingRequest
     * @return DeleteListingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteListing.ts.html |here} to see how to use DeleteListing API.
     */
    deleteListing(deleteListingRequest: requests.DeleteListingRequest): Promise<responses.DeleteListingResponse>;
    /**
     * Deletes a listing by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteListingRevisionRequest
     * @return DeleteListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteListingRevision.ts.html |here} to see how to use DeleteListingRevision API.
     */
    deleteListingRevision(deleteListingRevisionRequest: requests.DeleteListingRevisionRequest): Promise<responses.DeleteListingRevisionResponse>;
    /**
     * Deletes a listing revision attachment by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteListingRevisionAttachmentRequest
     * @return DeleteListingRevisionAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteListingRevisionAttachment.ts.html |here} to see how to use DeleteListingRevisionAttachment API.
     */
    deleteListingRevisionAttachment(deleteListingRevisionAttachmentRequest: requests.DeleteListingRevisionAttachmentRequest): Promise<responses.DeleteListingRevisionAttachmentResponse>;
    /**
     * Deletes a listing revision note by the identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteListingRevisionNoteRequest
     * @return DeleteListingRevisionNoteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteListingRevisionNote.ts.html |here} to see how to use DeleteListingRevisionNote API.
     */
    deleteListingRevisionNote(deleteListingRevisionNoteRequest: requests.DeleteListingRevisionNoteRequest): Promise<responses.DeleteListingRevisionNoteResponse>;
    /**
     * Deletes a listing revision package by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteListingRevisionPackageRequest
     * @return DeleteListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteListingRevisionPackage.ts.html |here} to see how to use DeleteListingRevisionPackage API.
     */
    deleteListingRevisionPackage(deleteListingRevisionPackageRequest: requests.DeleteListingRevisionPackageRequest): Promise<responses.DeleteListingRevisionPackageResponse>;
    /**
     * Deletes a Term by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteTermRequest
     * @return DeleteTermResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteTerm.ts.html |here} to see how to use DeleteTerm API.
     */
    deleteTerm(deleteTermRequest: requests.DeleteTermRequest): Promise<responses.DeleteTermResponse>;
    /**
     * Deletes a Term by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteTermVersionRequest
     * @return DeleteTermVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteTermVersion.ts.html |here} to see how to use DeleteTermVersion API.
     */
    deleteTermVersion(deleteTermVersionRequest: requests.DeleteTermVersionRequest): Promise<responses.DeleteTermVersionResponse>;
    /**
     * Gets the specified artifact's information.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetArtifactRequest
     * @return GetArtifactResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetArtifact.ts.html |here} to see how to use GetArtifact API.
     */
    getArtifact(getArtifactRequest: requests.GetArtifactRequest): Promise<responses.GetArtifactResponse>;
    /**
     * Gets the specified category's information.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCategoryRequest
     * @return GetCategoryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetCategory.ts.html |here} to see how to use GetCategory API.
     */
    getCategory(getCategoryRequest: requests.GetCategoryRequest): Promise<responses.GetCategoryResponse>;
    /**
     * Gets the details for a listing.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetListingRequest
     * @return GetListingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetListing.ts.html |here} to see how to use GetListing API.
     */
    getListing(getListingRequest: requests.GetListingRequest): Promise<responses.GetListingResponse>;
    /**
     * Gets the details for a listing revision.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetListingRevisionRequest
     * @return GetListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetListingRevision.ts.html |here} to see how to use GetListingRevision API.
     */
    getListingRevision(getListingRevisionRequest: requests.GetListingRevisionRequest): Promise<responses.GetListingRevisionResponse>;
    /**
     * Get the details of the specified listing revision attachment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetListingRevisionAttachmentRequest
     * @return GetListingRevisionAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetListingRevisionAttachment.ts.html |here} to see how to use GetListingRevisionAttachment API.
     */
    getListingRevisionAttachment(getListingRevisionAttachmentRequest: requests.GetListingRevisionAttachmentRequest): Promise<responses.GetListingRevisionAttachmentResponse>;
    /**
     * Get note details by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetListingRevisionNoteRequest
     * @return GetListingRevisionNoteResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetListingRevisionNote.ts.html |here} to see how to use GetListingRevisionNote API.
     */
    getListingRevisionNote(getListingRevisionNoteRequest: requests.GetListingRevisionNoteRequest): Promise<responses.GetListingRevisionNoteResponse>;
    /**
     * Get the details of the specified version of a package.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetListingRevisionPackageRequest
     * @return GetListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetListingRevisionPackage.ts.html |here} to see how to use GetListingRevisionPackage API.
     */
    getListingRevisionPackage(getListingRevisionPackageRequest: requests.GetListingRevisionPackageRequest): Promise<responses.GetListingRevisionPackageResponse>;
    /**
     * Gets the specified market's information.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMarketRequest
     * @return GetMarketResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetMarket.ts.html |here} to see how to use GetMarket API.
     */
    getMarket(getMarketRequest: requests.GetMarketRequest): Promise<responses.GetMarketResponse>;
    /**
     * Gets a Product by code identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProductRequest
     * @return GetProductResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetProduct.ts.html |here} to see how to use GetProduct API.
     */
    getProduct(getProductRequest: requests.GetProductRequest): Promise<responses.GetProductResponse>;
    /**
     * Gets a Publisher by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPublisherRequest
     * @return GetPublisherResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetPublisher.ts.html |here} to see how to use GetPublisher API.
     */
    getPublisher(getPublisherRequest: requests.GetPublisherRequest): Promise<responses.GetPublisherResponse>;
    /**
     * Gets a Term by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTermRequest
     * @return GetTermResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetTerm.ts.html |here} to see how to use GetTerm API.
     */
    getTerm(getTermRequest: requests.GetTermRequest): Promise<responses.GetTermResponse>;
    /**
     * Gets a Term Version by the identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTermVersionRequest
     * @return GetTermVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetTermVersion.ts.html |here} to see how to use GetTermVersion API.
     */
    getTermVersion(getTermVersionRequest: requests.GetTermVersionRequest): Promise<responses.GetTermVersionResponse>;
    /**
     * Gets details of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists the artifacts in your compartment. You must specify your compartment's OCID as the value for
     * the compartment ID.
     * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListArtifactsRequest
     * @return ListArtifactsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListArtifacts.ts.html |here} to see how to use ListArtifacts API.
     */
    listArtifacts(listArtifactsRequest: requests.ListArtifactsRequest): Promise<responses.ListArtifactsResponse>;
    /**
     * Lists the categories in your compartment. You must specify your compartment's OCID as the value for
     * the compartment ID.
     * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListCategoriesRequest
     * @return ListCategoriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListCategories.ts.html |here} to see how to use ListCategories API.
     */
    listCategories(listCategoriesRequest: requests.ListCategoriesRequest): Promise<responses.ListCategoriesResponse>;
    /**
     * Gets the list of attachments for a listing revision in a compartment
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListListingRevisionAttachmentsRequest
     * @return ListListingRevisionAttachmentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListListingRevisionAttachments.ts.html |here} to see how to use ListListingRevisionAttachments API.
     */
    listListingRevisionAttachments(listListingRevisionAttachmentsRequest: requests.ListListingRevisionAttachmentsRequest): Promise<responses.ListListingRevisionAttachmentsResponse>;
    /**
     * Gets the list of notes for a listing revision.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListListingRevisionNotesRequest
     * @return ListListingRevisionNotesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListListingRevisionNotes.ts.html |here} to see how to use ListListingRevisionNotes API.
     */
    listListingRevisionNotes(listListingRevisionNotesRequest: requests.ListListingRevisionNotesRequest): Promise<responses.ListListingRevisionNotesResponse>;
    /**
     * Gets the list of packages for a listing revision.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListListingRevisionPackagesRequest
     * @return ListListingRevisionPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListListingRevisionPackages.ts.html |here} to see how to use ListListingRevisionPackages API.
     */
    listListingRevisionPackages(listListingRevisionPackagesRequest: requests.ListListingRevisionPackagesRequest): Promise<responses.ListListingRevisionPackagesResponse>;
    /**
       * Lists the list of listing revisions for a specific listing ID, compartment ID or listing revision status.
  * <p>
  You can specify your compartment's OCID as the value for the compartment ID.
  * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListListingRevisionsRequest
       * @return ListListingRevisionsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListListingRevisions.ts.html |here} to see how to use ListListingRevisions API.
       */
    listListingRevisions(listListingRevisionsRequest: requests.ListListingRevisionsRequest): Promise<responses.ListListingRevisionsResponse>;
    /**
     * Lists the listings in your compartment. You must specify your compartment's OCID as the value for
     * the compartment ID.
     * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListListingsRequest
     * @return ListListingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListListings.ts.html |here} to see how to use ListListings API.
     */
    listListings(listListingsRequest: requests.ListListingsRequest): Promise<responses.ListListingsResponse>;
    /**
     * Lists the markets in your compartment. You must specify your compartment's OCID as the value for
     * the compartment ID.
     * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMarketsRequest
     * @return ListMarketsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListMarkets.ts.html |here} to see how to use ListMarkets API.
     */
    listMarkets(listMarketsRequest: requests.ListMarketsRequest): Promise<responses.ListMarketsResponse>;
    /**
     * Lists the products in your compartment. You must specify your compartment's OCID as the value for
     * the compartment ID.
     * For information about OCIDs, see Resource Identifiers (Content/General/Concepts/identifiers.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProductsRequest
     * @return ListProductsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListProducts.ts.html |here} to see how to use ListProducts API.
     */
    listProducts(listProductsRequest: requests.ListProductsRequest): Promise<responses.ListProductsResponse>;
    /**
     * Returns a list of publishers.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPublishersRequest
     * @return ListPublishersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListPublishers.ts.html |here} to see how to use ListPublishers API.
     */
    listPublishers(listPublishersRequest: requests.ListPublishersRequest): Promise<responses.ListPublishersResponse>;
    /**
     * Returns a list of the publisher term versions.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTermVersionsRequest
     * @return ListTermVersionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListTermVersions.ts.html |here} to see how to use ListTermVersions API.
     */
    listTermVersions(listTermVersionsRequest: requests.ListTermVersionsRequest): Promise<responses.ListTermVersionsResponse>;
    /**
     * Returns a list of the publisher terms.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTermsRequest
     * @return ListTermsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListTerms.ts.html |here} to see how to use ListTerms API.
     */
    listTerms(listTermsRequest: requests.ListTermsRequest): Promise<responses.ListTermsResponse>;
    /**
     * Returns a (paginated) list of errors for the work request with the given ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a (paginated) list of logs for the work request with the given ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Mark the Listing Revision Package identified by the id and package version as default
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param MarkListingRevisionPackageAsDefaultRequest
     * @return MarkListingRevisionPackageAsDefaultResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/MarkListingRevisionPackageAsDefault.ts.html |here} to see how to use MarkListingRevisionPackageAsDefault API.
     */
    markListingRevisionPackageAsDefault(markListingRevisionPackageAsDefaultRequest: requests.MarkListingRevisionPackageAsDefaultRequest): Promise<responses.MarkListingRevisionPackageAsDefaultResponse>;
    /**
     * Publish the Listing revision identified by Identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PublishListingRevisionRequest
     * @return PublishListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/PublishListingRevision.ts.html |here} to see how to use PublishListingRevision API.
     */
    publishListingRevision(publishListingRevisionRequest: requests.PublishListingRevisionRequest): Promise<responses.PublishListingRevisionResponse>;
    /**
     * Updates the Listing Revision to PublishAsPrivate
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PublishListingRevisionAsPrivateRequest
     * @return PublishListingRevisionAsPrivateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/PublishListingRevisionAsPrivate.ts.html |here} to see how to use PublishListingRevisionAsPrivate API.
     */
    publishListingRevisionAsPrivate(publishListingRevisionAsPrivateRequest: requests.PublishListingRevisionAsPrivateRequest): Promise<responses.PublishListingRevisionAsPrivateResponse>;
    /**
     * Updates the Listing Revision Package to publish status
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PublishListingRevisionPackageRequest
     * @return PublishListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/PublishListingRevisionPackage.ts.html |here} to see how to use PublishListingRevisionPackage API.
     */
    publishListingRevisionPackage(publishListingRevisionPackageRequest: requests.PublishListingRevisionPackageRequest): Promise<responses.PublishListingRevisionPackageResponse>;
    /**
     * Update the Listing Revision identified by the id for review
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SubmitListingRevisionForReviewRequest
     * @return SubmitListingRevisionForReviewResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/SubmitListingRevisionForReview.ts.html |here} to see how to use SubmitListingRevisionForReview API.
     */
    submitListingRevisionForReview(submitListingRevisionForReviewRequest: requests.SubmitListingRevisionForReviewRequest): Promise<responses.SubmitListingRevisionForReviewResponse>;
    /**
     * Updates the Listing Revision Package to Unpublish status
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UnPublishListingRevisionPackageRequest
     * @return UnPublishListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UnPublishListingRevisionPackage.ts.html |here} to see how to use UnPublishListingRevisionPackage API.
     */
    unPublishListingRevisionPackage(unPublishListingRevisionPackageRequest: requests.UnPublishListingRevisionPackageRequest): Promise<responses.UnPublishListingRevisionPackageResponse>;
    /**
     * Updates the specified artifact identified by the id.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateArtifactRequest
     * @return UpdateArtifactResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateArtifact.ts.html |here} to see how to use UpdateArtifact API.
     */
    updateArtifact(updateArtifactRequest: requests.UpdateArtifactRequest): Promise<responses.UpdateArtifactResponse>;
    /**
     * Updates the specified Listing identified by the id.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRequest
     * @return UpdateListingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListing.ts.html |here} to see how to use UpdateListing API.
     */
    updateListing(updateListingRequest: requests.UpdateListingRequest): Promise<responses.UpdateListingResponse>;
    /**
     * Updates the Listing Revision
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRevisionRequest
     * @return UpdateListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListingRevision.ts.html |here} to see how to use UpdateListingRevision API.
     */
    updateListingRevision(updateListingRevisionRequest: requests.UpdateListingRevisionRequest): Promise<responses.UpdateListingRevisionResponse>;
    /**
     * Updates the Listing Revision Attachment
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRevisionAttachmentRequest
     * @return UpdateListingRevisionAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListingRevisionAttachment.ts.html |here} to see how to use UpdateListingRevisionAttachment API.
     */
    updateListingRevisionAttachment(updateListingRevisionAttachmentRequest: requests.UpdateListingRevisionAttachmentRequest): Promise<responses.UpdateListingRevisionAttachmentResponse>;
    /**
     * Update a file to listing revision attachment
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRevisionAttachmentContentRequest
     * @return UpdateListingRevisionAttachmentContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListingRevisionAttachmentContent.ts.html |here} to see how to use UpdateListingRevisionAttachmentContent API.
     */
    updateListingRevisionAttachmentContent(updateListingRevisionAttachmentContentRequest: requests.UpdateListingRevisionAttachmentContentRequest): Promise<responses.UpdateListingRevisionAttachmentContentResponse>;
    /**
     * Updates the Listing Revision
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRevisionIconContentRequest
     * @return UpdateListingRevisionIconContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListingRevisionIconContent.ts.html |here} to see how to use UpdateListingRevisionIconContent API.
     */
    updateListingRevisionIconContent(updateListingRevisionIconContentRequest: requests.UpdateListingRevisionIconContentRequest): Promise<responses.UpdateListingRevisionIconContentResponse>;
    /**
     * Updates the Listing Revision Package.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateListingRevisionPackageRequest
     * @return UpdateListingRevisionPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateListingRevisionPackage.ts.html |here} to see how to use UpdateListingRevisionPackage API.
     */
    updateListingRevisionPackage(updateListingRevisionPackageRequest: requests.UpdateListingRevisionPackageRequest): Promise<responses.UpdateListingRevisionPackageResponse>;
    /**
     * Updates the Term
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateTermRequest
     * @return UpdateTermResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateTerm.ts.html |here} to see how to use UpdateTerm API.
     */
    updateTerm(updateTermRequest: requests.UpdateTermRequest): Promise<responses.UpdateTermResponse>;
    /**
     * Updates the Term Version
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateTermVersionRequest
     * @return UpdateTermVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateTermVersion.ts.html |here} to see how to use UpdateTermVersion API.
     */
    updateTermVersion(updateTermVersionRequest: requests.UpdateTermVersionRequest): Promise<responses.UpdateTermVersionResponse>;
    /**
     * Updates the Term Version attachment
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateTermVersionContentRequest
     * @return UpdateTermVersionContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateTermVersionContent.ts.html |here} to see how to use UpdateTermVersionContent API.
     */
    updateTermVersionContent(updateTermVersionContentRequest: requests.UpdateTermVersionContentRequest): Promise<responses.UpdateTermVersionContentResponse>;
    /**
     * Validate and publish artifact.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ValidateAndPublishArtifactRequest
     * @return ValidateAndPublishArtifactResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ValidateAndPublishArtifact.ts.html |here} to see how to use ValidateAndPublishArtifact API.
     */
    validateAndPublishArtifact(validateAndPublishArtifactRequest: requests.ValidateAndPublishArtifactRequest): Promise<responses.ValidateAndPublishArtifactResponse>;
    /**
     * Update the Listing Revision identified by the id as Withdraw/UnPublished.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param WithdrawListingRevisionRequest
     * @return WithdrawListingRevisionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/WithdrawListingRevision.ts.html |here} to see how to use WithdrawListingRevision API.
     */
    withdrawListingRevision(withdrawListingRevisionRequest: requests.WithdrawListingRevisionRequest): Promise<responses.WithdrawListingRevisionResponse>;
}
export declare enum OfferApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class OfferClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OfferWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OfferWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OfferWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OfferWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Creates a new Offer.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateOfferRequest
     * @return CreateOfferResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/CreateOffer.ts.html |here} to see how to use CreateOffer API.
     */
    createOffer(createOfferRequest: requests.CreateOfferRequest): Promise<responses.CreateOfferResponse>;
    /**
     * Deletes an Offer resource by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOfferRequest
     * @return DeleteOfferResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/DeleteOffer.ts.html |here} to see how to use DeleteOffer API.
     */
    deleteOffer(deleteOfferRequest: requests.DeleteOfferRequest): Promise<responses.DeleteOfferResponse>;
    /**
     * Gets an Offer by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOfferRequest
     * @return GetOfferResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetOffer.ts.html |here} to see how to use GetOffer API.
     */
    getOffer(getOfferRequest: requests.GetOfferRequest): Promise<responses.GetOfferResponse>;
    /**
     * Gets an Offer internal details by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOfferInternalDetailRequest
     * @return GetOfferInternalDetailResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/GetOfferInternalDetail.ts.html |here} to see how to use GetOfferInternalDetail API.
     */
    getOfferInternalDetail(getOfferInternalDetailRequest: requests.GetOfferInternalDetailRequest): Promise<responses.GetOfferInternalDetailResponse>;
    /**
     * Returns a list of Offers. Requires either the BuyerCompartmentId or the SellerCompartmentId params. If neither or both are provided, then the API will return a 400.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListOffersRequest
     * @return ListOffersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/ListOffers.ts.html |here} to see how to use ListOffers API.
     */
    listOffers(listOffersRequest: requests.ListOffersRequest): Promise<responses.ListOffersResponse>;
    /**
     * Updates the Offer
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOfferRequest
     * @return UpdateOfferResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/marketplacepublisher/UpdateOffer.ts.html |here} to see how to use UpdateOffer API.
     */
    updateOffer(updateOfferRequest: requests.UpdateOfferRequest): Promise<responses.UpdateOfferResponse>;
}
export {};
