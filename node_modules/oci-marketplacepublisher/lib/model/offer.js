"use strict";
/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Offer = void 0;
const model = __importStar(require("../model"));
var Offer;
(function (Offer) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = Offer.LifecycleState || (Offer.LifecycleState = {}));
    let OfferStatus;
    (function (OfferStatus) {
        OfferStatus["Draft"] = "DRAFT";
        OfferStatus["PendingMarketplace"] = "PENDING_MARKETPLACE";
        OfferStatus["PendingBuyer"] = "PENDING_BUYER";
        OfferStatus["Expired"] = "EXPIRED";
        OfferStatus["Accepted"] = "ACCEPTED";
        OfferStatus["Active"] = "ACTIVE";
        OfferStatus["Ended"] = "ENDED";
        OfferStatus["FailedSend"] = "FAILED_SEND";
        OfferStatus["FailedAccept"] = "FAILED_ACCEPT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OfferStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(OfferStatus = Offer.OfferStatus || (Offer.OfferStatus = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "publisherSummary": obj.publisherSummary
                ? model.PublisherSummary.getJsonObj(obj.publisherSummary)
                : undefined,
            "pricing": obj.pricing ? model.Pricing.getJsonObj(obj.pricing) : undefined,
            "buyerInformation": obj.buyerInformation
                ? model.BuyerInformation.getJsonObj(obj.buyerInformation)
                : undefined,
            "sellerInformation": obj.sellerInformation
                ? model.SellerInformation.getJsonObj(obj.sellerInformation)
                : undefined,
            "resourceBundles": obj.resourceBundles
                ? obj.resourceBundles.map(item => {
                    return model.ResourceBundle.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    Offer.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "publisherSummary": obj.publisherSummary
                ? model.PublisherSummary.getDeserializedJsonObj(obj.publisherSummary)
                : undefined,
            "pricing": obj.pricing ? model.Pricing.getDeserializedJsonObj(obj.pricing) : undefined,
            "buyerInformation": obj.buyerInformation
                ? model.BuyerInformation.getDeserializedJsonObj(obj.buyerInformation)
                : undefined,
            "sellerInformation": obj.sellerInformation
                ? model.SellerInformation.getDeserializedJsonObj(obj.sellerInformation)
                : undefined,
            "resourceBundles": obj.resourceBundles
                ? obj.resourceBundles.map(item => {
                    return model.ResourceBundle.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    Offer.getDeserializedJsonObj = getDeserializedJsonObj;
})(Offer = exports.Offer || (exports.Offer = {}));
//# sourceMappingURL=offer.js.map