"use strict";
/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListingRevision = void 0;
const model = __importStar(require("../model"));
var ListingRevision;
(function (ListingRevision) {
    let Status;
    (function (Status) {
        Status["New"] = "NEW";
        Status["PendingReview"] = "PENDING_REVIEW";
        Status["ReviewInProgress"] = "REVIEW_IN_PROGRESS";
        Status["Rejected"] = "REJECTED";
        Status["Approved"] = "APPROVED";
        Status["PublishInProgress"] = "PUBLISH_IN_PROGRESS";
        Status["PublishFailed"] = "PUBLISH_FAILED";
        Status["Published"] = "PUBLISHED";
        Status["PublishAsPrivateFailed"] = "PUBLISH_AS_PRIVATE_FAILED";
        Status["PublishedAsPrivate"] = "PUBLISHED_AS_PRIVATE";
        Status["PublishAsPrivateInProgress"] = "PUBLISH_AS_PRIVATE_IN_PROGRESS";
        Status["UnpublishInProgress"] = "UNPUBLISH_IN_PROGRESS";
        Status["Unpublished"] = "UNPUBLISHED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = ListingRevision.Status || (ListingRevision.Status = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = ListingRevision.LifecycleState || (ListingRevision.LifecycleState = {}));
    let PricingType;
    (function (PricingType) {
        PricingType["Free"] = "FREE";
        PricingType["Byol"] = "BYOL";
        PricingType["Paygo"] = "PAYGO";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PricingType["UnknownValue"] = "UNKNOWN_VALUE";
    })(PricingType = ListingRevision.PricingType || (ListingRevision.PricingType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "versionDetails": obj.versionDetails
                ? model.VersionDetails.getJsonObj(obj.versionDetails)
                : undefined,
            "contentLanguage": obj.contentLanguage
                ? model.LanguageItem.getJsonObj(obj.contentLanguage)
                : undefined,
            "supportedlanguages": obj.supportedlanguages
                ? obj.supportedlanguages.map(item => {
                    return model.LanguageItem.getJsonObj(item);
                })
                : undefined,
            "supportContacts": obj.supportContacts
                ? obj.supportContacts.map(item => {
                    return model.SupportContact.getJsonObj(item);
                })
                : undefined,
            "supportLinks": obj.supportLinks
                ? obj.supportLinks.map(item => {
                    return model.NamedLink.getJsonObj(item);
                })
                : undefined,
            "icon": obj.icon ? model.ListingRevisionIconAttachment.getJsonObj(obj.icon) : undefined
        });
        return jsonObj;
    }
    ListingRevision.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "versionDetails": obj.versionDetails
                ? model.VersionDetails.getDeserializedJsonObj(obj.versionDetails)
                : undefined,
            "contentLanguage": obj.contentLanguage
                ? model.LanguageItem.getDeserializedJsonObj(obj.contentLanguage)
                : undefined,
            "supportedlanguages": obj.supportedlanguages
                ? obj.supportedlanguages.map(item => {
                    return model.LanguageItem.getDeserializedJsonObj(item);
                })
                : undefined,
            "supportContacts": obj.supportContacts
                ? obj.supportContacts.map(item => {
                    return model.SupportContact.getDeserializedJsonObj(item);
                })
                : undefined,
            "supportLinks": obj.supportLinks
                ? obj.supportLinks.map(item => {
                    return model.NamedLink.getDeserializedJsonObj(item);
                })
                : undefined,
            "icon": obj.icon
                ? model.ListingRevisionIconAttachment.getDeserializedJsonObj(obj.icon)
                : undefined
        });
        return jsonObj;
    }
    ListingRevision.getDeserializedJsonObj = getDeserializedJsonObj;
})(ListingRevision = exports.ListingRevision || (exports.ListingRevision = {}));
//# sourceMappingURL=listing-revision.js.map