/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](https://docs.oracle.com/iaas/Content/Network/Concepts/overview.htm),
[Compute](https://docs.oracle.com/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](https://docs.oracle.com/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](https://docs.oracle.com/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Shows details about the last recycle performed on this host.
 *
 */
export interface RecycleDetails {
    /**
     * Preferred recycle level for hosts associated with the reservation config.
     * * {@code SKIP_RECYCLE} - Skips host wipe.
     * * {@code FULL_RECYCLE} - Does not skip host wipe. This is the default behavior.
     *
     */
    "recycleLevel"?: RecycleDetails.RecycleLevel;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute host group this host was attached to at the time of recycle.
     *
     */
    "computeHostGroupId"?: string;
}
export declare namespace RecycleDetails {
    enum RecycleLevel {
        SkipRecycle = "SKIP_RECYCLE",
        FullRecycle = "FULL_RECYCLE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: RecycleDetails): object;
    function getDeserializedJsonObj(obj: RecycleDetails): object;
}
