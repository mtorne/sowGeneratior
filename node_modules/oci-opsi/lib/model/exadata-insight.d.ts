/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Exadata insight resource.
 */
export interface ExadataInsight {
    /**
     * Exadata insight identifier
     */
    "id": string;
    /**
     * Compartment identifier of the Exadata insight resource
     */
    "compartmentId": string;
    /**
     * The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     */
    "exadataName": string;
    /**
     * The user-friendly name for the Exadata system. The name does not have to be unique.
     */
    "exadataDisplayName"?: string;
    /**
     * Operations Insights internal representation of the the Exadata system type.
     */
    "exadataType"?: model.ExadataType;
    /**
     * Exadata rack type.
     */
    "exadataRackType"?: model.ExadataRackType;
    /**
     * true if virtualization is used in the Exadata system
     */
    "isVirtualizedExadata"?: boolean;
    /**
     * Indicates the status of an Exadata insight in Operations Insights
     */
    "status": model.ResourceStatus;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the Exadata insight was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the Exadata insight.
     */
    "lifecycleState": model.ExadataInsightLifecycleState;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: string;
    "entitySource": string;
}
export declare namespace ExadataInsight {
    function getJsonObj(obj: ExadataInsight): object;
    function getDeserializedJsonObj(obj: ExadataInsight): object;
}
