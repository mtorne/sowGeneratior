/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Summary of a host configuration for a resource.
 */
export interface HostConfigurationSummary {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
     */
    "hostInsightId": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * The host name. The host name is unique amongst the hosts managed by the same management agent.
     */
    "hostName": string;
    /**
     * Platform type.
     * Supported platformType(s) for MACS-managed external host insight: [LINUX, SOLARIS, WINDOWS].
     * Supported platformType(s) for MACS-managed cloud host insight: [LINUX].
     * Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX, WINDOWS, AIX, HP-UX].
     *
     */
    "platformType": HostConfigurationSummary.PlatformType;
    /**
     * Platform version.
     */
    "platformVersion": string;
    /**
     * Platform vendor.
     */
    "platformVendor": string;
    /**
     * Total CPU on this host.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalCpus": number;
    /**
     * Total amount of usable physical memory in gibabytes
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalMemoryInGBs": number;
    /**
     * CPU architechure
     */
    "cpuArchitecture": string;
    /**
     * Size of cache memory in megabytes.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "cpuCacheInMBs": number;
    /**
     * Name of the CPU vendor.
     */
    "cpuVendor": string;
    /**
     * Clock frequency of the processor in megahertz.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "cpuFrequencyInMhz": number;
    /**
     * Model name of processor.
     */
    "cpuImplementation": string;
    /**
     * Number of cores per socket.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "coresPerSocket": number;
    /**
     * Number of total sockets. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSockets": number;
    /**
     * Number of threads per socket. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "threadsPerSocket": number;
    /**
     * Indicates if hyper-threading is enabled or not
     *
     */
    "isHyperThreadingEnabled": boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    "entitySource": string;
}
export declare namespace HostConfigurationSummary {
    enum PlatformType {
        Linux = "LINUX",
        Solaris = "SOLARIS",
        Sunos = "SUNOS",
        Zlinux = "ZLINUX",
        Windows = "WINDOWS",
        Aix = "AIX",
        HpUx = "HP_UX",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: HostConfigurationSummary): object;
    function getDeserializedJsonObj(obj: HostConfigurationSummary): object;
}
