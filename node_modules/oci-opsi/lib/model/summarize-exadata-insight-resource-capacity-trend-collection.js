"use strict";
/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SummarizeExadataInsightResourceCapacityTrendCollection = void 0;
const model = __importStar(require("../model"));
var SummarizeExadataInsightResourceCapacityTrendCollection;
(function (SummarizeExadataInsightResourceCapacityTrendCollection) {
    let ExadataResourceType;
    (function (ExadataResourceType) {
        ExadataResourceType["Database"] = "DATABASE";
        ExadataResourceType["Host"] = "HOST";
        ExadataResourceType["StorageServer"] = "STORAGE_SERVER";
        ExadataResourceType["Diskgroup"] = "DISKGROUP";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ExadataResourceType["UnknownValue"] = "UNKNOWN_VALUE";
    })(ExadataResourceType = SummarizeExadataInsightResourceCapacityTrendCollection.ExadataResourceType || (SummarizeExadataInsightResourceCapacityTrendCollection.ExadataResourceType = {}));
    let ExadataResourceMetric;
    (function (ExadataResourceMetric) {
        ExadataResourceMetric["Cpu"] = "CPU";
        ExadataResourceMetric["Storage"] = "STORAGE";
        ExadataResourceMetric["Io"] = "IO";
        ExadataResourceMetric["Memory"] = "MEMORY";
        ExadataResourceMetric["Iops"] = "IOPS";
        ExadataResourceMetric["Throughput"] = "THROUGHPUT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ExadataResourceMetric["UnknownValue"] = "UNKNOWN_VALUE";
    })(ExadataResourceMetric = SummarizeExadataInsightResourceCapacityTrendCollection.ExadataResourceMetric || (SummarizeExadataInsightResourceCapacityTrendCollection.ExadataResourceMetric = {}));
    let UsageUnit;
    (function (UsageUnit) {
        UsageUnit["Cores"] = "CORES";
        UsageUnit["Gb"] = "GB";
        UsageUnit["Mbps"] = "MBPS";
        UsageUnit["Iops"] = "IOPS";
        UsageUnit["Percent"] = "PERCENT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UsageUnit["UnknownValue"] = "UNKNOWN_VALUE";
    })(UsageUnit = SummarizeExadataInsightResourceCapacityTrendCollection.UsageUnit || (SummarizeExadataInsightResourceCapacityTrendCollection.UsageUnit = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "items": obj.items
                ? obj.items.map(item => {
                    return model.ExadataInsightResourceCapacityTrendSummary.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    SummarizeExadataInsightResourceCapacityTrendCollection.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "items": obj.items
                ? obj.items.map(item => {
                    return model.ExadataInsightResourceCapacityTrendSummary.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    SummarizeExadataInsightResourceCapacityTrendCollection.getDeserializedJsonObj = getDeserializedJsonObj;
})(SummarizeExadataInsightResourceCapacityTrendCollection = exports.SummarizeExadataInsightResourceCapacityTrendCollection || (exports.SummarizeExadataInsightResourceCapacityTrendCollection = {}));
//# sourceMappingURL=summarize-exadata-insight-resource-capacity-trend-collection.js.map