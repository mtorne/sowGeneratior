/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * GPU performance metrics
 *
 */
export interface HostGpuUsage extends model.HostPerformanceMetricGroup {
    /**
     * GPU Identifier Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "gpuId"?: number;
    /**
     * GPU Utilization Percent Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "utilization"?: number;
    /**
     * GPU Memory Utilization Percent Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "memoryUtilization"?: number;
    /**
     * GPU Power Draw in Watts Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "powerDraw"?: number;
    /**
     * GPU Temperature in Celsius Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "temperature"?: number;
    /**
     * GPU Fan Utilization Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "fanUtilization"?: number;
    /**
     * GPU Graphics (Shader) Clock Speed Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockSpeedGraphics"?: number;
    /**
     * GPU SM (Streaming Multiprocessor) Clock Speed Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockSpeedSm"?: number;
    /**
     * GPU Video Clock Speed Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockSpeedVideo"?: number;
    /**
     * GPU Memory Clock Speed Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockSpeedMemory"?: number;
    /**
     * GPU Performance State Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "performanceState"?: number;
    /**
     * GPU ECC Single Bit Errors Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "eccSingleBitErrors"?: number;
    /**
     * GPU ECC Double Bit Errors Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "eccDoubleBitErrors"?: number;
    /**
     * Nothing running on CPU, clocks are idle Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventIdle"?: number;
    /**
     * HW Thermal Slowdown (reducing the core clocks by a factor of 2 or more) is engaged. Temp too high Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventHwThermalSlowDown"?: number;
    /**
     * SW Power Scaling algorithm is reducing the clocks below requested clocks because the GPU is consuming too much power Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventSwPowerCap"?: number;
    /**
     * GPU clocks are limited by applications clocks setting Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventAppClockSetting"?: number;
    /**
     * HW Power Brake Slowdown (reducing the core clocks by a factor of 2 or more) is engaged Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventHwPowerBreak"?: number;
    /**
     * SW Thermal capping algorithm is reducing clocks below requested clocks because GPU temperature is higher than Max Operating Temp Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventSwThermalSlowdown"?: number;
    /**
     * HW Power Brake Slowdown (reducing the core clocks by a factor of 2 or more) is engaged Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clockEventSyncBoost"?: number;
    "metricName": string;
}
export declare namespace HostGpuUsage {
    function getJsonObj(obj: HostGpuUsage, isParentJsonObj?: boolean): object;
    const metricName = "HOST_GPU_USAGE";
    function getDeserializedJsonObj(obj: HostGpuUsage, isParentJsonObj?: boolean): object;
}
