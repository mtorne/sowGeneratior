/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* An OPSI configuration resource is a container for storing custom values for customizable configuration items exposed by Operations Insights.
* <p>
Operations Insights exposes different sets of customizable configuration items through different OPSI configuration types.
* UX_CONFIGURATION: OPSI configuration resource of this type can be created only once in each compartment. It is a compartment level singleton resource.
* <p>
When configuration values, for an OPSI configuration type that supports compartment level singleton (e.g: UX_CONFIGURATION) resource, are queried for a compartment,
* following will be the order of preference.
* 1. If the specified compartment has an OPSI configuration resource, first preference will be given to the custom values inside that.
* 2. If the root compartment has an OPSI configuration resource, it will be considered as applicable to all compartments of that tenency,
* hence second preference will be given to the custom values inside that.
* 3. Default configuration will be considered as a final fallback option.
*
*/
export interface OpsiConfigurations {
    /**
     * OPSI Configuration Object.
     */
    "opsiConfigurations"?: any;
}
export declare namespace OpsiConfigurations {
    function getJsonObj(obj: OpsiConfigurations): object;
    function getDeserializedJsonObj(obj: OpsiConfigurations): object;
}
