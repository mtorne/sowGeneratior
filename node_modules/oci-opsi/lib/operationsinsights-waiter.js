"use strict";
/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationsInsightsWaiter = void 0;
const models = __importStar(require("./model"));
const oci_common_1 = require("oci-common");
class OperationsInsightsWaiter {
    constructor(client, config) {
        this.client = client;
        this.config = config;
    }
    /**
     * Waits forAwrHub till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAwrHubResponse | null (null in case of 404 response)
     */
    forAwrHub(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAwrHub(request), response => targetStates.includes(response.awrHub.lifecycleState), targetStates.includes(models.AwrHubLifecycleState.Deleted));
        });
    }
    /**
     * Waits forAwrHubSource till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAwrHubSourceResponse | null (null in case of 404 response)
     */
    forAwrHubSource(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAwrHubSource(request), response => targetStates.includes(response.awrHubSource.lifecycleState), targetStates.includes(models.AwrHubSourceLifecycleState.Deleted));
        });
    }
    /**
     * Waits forDatabaseInsight till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDatabaseInsightResponse | null (null in case of 404 response)
     */
    forDatabaseInsight(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDatabaseInsight(request), response => targetStates.includes(response.databaseInsight.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forEnterpriseManagerBridge till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetEnterpriseManagerBridgeResponse | null (null in case of 404 response)
     */
    forEnterpriseManagerBridge(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getEnterpriseManagerBridge(request), response => targetStates.includes(response.enterpriseManagerBridge.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forExadataInsight till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetExadataInsightResponse | null (null in case of 404 response)
     */
    forExadataInsight(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getExadataInsight(request), response => targetStates.includes(response.exadataInsight.lifecycleState), targetStates.includes(models.ExadataInsightLifecycleState.Deleted));
        });
    }
    /**
     * Waits forHostInsight till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetHostInsightResponse | null (null in case of 404 response)
     */
    forHostInsight(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getHostInsight(request), response => targetStates.includes(response.hostInsight.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forNewsReport till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetNewsReportResponse | null (null in case of 404 response)
     */
    forNewsReport(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getNewsReport(request), response => targetStates.includes(response.newsReport.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forOperationsInsightsPrivateEndpoint till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetOperationsInsightsPrivateEndpointResponse | null (null in case of 404 response)
     */
    forOperationsInsightsPrivateEndpoint(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getOperationsInsightsPrivateEndpoint(request), response => targetStates.includes(response.operationsInsightsPrivateEndpoint.lifecycleState), targetStates.includes(models.OperationsInsightsPrivateEndpointLifecycleState.Deleted));
        });
    }
    /**
     * Waits forOperationsInsightsWarehouse till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetOperationsInsightsWarehouseResponse | null (null in case of 404 response)
     */
    forOperationsInsightsWarehouse(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getOperationsInsightsWarehouse(request), response => targetStates.includes(response.operationsInsightsWarehouse.lifecycleState), targetStates.includes(models.OperationsInsightsWarehouseLifecycleState.Deleted));
        });
    }
    /**
     * Waits forOperationsInsightsWarehouseUser till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetOperationsInsightsWarehouseUserResponse | null (null in case of 404 response)
     */
    forOperationsInsightsWarehouseUser(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getOperationsInsightsWarehouseUser(request), response => targetStates.includes(response.operationsInsightsWarehouseUser.lifecycleState), targetStates.includes(models.OperationsInsightsWarehouseUserLifecycleState.Deleted));
        });
    }
    /**
     * Waits forOpsiConfiguration till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetOpsiConfigurationResponse | null (null in case of 404 response)
     */
    forOpsiConfiguration(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getOpsiConfiguration(request), response => targetStates.includes(response.opsiConfiguration.lifecycleState), targetStates.includes(models.OpsiConfigurationLifecycleState.Deleted));
        });
    }
    /**
     * Waits forWorkRequest
     *
     * @param request the request to send
     * @return response returns GetWorkRequestResponse
     */
    forWorkRequest(request) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getWorkRequest(request), response => (response.workRequest.timeFinished ? true : false));
        });
    }
}
exports.OperationsInsightsWaiter = OperationsInsightsWaiter;
//# sourceMappingURL=operationsinsights-waiter.js.map