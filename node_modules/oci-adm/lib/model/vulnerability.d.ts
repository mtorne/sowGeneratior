/**
 * Application Dependency Management API
 * Use the Application Dependency Management API to create knowledge bases and vulnerability audits.  For more information, see [ADM](https://docs.oracle.com/iaas/Content/application-dependency-management/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A vulnerability is a weakness or error in an artifact.
 * A vulnerability is a generalization of a CVE (every CVE is a vulnerability, but not every vulnerability has a CVE).
 *
 */
export interface Vulnerability {
    /**
     * Unique vulnerability identifier, e.g. CVE-1999-0067.
     */
    "id": string;
    /**
     * Source that published the vulnerability
     */
    "source"?: string;
    /**
     * Common Vulnerability Scoring System (CVSS) Version 2, calculated from the metrics provided in the CVSS vector provided from the vulnerability source.
     * This field is deprecated and will be removed in the future. The cvssV2Score can be obtained from the metrics field of the listVulnerabilities endpoint.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "cvssV2Score"?: number;
    /**
     * Common Vulnerability Scoring System (CVSS) Version 3, calculated from the metrics provided in the CVSS vector provided from the vulnerability source.
     * This field is deprecated and will be removed in the future. The cvssV3Score can be obtained from the metrics field of the listVulnerabilities endpoint.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "cvssV3Score"?: number;
    /**
     * ADM qualitative severity score. Can be either NONE, LOW, MEDIUM, HIGH or CRITICAL.
     */
    "severity"?: model.VulnerabilitySeverity;
    /**
     * Indicates if the vulnerability was ignored according to the audit configuration.
     */
    "isIgnored": boolean;
    /**
     * Indicates if the vulnerability is a false positive according to the usage data. If no usage data was provided or the service cannot infer usage of the vulnerable code then this property is {@code null}.
     */
    "isFalsePositive"?: boolean;
}
export declare namespace Vulnerability {
    function getJsonObj(obj: Vulnerability): object;
    function getDeserializedJsonObj(obj: Vulnerability): object;
}
