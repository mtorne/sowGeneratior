/**
 * Application Dependency Management API
 * Use the Application Dependency Management API to create knowledge bases and vulnerability audits.  For more information, see [ADM](https://docs.oracle.com/iaas/Content/application-dependency-management/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A remediation run stage is one step of an remediation run. Each stage provides output logs and has a specific type.
 * The stages are: DETECT, RECOMMEND, VERIFY, and APPLY.
 *
 */
export interface RemediationRunStage {
    /**
     * The current status of a remediation run stage.
     */
    "status": RemediationRunStage.Status;
    /**
     * The creation date and time of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    "timeCreated": Date;
    /**
     * The date and time of the start of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    "timeStarted"?: Date;
    /**
     * The date and time of the finish of the remediation run stage (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    "timeFinished"?: Date;
    /**
     * Information about the current step within the stage.
     */
    "summary"?: string;
    /**
     * The Oracle Cloud identifier ([OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation run.
     */
    "remediationRunId": string;
    /**
     * The previous type of stage in the remediation run.
     */
    "previousStageType"?: model.RemediationRunStageType;
    /**
     * The next type of stage in the remediation run.
     */
    "nextStageType"?: model.RemediationRunStageType;
    "type": string;
}
export declare namespace RemediationRunStage {
    enum Status {
        Created = "CREATED",
        InProgress = "IN_PROGRESS",
        Succeeded = "SUCCEEDED",
        Failed = "FAILED",
        Canceling = "CANCELING",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: RemediationRunStage): object;
    function getDeserializedJsonObj(obj: RemediationRunStage): object;
}
