/**
 * Application Dependency Management API
 * Use the Application Dependency Management API to create knowledge bases and vulnerability audits.  For more information, see [ADM](https://docs.oracle.com/iaas/Content/application-dependency-management/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * An external SCM configuration extends a SCM Configuration with necessary data to reach and use the Source Code Management tool/platform used by a Remediation Recipe.
 * An external SCM in ADM refers to GitHub, or GitLab.
 *
 */
export interface ExternalScmConfiguration extends model.ScmConfiguration {
    /**
     * The type of External Source Code Management.
     */
    "externalScmType": ExternalScmConfiguration.ExternalScmType;
    /**
     * The repository URL for the SCM.
     * For Non-Enterprise GitHub the expected format is https://github.com/[owner]/[repoName]
     * For Enterprise GitHub the expected format is http(s)://[hostname]/api/v3/repos/[owner]/[repoName]
     * For GitLab the expected format is https://gitlab.com/[groupName]/[repoName]
     *
     */
    "repositoryUrl": string;
    /**
     * The username for the SCM (to perform operations such as cloning or pushing via HTTP).
     */
    "username"?: string;
    /**
     * The Oracle Cloud Identifier ([OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Private Access Token (PAT) Secret.
     * The secret provides the credentials necessary to authenticate against the SCM.
     *
     */
    "patSecretId": string;
    "scmType": string;
}
export declare namespace ExternalScmConfiguration {
    enum ExternalScmType {
        Github = "GITHUB",
        Gitlab = "GITLAB",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ExternalScmConfiguration, isParentJsonObj?: boolean): object;
    const scmType = "EXTERNAL_SCM";
    function getDeserializedJsonObj(obj: ExternalScmConfiguration, isParentJsonObj?: boolean): object;
}
