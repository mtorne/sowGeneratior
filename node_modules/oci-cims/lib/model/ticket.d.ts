/**
 * Support Management API
 * Use the Support Management API to manage support requests.
For more information, see [Getting Help and Contacting Support](https://docs.oracle.com/iaas/Content/GSG/Tasks/contactingsupport.htm).
**Note**: Before you can create service requests with this API,
complete user registration at My Oracle Cloud Support
and then ask your tenancy administrator to provide you authorization for the related user groups.

 * OpenAPI spec version: 20181231
 * Contact: oci_ops_cims_dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details about the ticket created.
 */
export interface Ticket {
    /**
     * Unique identifier for the ticket.
     */
    "ticketNumber"?: string;
    /**
     * The severity assigned to the ticket.
     */
    "severity": Ticket.Severity;
    /**
     * The list of resources associated with the ticket.
     */
    "resourceList"?: Array<model.Resource>;
    /**
     * The title of the ticket.
     */
    "title": string;
    /**
     * The description of the issue addressed in the ticket.
     */
    "description": string;
    /**
     * The time when the ticket was created, in seconds since epoch time. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeCreated"?: number;
    /**
     * The time when the ticket was updated, in seconds since epoch time. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeUpdated"?: number;
    /**
     * The current state of the ticket.
     */
    "lifecycleState"?: model.LifecycleState;
    /**
     * Additional information about the current {@code lifecycleState}.
     */
    "lifecycleDetails"?: model.LifecycleDetails;
}
export declare namespace Ticket {
    enum Severity {
        Highest = "HIGHEST",
        High = "HIGH",
        Medium = "MEDIUM",
        Low = "LOW",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Ticket): object;
    function getDeserializedJsonObj(obj: Ticket): object;
}
