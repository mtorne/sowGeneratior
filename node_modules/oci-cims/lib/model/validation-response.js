"use strict";
/**
 * Support Management API
 * Use the Support Management API to manage support requests.
For more information, see [Getting Help and Contacting Support](https://docs.oracle.com/iaas/Content/GSG/Tasks/contactingsupport.htm).
**Note**: Before you can create service requests with this API,
complete user registration at My Oracle Cloud Support
and then ask your tenancy administrator to provide you authorization for the related user groups.

 * OpenAPI spec version: 20181231
 * Contact: oci_ops_cims_dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidationResponse = void 0;
const model = __importStar(require("../model"));
var ValidationResponse;
(function (ValidationResponse) {
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "writePermittedUserGroupInfos": obj.writePermittedUserGroupInfos
                ? obj.writePermittedUserGroupInfos.map(item => {
                    return model.CmosUserGroupInfo.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    ValidationResponse.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "writePermittedUserGroupInfos": obj.writePermittedUserGroupInfos
                ? obj.writePermittedUserGroupInfos.map(item => {
                    return model.CmosUserGroupInfo.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    ValidationResponse.getDeserializedJsonObj = getDeserializedJsonObj;
})(ValidationResponse = exports.ValidationResponse || (exports.ValidationResponse = {}));
//# sourceMappingURL=validation-response.js.map