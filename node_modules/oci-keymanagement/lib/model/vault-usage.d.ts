/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The details of the number of Keys and KeyVersions usage in a Vault.
 */
export interface VaultUsage {
    /**
     * The number of keys in this vault that persist on a hardware security module (HSM), across all compartments, excluding keys in a {@code DELETED} state. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "keyCount": number;
    /**
     * The number of key versions in this vault that persist on a hardware security module (HSM), across all compartments, excluding key versions in a {@code DELETED} state. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "keyVersionCount": number;
    /**
     * The number of keys in this vault that persist on the server, across all compartments, excluding keys in a {@code DELETED} state. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "softwareKeyCount"?: number;
    /**
     * The number of key versions in this vault that persist on the server, across all compartments, excluding key versions in a {@code DELETED} state. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "softwareKeyVersionCount"?: number;
}
export declare namespace VaultUsage {
    function getJsonObj(obj: VaultUsage): object;
    function getDeserializedJsonObj(obj: VaultUsage): object;
}
