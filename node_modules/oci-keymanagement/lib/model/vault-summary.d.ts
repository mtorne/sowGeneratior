/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of the Vault.
 */
export interface VaultSummary {
    /**
     * The OCID of the compartment that contains a particular vault.
     */
    "compartmentId": string;
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include
     * [Encrypt](https://docs.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt),
     * and [GenerateDataEncryptionKey](https://docs.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
     *
     */
    "cryptoEndpoint": string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly name for a vault. It does not have to be unique, and it is changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * The OCID of a vault.
     */
    "id": string;
    /**
      * A vault's current lifecycle state.
  * <p>
  Example: {@code ACTIVE}
  *
      */
    "lifecycleState": VaultSummary.LifecycleState;
    /**
     * The service endpoint to perform management operations against. Management operations include \"Create,\" \"Update,\" \"List,\" \"Get,\" and \"Delete\" operations.
     *
     */
    "managementEndpoint": string;
    /**
      * The date and time a vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
  * <p>
  Example: {@code 2018-04-03T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    /**
     * The type of vault. Each type of vault stores keys with different
     * degrees of isolation and has different options and pricing.
     *
     */
    "vaultType": VaultSummary.VaultType;
    "externalKeyManagerMetadataSummary"?: model.ExternalKeyManagerMetadataSummary;
}
export declare namespace VaultSummary {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        PendingDeletion = "PENDING_DELETION",
        SchedulingDeletion = "SCHEDULING_DELETION",
        CancellingDeletion = "CANCELLING_DELETION",
        Updating = "UPDATING",
        BackupInProgress = "BACKUP_IN_PROGRESS",
        Restoring = "RESTORING",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum VaultType {
        VirtualPrivate = "VIRTUAL_PRIVATE",
        External = "EXTERNAL",
        Default = "DEFAULT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: VaultSummary): object;
    function getDeserializedJsonObj(obj: VaultSummary): object;
}
