"use strict";
/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PortInformation = void 0;
var PortInformation;
(function (PortInformation) {
    let PortType;
    (function (PortType) {
        PortType["Clientutility"] = "CLIENTUTILITY";
        PortType["Managementutility"] = "MANAGEMENTUTILITY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PortType["UnknownValue"] = "UNKNOWN_VALUE";
    })(PortType = PortInformation.PortType || (PortInformation.PortType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PortInformation.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PortInformation.getDeserializedJsonObj = getDeserializedJsonObj;
})(PortInformation = exports.PortInformation || (exports.PortInformation = {}));
//# sourceMappingURL=port-information.js.map