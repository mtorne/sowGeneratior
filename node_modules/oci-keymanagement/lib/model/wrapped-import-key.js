"use strict";
/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WrappedImportKey = void 0;
var WrappedImportKey;
(function (WrappedImportKey) {
    let WrappingAlgorithm;
    (function (WrappingAlgorithm) {
        WrappingAlgorithm["RsaOaepSha256"] = "RSA_OAEP_SHA256";
        WrappingAlgorithm["RsaOaepAesSha256"] = "RSA_OAEP_AES_SHA256";
    })(WrappingAlgorithm = WrappedImportKey.WrappingAlgorithm || (WrappedImportKey.WrappingAlgorithm = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    WrappedImportKey.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    WrappedImportKey.getDeserializedJsonObj = getDeserializedJsonObj;
})(WrappedImportKey = exports.WrappedImportKey || (exports.WrappedImportKey = {}));
//# sourceMappingURL=wrapped-import-key.js.map