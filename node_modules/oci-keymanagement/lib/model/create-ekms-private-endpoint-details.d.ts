/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Information needed to create EKMS private endpoint resource
 */
export interface CreateEkmsPrivateEndpointDetails {
    /**
     * The OCID of subnet in which the EKMS private endpoint is to be created
     *
     */
    "subnetId": string;
    /**
     * Compartment identifier.
     */
    "compartmentId": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Display name of the EKMS private endpoint resource being created.
     */
    "displayName": string;
    /**
     * External private IP to connect to from this EKMS private endpoint
     *
     */
    "externalKeyManagerIp": string;
    /**
     * CABundle to validate TLS certificate of the external key manager system in PEM format
     *
     */
    "caBundle": string;
    /**
     * The port of the external key manager system Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "port"?: number;
}
export declare namespace CreateEkmsPrivateEndpointDetails {
    function getJsonObj(obj: CreateEkmsPrivateEndpointDetails): object;
    function getDeserializedJsonObj(obj: CreateEkmsPrivateEndpointDetails): object;
}
