"use strict";
/**
 * Vault Key Management API
 * Use the Key Management API to manage vaults and keys. For more information, see [Managing Vaults](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingvaults.htm) and [Managing Keys](https://docs.oracle.com/iaas/Content/KeyManagement/Tasks/managingkeys.htm).

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListVaultsRequest = exports.ListVaultReplicasRequest = exports.ListKeysRequest = exports.ListKeyVersionsRequest = exports.ListHsmPartitionsRequest = exports.ListHsmClustersRequest = exports.ListEkmsPrivateEndpointsRequest = void 0;
const ListEkmsPrivateEndpointsRequest = __importStar(require("./list-ekms-private-endpoints-request"));
exports.ListEkmsPrivateEndpointsRequest = ListEkmsPrivateEndpointsRequest.ListEkmsPrivateEndpointsRequest;
const ListHsmClustersRequest = __importStar(require("./list-hsm-clusters-request"));
exports.ListHsmClustersRequest = ListHsmClustersRequest.ListHsmClustersRequest;
const ListHsmPartitionsRequest = __importStar(require("./list-hsm-partitions-request"));
exports.ListHsmPartitionsRequest = ListHsmPartitionsRequest.ListHsmPartitionsRequest;
const ListKeyVersionsRequest = __importStar(require("./list-key-versions-request"));
exports.ListKeyVersionsRequest = ListKeyVersionsRequest.ListKeyVersionsRequest;
const ListKeysRequest = __importStar(require("./list-keys-request"));
exports.ListKeysRequest = ListKeysRequest.ListKeysRequest;
const ListVaultReplicasRequest = __importStar(require("./list-vault-replicas-request"));
exports.ListVaultReplicasRequest = ListVaultReplicasRequest.ListVaultReplicasRequest;
const ListVaultsRequest = __importStar(require("./list-vaults-request"));
exports.ListVaultsRequest = ListVaultsRequest.ListVaultsRequest;
//# sourceMappingURL=index.js.map