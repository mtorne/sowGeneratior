"use strict";
/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricName = void 0;
/**
 * Possible metric names.
 **/
var MetricName;
(function (MetricName) {
    MetricName["TotalInstanceCount"] = "TOTAL_INSTANCE_COUNT";
    MetricName["InstanceWithAvailableSecurityUpdatesCount"] = "INSTANCE_WITH_AVAILABLE_SECURITY_UPDATES_COUNT";
    MetricName["InstanceWithAvailableBugfixUpdatesCount"] = "INSTANCE_WITH_AVAILABLE_BUGFIX_UPDATES_COUNT";
    MetricName["NormalInstanceCount"] = "NORMAL_INSTANCE_COUNT";
    MetricName["ErrorInstanceCount"] = "ERROR_INSTANCE_COUNT";
    MetricName["WarningInstanceCount"] = "WARNING_INSTANCE_COUNT";
    MetricName["UnreachableInstanceCount"] = "UNREACHABLE_INSTANCE_COUNT";
    MetricName["RegistrationFailedInstanceCount"] = "REGISTRATION_FAILED_INSTANCE_COUNT";
    MetricName["DeletingInstanceCount"] = "DELETING_INSTANCE_COUNT";
    MetricName["OnboardingInstanceCount"] = "ONBOARDING_INSTANCE_COUNT";
    MetricName["InstanceSecurityUpdatesCount"] = "INSTANCE_SECURITY_UPDATES_COUNT";
    MetricName["InstanceBugfixUpdatesCount"] = "INSTANCE_BUGFIX_UPDATES_COUNT";
    MetricName["InstanceSecurityAdvisoryCount"] = "INSTANCE_SECURITY_ADVISORY_COUNT";
    MetricName["InstanceBugfixAdvisoryCount"] = "INSTANCE_BUGFIX_ADVISORY_COUNT";
    MetricName["RebootingInstanceCount"] = "REBOOTING_INSTANCE_COUNT";
    MetricName["NeedsRebootingInstanceCount"] = "NEEDS_REBOOTING_INSTANCE_COUNT";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    MetricName["UnknownValue"] = "UNKNOWN_VALUE";
})(MetricName = exports.MetricName || (exports.MetricName = {}));
(function (MetricName) {
    function getJsonObj(obj) {
        return obj;
    }
    MetricName.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    MetricName.getDeserializedJsonObj = getDeserializedJsonObj;
})(MetricName = exports.MetricName || (exports.MetricName = {}));
//# sourceMappingURL=metric-name.js.map