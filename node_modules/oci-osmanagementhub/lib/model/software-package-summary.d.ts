/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Provides summary information for a software package.
 */
export interface SoftwarePackageSummary {
    /**
     * Package name.
     */
    "displayName": string;
    /**
     * Unique identifier for the package. Note that this is not an OCID.
     */
    "name": string;
    /**
     * Type of the package.
     */
    "type": string;
    /**
     * Version of the package.
     */
    "version": string;
    /**
     * The architecture for which this software was built.
     */
    "architecture"?: model.SoftwarePackageArchitecture;
    /**
     * Checksum of the package.
     */
    "checksum"?: string;
    /**
     * Type of the checksum.
     */
    "checksumType"?: string;
    /**
     * Indicates whether this package is the latest version.
     */
    "isLatest"?: boolean;
    /**
     * List of software sources that provide the software package. This property is deprecated and it will be removed in a future API release.
     */
    "softwareSources"?: Array<model.SoftwareSourceDetails>;
    /**
     * The OS families the package belongs to.
     */
    "osFamilies"?: Array<model.OsFamily>;
}
export declare namespace SoftwarePackageSummary {
    function getJsonObj(obj: SoftwarePackageSummary): object;
    function getDeserializedJsonObj(obj: SoftwarePackageSummary): object;
}
