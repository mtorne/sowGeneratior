/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The object that defines a software source. A software source contains a collection of packages. For more information, see [Managing Software Sources](https://docs.oracle.com/iaas/osmh/doc/software-sources.htm).
 */
export interface SoftwareSource {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     */
    "id": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    "compartmentId": string;
    /**
     * User-friendly name for the software source.
     */
    "displayName": string;
    /**
     * The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     *
     */
    "timeCreated": Date;
    /**
     * User-specified description for the software source.
     */
    "description"?: string;
    /**
     * Availability of the software source (for non-OCI environments).
     */
    "availability": model.Availability;
    /**
     * Availability of the software source (for OCI environments).
     */
    "availabilityAtOci": model.Availability;
    /**
     * The repository ID for the software source.
     */
    "repoId": string;
    /**
     * The OS family of the software source.
     */
    "osFamily": model.OsFamily;
    /**
     * The architecture type supported by the software source.
     */
    "archType": model.ArchType;
    /**
     * The current state of the software source.
     */
    "lifecycleState"?: SoftwareSource.LifecycleState;
    /**
     * Number of packages the software source contains. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "packageCount"?: number;
    /**
     * URL for the repository. For vendor software sources, this is the URL to the regional yum server. For custom software sources, this is 'custom/<repoId>'.
     */
    "url": string;
    /**
     * The yum repository checksum type used by this software source.
     */
    "checksumType"?: model.ChecksumType;
    /**
     * URI of the GPG key for this software source.
     */
    "gpgKeyUrl"?: string;
    /**
     * ID of the GPG key for this software source.
     */
    "gpgKeyId"?: string;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    "gpgKeyFingerprint"?: string;
    /**
     * The size of the software source in bytes (B). Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "size"?: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    "softwareSourceType": string;
}
export declare namespace SoftwareSource {
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SoftwareSource): object;
    function getDeserializedJsonObj(obj: SoftwareSource): object;
}
