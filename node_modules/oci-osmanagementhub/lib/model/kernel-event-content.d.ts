/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Provides information collected for the kernel event.
 */
export interface KernelEventContent extends model.EventContent {
    /**
     * Crash content availability status:
     *     * 'NOT_AVAILABLE' indicates the content is not available on the instance nor in the service
     *     * 'AVAILABLE_ON_INSTANCE' indicates the content is only available on the instance.
     *     * 'AVAILABLE_ON_SERVICE' indicates the content is only available on the service.
     *     * 'AVAILABLE_ON_INSTANCE_AND_SERVICE' indicates the content is available both on the instance and the service
     *     * 'AVAILABLE_ON_INSTANCE_UPLOAD_IN_PROGRESS' indicates the content is available on the instance and its upload to the service is in progress.
     *
     */
    "contentAvailability": KernelEventContent.ContentAvailability;
    /**
     * Location of the Kernel event content.
     */
    "contentLocation": string;
    /**
     * Size of the event content. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "size"?: number;
    "type": string;
}
export declare namespace KernelEventContent {
    enum ContentAvailability {
        NotAvailable = "NOT_AVAILABLE",
        AvailableOnInstance = "AVAILABLE_ON_INSTANCE",
        AvailableOnService = "AVAILABLE_ON_SERVICE",
        AvailableOnInstanceAndService = "AVAILABLE_ON_INSTANCE_AND_SERVICE",
        AvailableOnInstanceUploadInProgress = "AVAILABLE_ON_INSTANCE_UPLOAD_IN_PROGRESS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: KernelEventContent, isParentJsonObj?: boolean): object;
    const type = "KERNEL";
    function getDeserializedJsonObj(obj: KernelEventContent, isParentJsonObj?: boolean): object;
}
