/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Provides summary information for a scheduled job.
 */
export interface ScheduledJobSummary {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job.
     */
    "id": string;
    /**
     * User-friendly name for the scheduled job.
     */
    "displayName": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     */
    "compartmentId": string;
    /**
     * The type of scheduling this scheduled job follows.
     */
    "scheduleType": model.ScheduleTypes;
    /**
     * The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     */
    "locations"?: Array<model.ManagedInstanceLocation>;
    /**
     * The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    "timeCreated": Date;
    /**
     * The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    "timeUpdated": Date;
    /**
     * The time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    "timeNextExecution": Date;
    /**
     * The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).b.
     */
    "timeLastExecution"?: Date;
    /**
     * The managed instance [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.
     * A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with
     * managedInstanceGroupIds, managedCompartmentIds, and lifecycleStageIds.
     *
     */
    "managedInstanceIds"?: Array<string>;
    /**
     * The managed instance group [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.
     * A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with
     * managedInstanceIds, managedCompartmentIds, and lifecycleStageIds.
     *
     */
    "managedInstanceGroupIds"?: Array<string>;
    /**
     * The compartment [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.
     * A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with
     * managedInstanceIds, managedInstanceGroupIds, and lifecycleStageIds.
     *
     */
    "managedCompartmentIds"?: Array<string>;
    /**
     * The lifecycle stage [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.
     * A scheduled job can only operate on one type of target, therefore this parameter is mutually exclusive with
     * managedInstanceIds, managedInstanceGroupIds, and managedCompartmentIds.
     *
     */
    "lifecycleStageIds"?: Array<string>;
    /**
     * The list of operations this scheduled job needs to perform.
     * A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     *
     */
    "operations": Array<model.ScheduledJobOperation>;
    /**
     * The current state of the scheduled job.
     */
    "lifecycleState": string;
    /**
     * Indicates whether this scheduled job is managed by the Autonomous Linux service.
     */
    "isManagedByAutonomousLinux"?: boolean;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Indicates if the schedule job has restricted update and deletion capabilities.
     * For restricted scheduled jobs, you can update only the timeNextExecution, recurringRule, and tags.
     *
     */
    "isRestricted"?: boolean;
    /**
     * The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically
     * retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the
     * initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service waits
     * 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     *
     */
    "retryIntervals"?: Array<number>;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
     */
    "workRequestId"?: string;
}
export declare namespace ScheduledJobSummary {
    function getJsonObj(obj: ScheduledJobSummary): object;
    function getDeserializedJsonObj(obj: ScheduledJobSummary): object;
}
