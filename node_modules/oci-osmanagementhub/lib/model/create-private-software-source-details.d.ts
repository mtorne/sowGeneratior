/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Provides the information used to create a private software source.
 */
export interface CreatePrivateSoftwareSourceDetails extends model.CreateSoftwareSourceDetails {
    /**
     * The OS family for the private software source.
     */
    "osFamily": model.OsFamily;
    /**
     * The architecture type supported by the private software source.
     */
    "archType": model.ArchType;
    /**
     * URL for the private software source.
     */
    "url": string;
    /**
     * URI of the GPG key for this software source.
     */
    "gpgKeyUrl"?: string;
    /**
     * Whether signature verification should be done for the software source
     */
    "isGpgCheckEnabled"?: boolean;
    /**
     * Whether SSL validation needs to be turned on
     */
    "isSslVerifyEnabled"?: boolean;
    /**
     * Advanced repository options for the software source
     */
    "advancedRepoOptions"?: string;
    /**
     * Whether this software source can be synced to a management station
     */
    "isMirrorSyncAllowed"?: boolean;
    "softwareSourceType": string;
}
export declare namespace CreatePrivateSoftwareSourceDetails {
    function getJsonObj(obj: CreatePrivateSoftwareSourceDetails, isParentJsonObj?: boolean): object;
    const softwareSourceType = "PRIVATE";
    function getDeserializedJsonObj(obj: CreatePrivateSoftwareSourceDetails, isParentJsonObj?: boolean): object;
}
