/**
 * Java Management Service Fleets API
 * The APIs for the [Fleet Management](https://docs.oracle.com/en-us/iaas/jms/doc/fleet-management.html) feature of Java Management Service to monitor and manage the usage of Java in your enterprise. Use these APIs to manage fleets, configure managed instances to report to fleets, and gain insights into the Java workloads running on these instances by carrying out basic and advanced features.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Entity that represents an error identified in a plugin.
 */
export interface PluginErrorSummary {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Instance running the plugin.
     */
    "managedInstanceId": string;
    /**
     * The agent type.
     */
    "agentType"?: model.AgentType;
    /**
     * The HostName or Compute Instance name of the Managed Instance running the plugin.
     */
    "hostName"?: string;
    /**
     * The compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     *
     */
    "compartmentId": string;
    /**
     * List of plugin error details.
     */
    "errors": Array<model.PluginErrorDetails>;
    /**
     * The timestamp of the last time an error was detected.
     *
     */
    "timeLastSeen": Date;
    /**
     * The timestamp of the first time an error was detected.
     *
     */
    "timeFirstSeen": Date;
}
export declare namespace PluginErrorSummary {
    function getJsonObj(obj: PluginErrorSummary): object;
    function getDeserializedJsonObj(obj: PluginErrorSummary): object;
}
