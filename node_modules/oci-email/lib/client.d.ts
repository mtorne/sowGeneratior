/**
 * Email Delivery API
 * Use the Email Delivery API to do the necessary set up to send high-volume and application-generated emails through the OCI Email Delivery service.
For more information, see [Overview of the Email Delivery Service](https://docs.oracle.com/iaas/Content/Email/Concepts/overview.htm).

 **Note:** Write actions (POST, UPDATE, DELETE) may take several minutes to propagate and be reflected by the API.
 If a subsequent read request fails to reflect your changes, wait a few minutes and try again.

 * OpenAPI spec version: 20170907
 * Contact: email-dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { EmailWaiter } from "./email-waiter";
declare const Breaker: any;
export declare enum EmailApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class EmailClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": EmailWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new EmailWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): EmailWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): EmailWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves an email domain into a different compartment.
     * When provided, If-Match is checked against ETag value of the resource.
     * For information about moving resources between compartments, see
     * [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     * <p>
     **Note:** All DKIM objects associated with this email domain will also be moved into the provided compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeEmailDomainCompartmentRequest
     * @return ChangeEmailDomainCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ChangeEmailDomainCompartment.ts.html |here} to see how to use ChangeEmailDomainCompartment API.
     */
    changeEmailDomainCompartment(changeEmailDomainCompartmentRequest: requests.ChangeEmailDomainCompartmentRequest): Promise<responses.ChangeEmailDomainCompartmentResponse>;
    /**
     * Moves a sender into a different compartment. When provided, If-Match is checked against ETag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSenderCompartmentRequest
     * @return ChangeSenderCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ChangeSenderCompartment.ts.html |here} to see how to use ChangeSenderCompartment API.
     */
    changeSenderCompartment(changeSenderCompartmentRequest: requests.ChangeSenderCompartmentRequest): Promise<responses.ChangeSenderCompartmentResponse>;
    /**
     * Creates a new DKIM for an email domain.
     * This DKIM signs all approved senders in the tenancy that are in this email domain.
     * Best security practices indicate to periodically rotate the DKIM that is doing the signing.
     * When a second DKIM is applied, all senders seamlessly pick up the new key
     * without interruption in signing.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDkimRequest
     * @return CreateDkimResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/CreateDkim.ts.html |here} to see how to use CreateDkim API.
     */
    createDkim(createDkimRequest: requests.CreateDkimRequest): Promise<responses.CreateDkimResponse>;
    /**
     * Creates a new email domain. Avoid entering confidential information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateEmailDomainRequest
     * @return CreateEmailDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/CreateEmailDomain.ts.html |here} to see how to use CreateEmailDomain API.
     */
    createEmailDomain(createEmailDomainRequest: requests.CreateEmailDomainRequest): Promise<responses.CreateEmailDomainResponse>;
    /**
     * Creates a new email return path. Avoid entering confidential information.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateEmailReturnPathRequest
     * @return CreateEmailReturnPathResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/CreateEmailReturnPath.ts.html |here} to see how to use CreateEmailReturnPath API.
     */
    createEmailReturnPath(createEmailReturnPathRequest: requests.CreateEmailReturnPathRequest): Promise<responses.CreateEmailReturnPathResponse>;
    /**
     * Creates a sender for a tenancy in a given compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSenderRequest
     * @return CreateSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/CreateSender.ts.html |here} to see how to use CreateSender API.
     */
    createSender(createSenderRequest: requests.CreateSenderRequest): Promise<responses.CreateSenderResponse>;
    /**
     * Adds recipient email addresses to the suppression list for a tenancy.
     * Addresses added to the suppression list via the API are denoted as
     * \"MANUAL\" in the `reason` field. *Note:* All email addresses added to the
     * suppression list are normalized to include only lowercase letters.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSuppressionRequest
     * @return CreateSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/CreateSuppression.ts.html |here} to see how to use CreateSuppression API.
     */
    createSuppression(createSuppressionRequest: requests.CreateSuppressionRequest): Promise<responses.CreateSuppressionResponse>;
    /**
     * Deletes a DKIM.
     * If this key is currently the active key for the email domain, deleting the key
     * will stop signing the domain's outgoing mail.
     * DKIM keys are left in DELETING state for about a day to allow DKIM signatures on
     * in-transit mail to be validated.
     * Consider creating a new DKIM for this domain so the signing can be rotated to it instead of deletion.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDkimRequest
     * @return DeleteDkimResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/DeleteDkim.ts.html |here} to see how to use DeleteDkim API.
     */
    deleteDkim(deleteDkimRequest: requests.DeleteDkimRequest): Promise<responses.DeleteDkimResponse>;
    /**
     * Deletes an email domain.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteEmailDomainRequest
     * @return DeleteEmailDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/DeleteEmailDomain.ts.html |here} to see how to use DeleteEmailDomain API.
     */
    deleteEmailDomain(deleteEmailDomainRequest: requests.DeleteEmailDomainRequest): Promise<responses.DeleteEmailDomainResponse>;
    /**
     * Deletes an email return path.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteEmailReturnPathRequest
     * @return DeleteEmailReturnPathResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/DeleteEmailReturnPath.ts.html |here} to see how to use DeleteEmailReturnPath API.
     */
    deleteEmailReturnPath(deleteEmailReturnPathRequest: requests.DeleteEmailReturnPathRequest): Promise<responses.DeleteEmailReturnPathResponse>;
    /**
     * Deletes an approved sender for a tenancy in a given compartment for a
     * provided `senderId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSenderRequest
     * @return DeleteSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/DeleteSender.ts.html |here} to see how to use DeleteSender API.
     */
    deleteSender(deleteSenderRequest: requests.DeleteSenderRequest): Promise<responses.DeleteSenderResponse>;
    /**
     * Removes a suppressed recipient email address from the suppression list
     * for a tenancy in a given compartment for a provided `suppressionId`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSuppressionRequest
     * @return DeleteSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/DeleteSuppression.ts.html |here} to see how to use DeleteSuppression API.
     */
    deleteSuppression(deleteSuppressionRequest: requests.DeleteSuppressionRequest): Promise<responses.DeleteSuppressionResponse>;
    /**
     * Retrieves the specified DKIM.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDkimRequest
     * @return GetDkimResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetDkim.ts.html |here} to see how to use GetDkim API.
     */
    getDkim(getDkimRequest: requests.GetDkimRequest): Promise<responses.GetDkimResponse>;
    /**
     * Returns  email configuration associated with the specified compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetEmailConfigurationRequest
     * @return GetEmailConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetEmailConfiguration.ts.html |here} to see how to use GetEmailConfiguration API.
     */
    getEmailConfiguration(getEmailConfigurationRequest: requests.GetEmailConfigurationRequest): Promise<responses.GetEmailConfigurationResponse>;
    /**
     * Retrieves the specified email domain.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetEmailDomainRequest
     * @return GetEmailDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetEmailDomain.ts.html |here} to see how to use GetEmailDomain API.
     */
    getEmailDomain(getEmailDomainRequest: requests.GetEmailDomainRequest): Promise<responses.GetEmailDomainResponse>;
    /**
     * Retrieves the specified email return path.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetEmailReturnPathRequest
     * @return GetEmailReturnPathResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetEmailReturnPath.ts.html |here} to see how to use GetEmailReturnPath API.
     */
    getEmailReturnPath(getEmailReturnPathRequest: requests.GetEmailReturnPathRequest): Promise<responses.GetEmailReturnPathResponse>;
    /**
     * Gets an approved sender for a given `senderId`.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSenderRequest
     * @return GetSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetSender.ts.html |here} to see how to use GetSender API.
     */
    getSender(getSenderRequest: requests.GetSenderRequest): Promise<responses.GetSenderResponse>;
    /**
     * Gets the details of a suppressed recipient email address for a given
     * `suppressionId`. Each suppression is given a unique OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSuppressionRequest
     * @return GetSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetSuppression.ts.html |here} to see how to use GetSuppression API.
     */
    getSuppression(getSuppressionRequest: requests.GetSuppressionRequest): Promise<responses.GetSuppressionResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists DKIMs for an email domain.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDkimsRequest
     * @return ListDkimsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListDkims.ts.html |here} to see how to use ListDkims API.
     */
    listDkims(listDkimsRequest: requests.ListDkimsRequest): Promise<responses.ListDkimsResponse>;
    /**
     * Lists email domains in the specified compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListEmailDomainsRequest
     * @return ListEmailDomainsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListEmailDomains.ts.html |here} to see how to use ListEmailDomains API.
     */
    listEmailDomains(listEmailDomainsRequest: requests.ListEmailDomainsRequest): Promise<responses.ListEmailDomainsResponse>;
    /**
     * Lists email return paths in the specified compartment or emaildomain.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListEmailReturnPathsRequest
     * @return ListEmailReturnPathsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListEmailReturnPaths.ts.html |here} to see how to use ListEmailReturnPaths API.
     */
    listEmailReturnPaths(listEmailReturnPathsRequest: requests.ListEmailReturnPathsRequest): Promise<responses.ListEmailReturnPathsResponse>;
    /**
     * Gets a collection of approved sender email addresses and sender IDs.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSendersRequest
     * @return ListSendersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListSenders.ts.html |here} to see how to use ListSenders API.
     */
    listSenders(listSendersRequest: requests.ListSendersRequest): Promise<responses.ListSendersResponse>;
    /**
     * NOTE: This function is deprecated in favor of listSendersRecordIterator function.
     * Creates a new async iterator which will iterate over the models.SenderSummary objects
     * contained in responses from the listSenders operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSenders(request: requests.ListSendersRequest): AsyncIterableIterator<model.SenderSummary>;
    /**
     * NOTE: This function is deprecated in favor of listSendersResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listSenders operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSendersResponses(request: requests.ListSendersRequest): AsyncIterableIterator<responses.ListSendersResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SenderSummary objects
     * contained in responses from the listSenders operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listSendersRecordIterator(request: requests.ListSendersRequest): AsyncIterableIterator<model.SenderSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSenders operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listSendersResponseIterator(request: requests.ListSendersRequest): AsyncIterableIterator<responses.ListSendersResponse>;
    /**
     * Gets a list of suppressed recipient email addresses for a user. The
     * `compartmentId` for suppressions must be a tenancy OCID. The returned list
     * is sorted by creation time in descending order.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSuppressionsRequest
     * @return ListSuppressionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListSuppressions.ts.html |here} to see how to use ListSuppressions API.
     */
    listSuppressions(listSuppressionsRequest: requests.ListSuppressionsRequest): Promise<responses.ListSuppressionsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listSuppressionsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.SuppressionSummary objects
     * contained in responses from the listSuppressions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSuppressions(request: requests.ListSuppressionsRequest): AsyncIterableIterator<model.SuppressionSummary>;
    /**
     * NOTE: This function is deprecated in favor of listSuppressionsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listSuppressions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSuppressionsResponses(request: requests.ListSuppressionsRequest): AsyncIterableIterator<responses.ListSuppressionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SuppressionSummary objects
     * contained in responses from the listSuppressions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listSuppressionsRecordIterator(request: requests.ListSuppressionsRequest): AsyncIterableIterator<model.SuppressionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSuppressions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listSuppressionsResponseIterator(request: requests.ListSuppressionsRequest): AsyncIterableIterator<responses.ListSuppressionsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Modifies a DKIM.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDkimRequest
     * @return UpdateDkimResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/UpdateDkim.ts.html |here} to see how to use UpdateDkim API.
     */
    updateDkim(updateDkimRequest: requests.UpdateDkimRequest): Promise<responses.UpdateDkimResponse>;
    /**
     * Modifies an email domain.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateEmailDomainRequest
     * @return UpdateEmailDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/UpdateEmailDomain.ts.html |here} to see how to use UpdateEmailDomain API.
     */
    updateEmailDomain(updateEmailDomainRequest: requests.UpdateEmailDomainRequest): Promise<responses.UpdateEmailDomainResponse>;
    /**
     * Modifies an email return path.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateEmailReturnPathRequest
     * @return UpdateEmailReturnPathResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/UpdateEmailReturnPath.ts.html |here} to see how to use UpdateEmailReturnPath API.
     */
    updateEmailReturnPath(updateEmailReturnPathRequest: requests.UpdateEmailReturnPathRequest): Promise<responses.UpdateEmailReturnPathResponse>;
    /**
     * Replaces the set of tags for a sender with the tags provided. If either freeform
     * or defined tags are omitted, the tags for that set remain the same. Each set must
     * include the full set of tags for the sender, partial updates are not permitted.
     * For more information about tagging, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateSenderRequest
     * @return UpdateSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/email/UpdateSender.ts.html |here} to see how to use UpdateSender API.
     */
    updateSender(updateSenderRequest: requests.UpdateSenderRequest): Promise<responses.UpdateSenderResponse>;
}
export {};
