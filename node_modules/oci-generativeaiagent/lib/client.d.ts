/**
 * Generative AI Agents Management API
 * OCI Generative AI Agents is a fully managed service that combines the power of large language models (LLMs) with an intelligent retrieval system to create contextually relevant answers by searching your knowledge base, making your AI applications smart and efficient.

OCI Generative AI Agents supports several ways to onboard your data and then allows you and your customers to interact with your data using a chat interface or API.

Use the Generative AI Agents API to create and manage agents, knowledge bases, data sources, endpoints, data ingestion jobs, and work requests.

For creating and managing client chat sessions see the {@link #eNGenerative-ai-agents-clientLatest(ENGenerative-ai-agents-clientLatestRequest) eNGenerative-ai-agents-clientLatest}.

To learn more about the service, see the [Generative AI Agents documentation](https://docs.oracle.com/iaas/Content/generative-ai-agents/home.htm).

 * OpenAPI spec version: 20240531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { GenerativeAiAgentWaiter } from "./generativeaiagent-waiter";
declare const Breaker: any;
export declare enum GenerativeAiAgentApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class GenerativeAiAgentClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": GenerativeAiAgentWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new GenerativeAiAgentWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): GenerativeAiAgentWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): GenerativeAiAgentWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Cancels a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Moves an agent into a different compartment within the same tenancy. For information about moving resources between
     * compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeAgentCompartmentRequest
     * @return ChangeAgentCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ChangeAgentCompartment.ts.html |here} to see how to use ChangeAgentCompartment API.
     */
    changeAgentCompartment(changeAgentCompartmentRequest: requests.ChangeAgentCompartmentRequest): Promise<responses.ChangeAgentCompartmentResponse>;
    /**
     * Moves an endpoint into a different compartment within the same tenancy. For information about moving resources between
     * compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeAgentEndpointCompartmentRequest
     * @return ChangeAgentEndpointCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ChangeAgentEndpointCompartment.ts.html |here} to see how to use ChangeAgentEndpointCompartment API.
     */
    changeAgentEndpointCompartment(changeAgentEndpointCompartmentRequest: requests.ChangeAgentEndpointCompartmentRequest): Promise<responses.ChangeAgentEndpointCompartmentResponse>;
    /**
     * Moves a knowledge base into a different compartment within the same tenancy. For information about moving resources between
     * compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeKnowledgeBaseCompartmentRequest
     * @return ChangeKnowledgeBaseCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ChangeKnowledgeBaseCompartment.ts.html |here} to see how to use ChangeKnowledgeBaseCompartment API.
     */
    changeKnowledgeBaseCompartment(changeKnowledgeBaseCompartmentRequest: requests.ChangeKnowledgeBaseCompartmentRequest): Promise<responses.ChangeKnowledgeBaseCompartmentResponse>;
    /**
     * Creates an agent.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAgentRequest
     * @return CreateAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateAgent.ts.html |here} to see how to use CreateAgent API.
     */
    createAgent(createAgentRequest: requests.CreateAgentRequest): Promise<responses.CreateAgentResponse>;
    /**
     * Creates an endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAgentEndpointRequest
     * @return CreateAgentEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateAgentEndpoint.ts.html |here} to see how to use CreateAgentEndpoint API.
     */
    createAgentEndpoint(createAgentEndpointRequest: requests.CreateAgentEndpointRequest): Promise<responses.CreateAgentEndpointResponse>;
    /**
     * Creates a data ingestion job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDataIngestionJobRequest
     * @return CreateDataIngestionJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateDataIngestionJob.ts.html |here} to see how to use CreateDataIngestionJob API.
     */
    createDataIngestionJob(createDataIngestionJobRequest: requests.CreateDataIngestionJobRequest): Promise<responses.CreateDataIngestionJobResponse>;
    /**
     * Creates a data source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDataSourceRequest
     * @return CreateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateDataSource.ts.html |here} to see how to use CreateDataSource API.
     */
    createDataSource(createDataSourceRequest: requests.CreateDataSourceRequest): Promise<responses.CreateDataSourceResponse>;
    /**
     * Creates a knowledge base.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateKnowledgeBaseRequest
     * @return CreateKnowledgeBaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateKnowledgeBase.ts.html |here} to see how to use CreateKnowledgeBase API.
     */
    createKnowledgeBase(createKnowledgeBaseRequest: requests.CreateKnowledgeBaseRequest): Promise<responses.CreateKnowledgeBaseResponse>;
    /**
     * Creates a tool.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateToolRequest
     * @return CreateToolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/CreateTool.ts.html |here} to see how to use CreateTool API.
     */
    createTool(createToolRequest: requests.CreateToolRequest): Promise<responses.CreateToolResponse>;
    /**
     * Deletes an agent.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAgentRequest
     * @return DeleteAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteAgent.ts.html |here} to see how to use DeleteAgent API.
     */
    deleteAgent(deleteAgentRequest: requests.DeleteAgentRequest): Promise<responses.DeleteAgentResponse>;
    /**
     * Deletes an endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteAgentEndpointRequest
     * @return DeleteAgentEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteAgentEndpoint.ts.html |here} to see how to use DeleteAgentEndpoint API.
     */
    deleteAgentEndpoint(deleteAgentEndpointRequest: requests.DeleteAgentEndpointRequest): Promise<responses.DeleteAgentEndpointResponse>;
    /**
     * Deletes a data ingestion job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDataIngestionJobRequest
     * @return DeleteDataIngestionJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteDataIngestionJob.ts.html |here} to see how to use DeleteDataIngestionJob API.
     */
    deleteDataIngestionJob(deleteDataIngestionJobRequest: requests.DeleteDataIngestionJobRequest): Promise<responses.DeleteDataIngestionJobResponse>;
    /**
     * Deletes a data source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDataSourceRequest
     * @return DeleteDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteDataSource.ts.html |here} to see how to use DeleteDataSource API.
     */
    deleteDataSource(deleteDataSourceRequest: requests.DeleteDataSourceRequest): Promise<responses.DeleteDataSourceResponse>;
    /**
     * Deletes a knowledge base.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteKnowledgeBaseRequest
     * @return DeleteKnowledgeBaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteKnowledgeBase.ts.html |here} to see how to use DeleteKnowledgeBase API.
     */
    deleteKnowledgeBase(deleteKnowledgeBaseRequest: requests.DeleteKnowledgeBaseRequest): Promise<responses.DeleteKnowledgeBaseResponse>;
    /**
     * Deletes a tool.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteToolRequest
     * @return DeleteToolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/DeleteTool.ts.html |here} to see how to use DeleteTool API.
     */
    deleteTool(deleteToolRequest: requests.DeleteToolRequest): Promise<responses.DeleteToolResponse>;
    /**
     * Gets information about an agent.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAgentRequest
     * @return GetAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetAgent.ts.html |here} to see how to use GetAgent API.
     */
    getAgent(getAgentRequest: requests.GetAgentRequest): Promise<responses.GetAgentResponse>;
    /**
     * Gets information about an endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAgentEndpointRequest
     * @return GetAgentEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetAgentEndpoint.ts.html |here} to see how to use GetAgentEndpoint API.
     */
    getAgentEndpoint(getAgentEndpointRequest: requests.GetAgentEndpointRequest): Promise<responses.GetAgentEndpointResponse>;
    /**
     * Gets information about a data ingestion job.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDataIngestionJobRequest
     * @return GetDataIngestionJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetDataIngestionJob.ts.html |here} to see how to use GetDataIngestionJob API.
     */
    getDataIngestionJob(getDataIngestionJobRequest: requests.GetDataIngestionJobRequest): Promise<responses.GetDataIngestionJobResponse>;
    /**
     * Returns the raw log file for the specified data ingestion job in text format.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDataIngestionJobLogContentRequest
     * @return GetDataIngestionJobLogContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetDataIngestionJobLogContent.ts.html |here} to see how to use GetDataIngestionJobLogContent API.
     */
    getDataIngestionJobLogContent(getDataIngestionJobLogContentRequest: requests.GetDataIngestionJobLogContentRequest): Promise<responses.GetDataIngestionJobLogContentResponse>;
    /**
     * Gets information about a data source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDataSourceRequest
     * @return GetDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetDataSource.ts.html |here} to see how to use GetDataSource API.
     */
    getDataSource(getDataSourceRequest: requests.GetDataSourceRequest): Promise<responses.GetDataSourceResponse>;
    /**
     * Gets information about a knowledge base.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetKnowledgeBaseRequest
     * @return GetKnowledgeBaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetKnowledgeBase.ts.html |here} to see how to use GetKnowledgeBase API.
     */
    getKnowledgeBase(getKnowledgeBaseRequest: requests.GetKnowledgeBaseRequest): Promise<responses.GetKnowledgeBaseResponse>;
    /**
     * Gets information about a tool.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetToolRequest
     * @return GetToolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetTool.ts.html |here} to see how to use GetTool API.
     */
    getTool(getToolRequest: requests.GetToolRequest): Promise<responses.GetToolResponse>;
    /**
     * Gets the details of a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Gets a list of endpoints.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAgentEndpointsRequest
     * @return ListAgentEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListAgentEndpoints.ts.html |here} to see how to use ListAgentEndpoints API.
     */
    listAgentEndpoints(listAgentEndpointsRequest: requests.ListAgentEndpointsRequest): Promise<responses.ListAgentEndpointsResponse>;
    /**
     * Gets a list of agents.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAgentsRequest
     * @return ListAgentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListAgents.ts.html |here} to see how to use ListAgents API.
     */
    listAgents(listAgentsRequest: requests.ListAgentsRequest): Promise<responses.ListAgentsResponse>;
    /**
     * Gets a list of data ingestion jobs.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDataIngestionJobsRequest
     * @return ListDataIngestionJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListDataIngestionJobs.ts.html |here} to see how to use ListDataIngestionJobs API.
     */
    listDataIngestionJobs(listDataIngestionJobsRequest: requests.ListDataIngestionJobsRequest): Promise<responses.ListDataIngestionJobsResponse>;
    /**
     * Gets a list of data sources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDataSourcesRequest
     * @return ListDataSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListDataSources.ts.html |here} to see how to use ListDataSources API.
     */
    listDataSources(listDataSourcesRequest: requests.ListDataSourcesRequest): Promise<responses.ListDataSourcesResponse>;
    /**
     * Gets a list of knowledge bases.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListKnowledgeBasesRequest
     * @return ListKnowledgeBasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListKnowledgeBases.ts.html |here} to see how to use ListKnowledgeBases API.
     */
    listKnowledgeBases(listKnowledgeBasesRequest: requests.ListKnowledgeBasesRequest): Promise<responses.ListKnowledgeBasesResponse>;
    /**
     * Gets a list of tools.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListToolsRequest
     * @return ListToolsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListTools.ts.html |here} to see how to use ListTools API.
     */
    listTools(listToolsRequest: requests.ListToolsRequest): Promise<responses.ListToolsResponse>;
    /**
     * Lists the errors for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Lists the logs for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Updates an agent.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAgentRequest
     * @return UpdateAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/UpdateAgent.ts.html |here} to see how to use UpdateAgent API.
     */
    updateAgent(updateAgentRequest: requests.UpdateAgentRequest): Promise<responses.UpdateAgentResponse>;
    /**
     * Updates an endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAgentEndpointRequest
     * @return UpdateAgentEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/UpdateAgentEndpoint.ts.html |here} to see how to use UpdateAgentEndpoint API.
     */
    updateAgentEndpoint(updateAgentEndpointRequest: requests.UpdateAgentEndpointRequest): Promise<responses.UpdateAgentEndpointResponse>;
    /**
     * Updates a data source.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDataSourceRequest
     * @return UpdateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/UpdateDataSource.ts.html |here} to see how to use UpdateDataSource API.
     */
    updateDataSource(updateDataSourceRequest: requests.UpdateDataSourceRequest): Promise<responses.UpdateDataSourceResponse>;
    /**
     * Updates a knowledge base.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateKnowledgeBaseRequest
     * @return UpdateKnowledgeBaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/UpdateKnowledgeBase.ts.html |here} to see how to use UpdateKnowledgeBase API.
     */
    updateKnowledgeBase(updateKnowledgeBaseRequest: requests.UpdateKnowledgeBaseRequest): Promise<responses.UpdateKnowledgeBaseResponse>;
    /**
     * Updates a tool.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateToolRequest
     * @return UpdateToolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/generativeaiagent/UpdateTool.ts.html |here} to see how to use UpdateTool API.
     */
    updateTool(updateToolRequest: requests.UpdateToolRequest): Promise<responses.UpdateToolResponse>;
}
export {};
