"use strict";
/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerCapabilityType = void 0;
/**
 * Types of container capability.
 **/
var ContainerCapabilityType;
(function (ContainerCapabilityType) {
    ContainerCapabilityType["CapChown"] = "CAP_CHOWN";
    ContainerCapabilityType["CapDacOverride"] = "CAP_DAC_OVERRIDE";
    ContainerCapabilityType["CapFsetid"] = "CAP_FSETID";
    ContainerCapabilityType["CapFowner"] = "CAP_FOWNER";
    ContainerCapabilityType["CapMknod"] = "CAP_MKNOD";
    ContainerCapabilityType["CapNetRaw"] = "CAP_NET_RAW";
    ContainerCapabilityType["CapSetgid"] = "CAP_SETGID";
    ContainerCapabilityType["CapSetuid"] = "CAP_SETUID";
    ContainerCapabilityType["CapSetfcap"] = "CAP_SETFCAP";
    ContainerCapabilityType["CapSetpcap"] = "CAP_SETPCAP";
    ContainerCapabilityType["CapNetBindService"] = "CAP_NET_BIND_SERVICE";
    ContainerCapabilityType["CapSysChroot"] = "CAP_SYS_CHROOT";
    ContainerCapabilityType["CapKill"] = "CAP_KILL";
    ContainerCapabilityType["CapAuditWrite"] = "CAP_AUDIT_WRITE";
    ContainerCapabilityType["All"] = "ALL";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    ContainerCapabilityType["UnknownValue"] = "UNKNOWN_VALUE";
})(ContainerCapabilityType = exports.ContainerCapabilityType || (exports.ContainerCapabilityType = {}));
(function (ContainerCapabilityType) {
    function getJsonObj(obj) {
        return obj;
    }
    ContainerCapabilityType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    ContainerCapabilityType.getDeserializedJsonObj = getDeserializedJsonObj;
})(ContainerCapabilityType = exports.ContainerCapabilityType || (exports.ContainerCapabilityType = {}));
//# sourceMappingURL=container-capability-type.js.map