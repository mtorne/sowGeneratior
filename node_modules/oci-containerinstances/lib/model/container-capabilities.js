"use strict";
/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerCapabilities = void 0;
var ContainerCapabilities;
(function (ContainerCapabilities) {
    let AddCapabilities;
    (function (AddCapabilities) {
        AddCapabilities["CapChown"] = "CAP_CHOWN";
        AddCapabilities["CapDacOverride"] = "CAP_DAC_OVERRIDE";
        AddCapabilities["CapFsetid"] = "CAP_FSETID";
        AddCapabilities["CapFowner"] = "CAP_FOWNER";
        AddCapabilities["CapMknod"] = "CAP_MKNOD";
        AddCapabilities["CapNetRaw"] = "CAP_NET_RAW";
        AddCapabilities["CapSetgid"] = "CAP_SETGID";
        AddCapabilities["CapSetuid"] = "CAP_SETUID";
        AddCapabilities["CapSetfcap"] = "CAP_SETFCAP";
        AddCapabilities["CapSetpcap"] = "CAP_SETPCAP";
        AddCapabilities["CapNetBindService"] = "CAP_NET_BIND_SERVICE";
        AddCapabilities["CapSysChroot"] = "CAP_SYS_CHROOT";
        AddCapabilities["CapKill"] = "CAP_KILL";
        AddCapabilities["CapAuditWrite"] = "CAP_AUDIT_WRITE";
        AddCapabilities["All"] = "ALL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AddCapabilities["UnknownValue"] = "UNKNOWN_VALUE";
    })(AddCapabilities = ContainerCapabilities.AddCapabilities || (ContainerCapabilities.AddCapabilities = {}));
    let DropCapabilities;
    (function (DropCapabilities) {
        DropCapabilities["CapChown"] = "CAP_CHOWN";
        DropCapabilities["CapDacOverride"] = "CAP_DAC_OVERRIDE";
        DropCapabilities["CapFsetid"] = "CAP_FSETID";
        DropCapabilities["CapFowner"] = "CAP_FOWNER";
        DropCapabilities["CapMknod"] = "CAP_MKNOD";
        DropCapabilities["CapNetRaw"] = "CAP_NET_RAW";
        DropCapabilities["CapSetgid"] = "CAP_SETGID";
        DropCapabilities["CapSetuid"] = "CAP_SETUID";
        DropCapabilities["CapSetfcap"] = "CAP_SETFCAP";
        DropCapabilities["CapSetpcap"] = "CAP_SETPCAP";
        DropCapabilities["CapNetBindService"] = "CAP_NET_BIND_SERVICE";
        DropCapabilities["CapSysChroot"] = "CAP_SYS_CHROOT";
        DropCapabilities["CapKill"] = "CAP_KILL";
        DropCapabilities["CapAuditWrite"] = "CAP_AUDIT_WRITE";
        DropCapabilities["All"] = "ALL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DropCapabilities["UnknownValue"] = "UNKNOWN_VALUE";
    })(DropCapabilities = ContainerCapabilities.DropCapabilities || (ContainerCapabilities.DropCapabilities = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ContainerCapabilities.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ContainerCapabilities.getDeserializedJsonObj = getDeserializedJsonObj;
})(ContainerCapabilities = exports.ContainerCapabilities || (exports.ContainerCapabilities = {}));
//# sourceMappingURL=container-capabilities.js.map