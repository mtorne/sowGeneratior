/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* Information to create a virtual network interface card (VNIC) which gives
* the containers on this container instance access to a virtual client network (VCN).
* <p>
You use this object when creating the primary VNIC during container instance launch or when creating a secondary VNIC.
* This VNIC is created in the same compartment as the specified subnet on
* behalf of the customer.
* <p>
The VNIC created by this call contains both the tags specified
* in this object as well as any tags specified in the parent container instance.
*
*/
export interface CreateContainerVnicDetails {
    /**
     * A user-friendly name for the VNIC. Does not have to be unique.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
     * The hostname for the VNIC's primary private IP. Used for DNS.
     *
     */
    "hostnameLabel"?: string;
    /**
     * Whether the VNIC should be assigned a public IP address.
     *
     */
    "isPublicIpAssigned"?: boolean;
    /**
     * Whether the source/destination check is disabled on the VNIC.
     *
     */
    "skipSourceDestCheck"?: boolean;
    /**
     * A list of the OCIDs of the network security groups (NSGs) to add the VNIC to.
     *
     */
    "nsgIds"?: Array<string>;
    /**
     * A private IP address of your choice to assign to the VNIC. Must be an
     * available IP address within the subnet's CIDR.
     *
     */
    "privateIp"?: string;
    /**
     * The OCID of the subnet to create the VNIC in.
     *
     */
    "subnetId": string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}.
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateContainerVnicDetails {
    function getJsonObj(obj: CreateContainerVnicDetails): object;
    function getDeserializedJsonObj(obj: CreateContainerVnicDetails): object;
}
