/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The empty directory volume of a container instance. You can create up to 64 EmptyDir per container instance.
 */
export interface ContainerEmptyDirVolume extends model.ContainerVolume {
    /**
     * The volume type of the empty directory, can be either File Storage or Memory.
     */
    "backingStore"?: ContainerEmptyDirVolume.BackingStore;
    "volumeType": string;
}
export declare namespace ContainerEmptyDirVolume {
    enum BackingStore {
        EphemeralStorage = "EPHEMERAL_STORAGE",
        Memory = "MEMORY",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ContainerEmptyDirVolume, isParentJsonObj?: boolean): object;
    const volumeType = "EMPTYDIR";
    function getDeserializedJsonObj(obj: ContainerEmptyDirVolume, isParentJsonObj?: boolean): object;
}
