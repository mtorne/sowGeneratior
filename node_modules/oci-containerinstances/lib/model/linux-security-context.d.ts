/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Security context for Linux container.
 */
export interface LinuxSecurityContext extends model.SecurityContext {
    /**
     * The user ID (UID) to run the entrypoint process of the container. Defaults to user specified UID in container image metadata if not provided. This must be provided if runAsGroup is provided.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "runAsUser"?: number;
    /**
     * The group ID (GID) to run the entrypoint process of the container. Uses runtime default if not provided. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "runAsGroup"?: number;
    /**
     * Indicates if the container must run as a non-root user. If true, the service validates the container image at runtime to ensure that it is not going to run with UID 0 (root) and fails the container instance creation if the validation fails.
     *
     */
    "isNonRootUserCheckEnabled"?: boolean;
    /**
     * Determines if the container will have a read-only root file system. Default value is false.
     */
    "isRootFileSystemReadonly"?: boolean;
    "capabilities"?: model.ContainerCapabilities;
    "securityContextType": string;
}
export declare namespace LinuxSecurityContext {
    function getJsonObj(obj: LinuxSecurityContext, isParentJsonObj?: boolean): object;
    const securityContextType = "LINUX";
    function getDeserializedJsonObj(obj: LinuxSecurityContext, isParentJsonObj?: boolean): object;
}
