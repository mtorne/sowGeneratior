/**
 * Dblm API
 * A description of the Dblm API
 * OpenAPI spec version: 20240102
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of a databases.
 */
export interface DatabasesSummary {
    /**
     * Database ocid.
     */
    "databaseId": string;
    /**
     * Database name.
     */
    "databaseName"?: string;
    /**
     * Database type.
     */
    "databaseType"?: DatabasesSummary.DatabaseType;
    /**
     * Database release.
     */
    "release"?: string;
    /**
     * Database release full version.
     */
    "releaseFullVersion"?: string;
    /**
     * Path to the Oracle home.
     */
    "oracleHomePath"?: string;
    /**
     * This is the hashcode representing the list of patches applied.
     */
    "currentPatchWatermark"?: string;
    /**
     * For SI, hosted on host and for RAC, host on cluster.
     */
    "hostOrCluster"?: string;
    "imageDetails": model.ImageDetails;
    "patchComplianceDetails": model.PatchComplianceDetails;
    "patchActivityDetails": model.PatchActivityDetails;
    /**
     * Intermediate user to be used for patching, created and maintained by customers. This user requires sudo access to switch as Oracle home owner and root user
     */
    "patchUser"?: string;
    /**
     * Path to sudo binary (executable) file
     */
    "sudoFilePath"?: string;
    /**
     * List of additional patches on database.
     */
    "additionalPatches"?: Array<model.AdditionalPatches>;
    /**
     * Summary of vulnerabilities found in registered resources grouped by severity.
     */
    "vulnerabilitiesSummary"?: any;
    /**
     * The current state of the database.
     */
    "lifecycleState"?: DatabasesSummary.LifecycleState;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace DatabasesSummary {
    enum DatabaseType {
        Si = "SI",
        Rac = "RAC",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DatabasesSummary): object;
    function getDeserializedJsonObj(obj: DatabasesSummary): object;
}
