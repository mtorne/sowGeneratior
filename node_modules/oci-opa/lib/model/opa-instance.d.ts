/**
 * Process Automation
 * Process Automation helps you to rapidly design, automate, and manage business processes in the cloud. With the Process Automation design-time (Designer) and the runtime (Workspace) environments, you can easily create, develop, manage, test, and monitor process applications and their components.
 * OpenAPI spec version: 20210621
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Description of OpaInstance.
 */
export interface OpaInstance {
    /**
     * Unique identifier that is immutable on creation
     */
    "id": string;
    /**
     * OpaInstance Identifier, can be renamed
     */
    "displayName": string;
    /**
     * Description of the Process Automation instance.
     */
    "description"?: string;
    /**
     * Compartment Identifier
     */
    "compartmentId": string;
    /**
     * OPA Instance URL
     */
    "instanceUrl"?: string;
    /**
     * The entitlement used for billing purposes
     */
    "consumptionModel"?: OpaInstance.ConsumptionModel;
    /**
     * Shape of the instance.
     */
    "shapeName": OpaInstance.ShapeName;
    /**
     * MeteringType Identifier
     */
    "meteringType"?: OpaInstance.MeteringType;
    /**
     * The time when OpaInstance was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the OpaInstance was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the OpaInstance.
     */
    "lifecycleState": OpaInstance.LifecycleState;
    /**
     * This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
     */
    "identityAppGuid"?: string;
    /**
     * This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     */
    "identityAppDisplayName"?: string;
    /**
     * This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     */
    "identityDomainUrl"?: string;
    /**
     * This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     */
    "identityAppOpcServiceInstanceGuid"?: string;
    /**
     * indicates if breakGlass is enabled for the opa instance.
     */
    "isBreakglassEnabled"?: boolean;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A list of associated attachments to other services
     *
     */
    "attachments"?: Array<model.AttachmentDetails>;
}
export declare namespace OpaInstance {
    enum ConsumptionModel {
        Ucm = "UCM",
        Gov = "GOV",
        Saas = "SAAS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ShapeName {
        Development = "DEVELOPMENT",
        Production = "PRODUCTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum MeteringType {
        ExecutionPack = "EXECUTION_PACK",
        Users = "USERS",
        Employee = "EMPLOYEE",
        NamedUser = "NAMED_USER",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: OpaInstance): object;
    function getDeserializedJsonObj(obj: OpaInstance): object;
}
