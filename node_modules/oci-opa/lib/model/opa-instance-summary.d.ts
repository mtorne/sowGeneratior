/**
 * Process Automation
 * Process Automation helps you to rapidly design, automate, and manage business processes in the cloud. With the Process Automation design-time (Designer) and the runtime (Workspace) environments, you can easily create, develop, manage, test, and monitor process applications and their components.
 * OpenAPI spec version: 20210621
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Summary of the OpaInstance.
 */
export interface OpaInstanceSummary {
    /**
     * Unique identifier that is immutable on creation
     */
    "id": string;
    /**
     * OpaInstance Identifier, can be renamed
     */
    "displayName": string;
    /**
     * Description of the Process Automation instance.
     */
    "description"?: string;
    /**
     * Compartment Identifier
     */
    "compartmentId": string;
    /**
     * OPA Instance URL
     */
    "instanceUrl"?: string;
    /**
     * Parameter specifying which entitlement to use for billing purposes
     */
    "consumptionModel"?: string;
    /**
     * Shape of the instance.
     */
    "shapeName": string;
    /**
     * MeteringType Identifier
     */
    "meteringType"?: string;
    /**
     * The time the the OpaInstance was created. An RFC3339 formatted datetime string
     */
    "timeCreated": Date;
    /**
     * The time the OpaInstance was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the OpaInstance.
     */
    "lifecycleState": string;
    /**
     * indicates if breakGlass is enabled for the opa instance.
     */
    "isBreakglassEnabled"?: boolean;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace OpaInstanceSummary {
    function getJsonObj(obj: OpaInstanceSummary): object;
    function getDeserializedJsonObj(obj: OpaInstanceSummary): object;
}
