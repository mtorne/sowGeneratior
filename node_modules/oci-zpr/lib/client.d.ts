/**
 * Zero Trust Packet Routing Control Plane API
 * Use the Zero Trust Packet Routing Control Plane API to manage ZPR configuration and policy. See the [Zero Trust Packet Routing](https://docs.oracle.com/iaas/Content/zero-trust-packet-routing/home.htm) documentation for more information.
 * OpenAPI spec version: 20240301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { ZprWaiter } from "./zpr-waiter";
declare const Breaker: any;
export declare enum ZprApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ZprClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ZprWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ZprWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ZprWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ZprWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Initiates the process to onboard ZPR
     * in a root compartment (the root compartment is the tenancy). It creates an object of ZPR configuration as part of onboarding.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateConfigurationRequest
     * @return CreateConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/CreateConfiguration.ts.html |here} to see how to use CreateConfiguration API.
     */
    createConfiguration(createConfigurationRequest: requests.CreateConfigurationRequest): Promise<responses.CreateConfigurationResponse>;
    /**
     * Creates a ZprPolicy.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateZprPolicyRequest
     * @return CreateZprPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/CreateZprPolicy.ts.html |here} to see how to use CreateZprPolicy API.
     */
    createZprPolicy(createZprPolicyRequest: requests.CreateZprPolicyRequest): Promise<responses.CreateZprPolicyResponse>;
    /**
     * Deletes a ZprPolicy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteZprPolicyRequest
     * @return DeleteZprPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/DeleteZprPolicy.ts.html |here} to see how to use DeleteZprPolicy API.
     */
    deleteZprPolicy(deleteZprPolicyRequest: requests.DeleteZprPolicyRequest): Promise<responses.DeleteZprPolicyResponse>;
    /**
     * Retrieves the ZPR configuration details for the root compartment (the root compartment is the tenancy).
     * Returns ZPR configuration for root compartment (the root compartment is the tenancy).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConfigurationRequest
     * @return GetConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/GetConfiguration.ts.html |here} to see how to use GetConfiguration API.
     */
    getConfiguration(getConfigurationRequest: requests.GetConfigurationRequest): Promise<responses.GetConfigurationResponse>;
    /**
     * Gets the details of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetZprConfigurationWorkRequestRequest
     * @return GetZprConfigurationWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/GetZprConfigurationWorkRequest.ts.html |here} to see how to use GetZprConfigurationWorkRequest API.
     */
    getZprConfigurationWorkRequest(getZprConfigurationWorkRequestRequest: requests.GetZprConfigurationWorkRequestRequest): Promise<responses.GetZprConfigurationWorkRequestResponse>;
    /**
     * Gets information about a ZprPolicy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetZprPolicyRequest
     * @return GetZprPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/GetZprPolicy.ts.html |here} to see how to use GetZprPolicy API.
     */
    getZprPolicy(getZprPolicyRequest: requests.GetZprPolicyRequest): Promise<responses.GetZprPolicyResponse>;
    /**
     * Gets the details of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetZprPolicyWorkRequestRequest
     * @return GetZprPolicyWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/GetZprPolicyWorkRequest.ts.html |here} to see how to use GetZprPolicyWorkRequest API.
     */
    getZprPolicyWorkRequest(getZprPolicyWorkRequestRequest: requests.GetZprPolicyWorkRequestRequest): Promise<responses.GetZprPolicyWorkRequestResponse>;
    /**
     * Lists the errors for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprConfigurationWorkRequestErrorsRequest
     * @return ListZprConfigurationWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprConfigurationWorkRequestErrors.ts.html |here} to see how to use ListZprConfigurationWorkRequestErrors API.
     */
    listZprConfigurationWorkRequestErrors(listZprConfigurationWorkRequestErrorsRequest: requests.ListZprConfigurationWorkRequestErrorsRequest): Promise<responses.ListZprConfigurationWorkRequestErrorsResponse>;
    /**
     * Lists the logs for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprConfigurationWorkRequestLogsRequest
     * @return ListZprConfigurationWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprConfigurationWorkRequestLogs.ts.html |here} to see how to use ListZprConfigurationWorkRequestLogs API.
     */
    listZprConfigurationWorkRequestLogs(listZprConfigurationWorkRequestLogsRequest: requests.ListZprConfigurationWorkRequestLogsRequest): Promise<responses.ListZprConfigurationWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprConfigurationWorkRequestsRequest
     * @return ListZprConfigurationWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprConfigurationWorkRequests.ts.html |here} to see how to use ListZprConfigurationWorkRequests API.
     */
    listZprConfigurationWorkRequests(listZprConfigurationWorkRequestsRequest: requests.ListZprConfigurationWorkRequestsRequest): Promise<responses.ListZprConfigurationWorkRequestsResponse>;
    /**
     * Gets a list of ZprPolicies.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprPoliciesRequest
     * @return ListZprPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprPolicies.ts.html |here} to see how to use ListZprPolicies API.
     */
    listZprPolicies(listZprPoliciesRequest: requests.ListZprPoliciesRequest): Promise<responses.ListZprPoliciesResponse>;
    /**
     * Lists the errors for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprPolicyWorkRequestErrorsRequest
     * @return ListZprPolicyWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprPolicyWorkRequestErrors.ts.html |here} to see how to use ListZprPolicyWorkRequestErrors API.
     */
    listZprPolicyWorkRequestErrors(listZprPolicyWorkRequestErrorsRequest: requests.ListZprPolicyWorkRequestErrorsRequest): Promise<responses.ListZprPolicyWorkRequestErrorsResponse>;
    /**
     * Lists the logs for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprPolicyWorkRequestLogsRequest
     * @return ListZprPolicyWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprPolicyWorkRequestLogs.ts.html |here} to see how to use ListZprPolicyWorkRequestLogs API.
     */
    listZprPolicyWorkRequestLogs(listZprPolicyWorkRequestLogsRequest: requests.ListZprPolicyWorkRequestLogsRequest): Promise<responses.ListZprPolicyWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListZprPolicyWorkRequestsRequest
     * @return ListZprPolicyWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/ListZprPolicyWorkRequests.ts.html |here} to see how to use ListZprPolicyWorkRequests API.
     */
    listZprPolicyWorkRequests(listZprPolicyWorkRequestsRequest: requests.ListZprPolicyWorkRequestsRequest): Promise<responses.ListZprPolicyWorkRequestsResponse>;
    /**
     * Updates a specific ZprPolicy. If updating on statements, the entire list of policy statements is required, which will replace the existing policy statements associated with the policy ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateZprPolicyRequest
     * @return UpdateZprPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/zpr/UpdateZprPolicy.ts.html |here} to see how to use UpdateZprPolicy API.
     */
    updateZprPolicy(updateZprPolicyRequest: requests.UpdateZprPolicyRequest): Promise<responses.UpdateZprPolicyResponse>;
}
export {};
