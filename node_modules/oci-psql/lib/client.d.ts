/**
 * PGSQL Control Plane API
 * Use the OCI Database with PostgreSQL API to manage resources such as database systems, database nodes, backups, and configurations.
For information, see the user guide documentation for the [service](https://docs.oracle.com/iaas/Content/postgresql/home.htm).

 * OpenAPI spec version: 20220915
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { PostgresqlWaiter } from "./postgresql-waiter";
declare const Breaker: any;
export declare enum PostgresqlApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class PostgresqlClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": PostgresqlWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new PostgresqlWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): PostgresqlWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): PostgresqlWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Backup Copy Request to copy back up in remote region. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param BackupCopyRequest
     * @return BackupCopyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/BackupCopy.ts.html |here} to see how to use BackupCopy API.
     */
    backupCopy(backupCopyRequest: requests.BackupCopyRequest): Promise<responses.BackupCopyResponse>;
    /**
     * Moves a backup from one compartment to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeBackupCompartmentRequest
     * @return ChangeBackupCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ChangeBackupCompartment.ts.html |here} to see how to use ChangeBackupCompartment API.
     */
    changeBackupCompartment(changeBackupCompartmentRequest: requests.ChangeBackupCompartmentRequest): Promise<responses.ChangeBackupCompartmentResponse>;
    /**
     * Moves a configuration from one compartment to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeConfigurationCompartmentRequest
     * @return ChangeConfigurationCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ChangeConfigurationCompartment.ts.html |here} to see how to use ChangeConfigurationCompartment API.
     */
    changeConfigurationCompartment(changeConfigurationCompartmentRequest: requests.ChangeConfigurationCompartmentRequest): Promise<responses.ChangeConfigurationCompartmentResponse>;
    /**
     * Moves a database system from one compartment to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeDbSystemCompartmentRequest
     * @return ChangeDbSystemCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ChangeDbSystemCompartment.ts.html |here} to see how to use ChangeDbSystemCompartment API.
     */
    changeDbSystemCompartment(changeDbSystemCompartmentRequest: requests.ChangeDbSystemCompartmentRequest): Promise<responses.ChangeDbSystemCompartmentResponse>;
    /**
     * Creates a new backup.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateBackupRequest
     * @return CreateBackupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/CreateBackup.ts.html |here} to see how to use CreateBackup API.
     */
    createBackup(createBackupRequest: requests.CreateBackupRequest): Promise<responses.CreateBackupResponse>;
    /**
     * Creates a new configuration.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateConfigurationRequest
     * @return CreateConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/CreateConfiguration.ts.html |here} to see how to use CreateConfiguration API.
     */
    createConfiguration(createConfigurationRequest: requests.CreateConfigurationRequest): Promise<responses.CreateConfigurationResponse>;
    /**
     * Creates a new database system.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDbSystemRequest
     * @return CreateDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/CreateDbSystem.ts.html |here} to see how to use CreateDbSystem API.
     */
    createDbSystem(createDbSystemRequest: requests.CreateDbSystemRequest): Promise<responses.CreateDbSystemResponse>;
    /**
     * Deletes a backup by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteBackupRequest
     * @return DeleteBackupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/DeleteBackup.ts.html |here} to see how to use DeleteBackup API.
     */
    deleteBackup(deleteBackupRequest: requests.DeleteBackupRequest): Promise<responses.DeleteBackupResponse>;
    /**
     * Deletes a configuration by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteConfigurationRequest
     * @return DeleteConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/DeleteConfiguration.ts.html |here} to see how to use DeleteConfiguration API.
     */
    deleteConfiguration(deleteConfigurationRequest: requests.DeleteConfigurationRequest): Promise<responses.DeleteConfigurationResponse>;
    /**
     * Deletes a database system by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDbSystemRequest
     * @return DeleteDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/DeleteDbSystem.ts.html |here} to see how to use DeleteDbSystem API.
     */
    deleteDbSystem(deleteDbSystemRequest: requests.DeleteDbSystemRequest): Promise<responses.DeleteDbSystemResponse>;
    /**
     * Runs a failover operation. Optionally, specify the desired AD for regions with three ADs.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param FailoverDbSystemRequest
     * @return FailoverDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/FailoverDbSystem.ts.html |here} to see how to use FailoverDbSystem API.
     */
    failoverDbSystem(failoverDbSystemRequest: requests.FailoverDbSystemRequest): Promise<responses.FailoverDbSystemResponse>;
    /**
     * Gets a backup by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetBackupRequest
     * @return GetBackupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetBackup.ts.html |here} to see how to use GetBackup API.
     */
    getBackup(getBackupRequest: requests.GetBackupRequest): Promise<responses.GetBackupResponse>;
    /**
     * Gets a configuration by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConfigurationRequest
     * @return GetConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetConfiguration.ts.html |here} to see how to use GetConfiguration API.
     */
    getConfiguration(getConfigurationRequest: requests.GetConfigurationRequest): Promise<responses.GetConfigurationResponse>;
    /**
     * Gets the database system connection details.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConnectionDetailsRequest
     * @return GetConnectionDetailsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetConnectionDetails.ts.html |here} to see how to use GetConnectionDetails API.
     */
    getConnectionDetails(getConnectionDetailsRequest: requests.GetConnectionDetailsRequest): Promise<responses.GetConnectionDetailsResponse>;
    /**
     * Gets a database system by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDbSystemRequest
     * @return GetDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetDbSystem.ts.html |here} to see how to use GetDbSystem API.
     */
    getDbSystem(getDbSystemRequest: requests.GetDbSystemRequest): Promise<responses.GetDbSystemResponse>;
    /**
     * Gets a default configuration by identifier.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDefaultConfigurationRequest
     * @return GetDefaultConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetDefaultConfiguration.ts.html |here} to see how to use GetDefaultConfiguration API.
     */
    getDefaultConfiguration(getDefaultConfigurationRequest: requests.GetDefaultConfigurationRequest): Promise<responses.GetDefaultConfigurationResponse>;
    /**
     * Gets the primary database instance node details.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPrimaryDbInstanceRequest
     * @return GetPrimaryDbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetPrimaryDbInstance.ts.html |here} to see how to use GetPrimaryDbInstance API.
     */
    getPrimaryDbInstance(getPrimaryDbInstanceRequest: requests.GetPrimaryDbInstanceRequest): Promise<responses.GetPrimaryDbInstanceResponse>;
    /**
     * Gets details of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Returns a list of backups.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListBackupsRequest
     * @return ListBackupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListBackups.ts.html |here} to see how to use ListBackups API.
     */
    listBackups(listBackupsRequest: requests.ListBackupsRequest): Promise<responses.ListBackupsResponse>;
    /**
     * Returns a list of configurations.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListConfigurationsRequest
     * @return ListConfigurationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListConfigurations.ts.html |here} to see how to use ListConfigurations API.
     */
    listConfigurations(listConfigurationsRequest: requests.ListConfigurationsRequest): Promise<responses.ListConfigurationsResponse>;
    /**
     * Returns a list of database systems.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDbSystemsRequest
     * @return ListDbSystemsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListDbSystems.ts.html |here} to see how to use ListDbSystems API.
     */
    listDbSystems(listDbSystemsRequest: requests.ListDbSystemsRequest): Promise<responses.ListDbSystemsResponse>;
    /**
     * Returns a list of default configurations.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDefaultConfigurationsRequest
     * @return ListDefaultConfigurationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListDefaultConfigurations.ts.html |here} to see how to use ListDefaultConfigurations API.
     */
    listDefaultConfigurations(listDefaultConfigurationsRequest: requests.ListDefaultConfigurationsRequest): Promise<responses.ListDefaultConfigurationsResponse>;
    /**
     * Returns the list of shapes allowed in the region.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListShapesRequest
     * @return ListShapesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListShapes.ts.html |here} to see how to use ListShapes API.
     */
    listShapes(listShapesRequest: requests.ListShapesRequest): Promise<responses.ListShapesResponse>;
    /**
     * Returns a (paginated) list of errors for the work request with the given ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a (paginated) list of logs for the work request with the given ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Modifies the database system by adding or removing database instance nodes.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PatchDbSystemRequest
     * @return PatchDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/PatchDbSystem.ts.html |here} to see how to use PatchDbSystem API.
     */
    patchDbSystem(patchDbSystemRequest: requests.PatchDbSystemRequest): Promise<responses.PatchDbSystemResponse>;
    /**
     * Resets the database system's master password.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ResetMasterUserPasswordRequest
     * @return ResetMasterUserPasswordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/ResetMasterUserPassword.ts.html |here} to see how to use ResetMasterUserPassword API.
     */
    resetMasterUserPassword(resetMasterUserPasswordRequest: requests.ResetMasterUserPasswordRequest): Promise<responses.ResetMasterUserPasswordResponse>;
    /**
     * Restarts the running database instance node.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RestartDbInstanceInDbSystemRequest
     * @return RestartDbInstanceInDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/RestartDbInstanceInDbSystem.ts.html |here} to see how to use RestartDbInstanceInDbSystem API.
     */
    restartDbInstanceInDbSystem(restartDbInstanceInDbSystemRequest: requests.RestartDbInstanceInDbSystemRequest): Promise<responses.RestartDbInstanceInDbSystemResponse>;
    /**
     * Restore the database system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RestoreDbSystemRequest
     * @return RestoreDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/RestoreDbSystem.ts.html |here} to see how to use RestoreDbSystem API.
     */
    restoreDbSystem(restoreDbSystemRequest: requests.RestoreDbSystemRequest): Promise<responses.RestoreDbSystemResponse>;
    /**
     * Updates the backup.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateBackupRequest
     * @return UpdateBackupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/UpdateBackup.ts.html |here} to see how to use UpdateBackup API.
     */
    updateBackup(updateBackupRequest: requests.UpdateBackupRequest): Promise<responses.UpdateBackupResponse>;
    /**
     * Updates a display name or description of the configuration.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateConfigurationRequest
     * @return UpdateConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/UpdateConfiguration.ts.html |here} to see how to use UpdateConfiguration API.
     */
    updateConfiguration(updateConfigurationRequest: requests.UpdateConfigurationRequest): Promise<responses.UpdateConfigurationResponse>;
    /**
     * Updates the database system.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDbSystemRequest
     * @return UpdateDbSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/UpdateDbSystem.ts.html |here} to see how to use UpdateDbSystem API.
     */
    updateDbSystem(updateDbSystemRequest: requests.UpdateDbSystemRequest): Promise<responses.UpdateDbSystemResponse>;
    /**
     * Updates the database instance node.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDbSystemDbInstanceRequest
     * @return UpdateDbSystemDbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/psql/UpdateDbSystemDbInstance.ts.html |here} to see how to use UpdateDbSystemDbInstance API.
     */
    updateDbSystemDbInstance(updateDbSystemDbInstanceRequest: requests.UpdateDbSystemDbInstanceRequest): Promise<responses.UpdateDbSystemDbInstanceResponse>;
}
export {};
