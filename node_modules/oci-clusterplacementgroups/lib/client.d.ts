/**
 * Cluster Placement Groups API
 * API for managing cluster placement groups.
 * OpenAPI spec version: 20230801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { ClusterPlacementGroupsCPWaiter } from "./clusterplacementgroupscp-waiter";
declare const Breaker: any;
export declare enum ClusterPlacementGroupsCPApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ClusterPlacementGroupsCPClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ClusterPlacementGroupsCPWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ClusterPlacementGroupsCPWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ClusterPlacementGroupsCPWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ClusterPlacementGroupsCPWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Activates the specified, previously deactivated cluster placement group to let resources be created in it.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ActivateClusterPlacementGroupRequest
     * @return ActivateClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ActivateClusterPlacementGroup.ts.html |here} to see how to use ActivateClusterPlacementGroup API.
     */
    activateClusterPlacementGroup(activateClusterPlacementGroupRequest: requests.ActivateClusterPlacementGroupRequest): Promise<responses.ActivateClusterPlacementGroupResponse>;
    /**
     * Cancels the work request with the specified ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
       * Moves a cluster placement group resource from one compartment to another in the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, If-Match is checked against ETag values of the resource.
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ChangeClusterPlacementGroupCompartmentRequest
       * @return ChangeClusterPlacementGroupCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ChangeClusterPlacementGroupCompartment.ts.html |here} to see how to use ChangeClusterPlacementGroupCompartment API.
       */
    changeClusterPlacementGroupCompartment(changeClusterPlacementGroupCompartmentRequest: requests.ChangeClusterPlacementGroupCompartmentRequest): Promise<responses.ChangeClusterPlacementGroupCompartmentResponse>;
    /**
     * Creates a new cluster placement group in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateClusterPlacementGroupRequest
     * @return CreateClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/CreateClusterPlacementGroup.ts.html |here} to see how to use CreateClusterPlacementGroup API.
     */
    createClusterPlacementGroup(createClusterPlacementGroupRequest: requests.CreateClusterPlacementGroupRequest): Promise<responses.CreateClusterPlacementGroupResponse>;
    /**
     * Deactivates the specified cluster placement group to prevent new resources from being created in it.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeactivateClusterPlacementGroupRequest
     * @return DeactivateClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/DeactivateClusterPlacementGroup.ts.html |here} to see how to use DeactivateClusterPlacementGroup API.
     */
    deactivateClusterPlacementGroup(deactivateClusterPlacementGroupRequest: requests.DeactivateClusterPlacementGroupRequest): Promise<responses.DeactivateClusterPlacementGroupResponse>;
    /**
     * Deletes the specified cluster placement group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteClusterPlacementGroupRequest
     * @return DeleteClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/DeleteClusterPlacementGroup.ts.html |here} to see how to use DeleteClusterPlacementGroup API.
     */
    deleteClusterPlacementGroup(deleteClusterPlacementGroupRequest: requests.DeleteClusterPlacementGroupRequest): Promise<responses.DeleteClusterPlacementGroupResponse>;
    /**
     * Gets the specified cluster placement group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetClusterPlacementGroupRequest
     * @return GetClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/GetClusterPlacementGroup.ts.html |here} to see how to use GetClusterPlacementGroup API.
     */
    getClusterPlacementGroup(getClusterPlacementGroupRequest: requests.GetClusterPlacementGroupRequest): Promise<responses.GetClusterPlacementGroupResponse>;
    /**
     * Gets details of the work request with the specified ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Gets a list of all cluster placement groups in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListClusterPlacementGroupsRequest
     * @return ListClusterPlacementGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ListClusterPlacementGroups.ts.html |here} to see how to use ListClusterPlacementGroups API.
     */
    listClusterPlacementGroups(listClusterPlacementGroupsRequest: requests.ListClusterPlacementGroupsRequest): Promise<responses.ListClusterPlacementGroupsResponse>;
    /**
     * Returns a (paginated) list of errors for the work request with the specified ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a (paginated) list of logs for the work request with the specified ID.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists all work requests in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Updates the specified cluster placement group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateClusterPlacementGroupRequest
     * @return UpdateClusterPlacementGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/clusterplacementgroups/UpdateClusterPlacementGroup.ts.html |here} to see how to use UpdateClusterPlacementGroup API.
     */
    updateClusterPlacementGroup(updateClusterPlacementGroupRequest: requests.UpdateClusterPlacementGroupRequest): Promise<responses.UpdateClusterPlacementGroupResponse>;
}
export {};
