/**
 * Full Stack Disaster Recovery API
 * Use the Full Stack Disaster Recovery (DR) API to manage disaster recovery for business applications.
Full Stack DR is an OCI disaster recovery orchestration and management service that provides comprehensive disaster
recovery capabilities for all layers of an application stack, including infrastructure, middleware, database,
and application.

 * OpenAPI spec version: 20220125
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { DisasterRecoveryWaiter } from "./disasterrecovery-waiter";
declare const Breaker: any;
export declare enum DisasterRecoveryApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class DisasterRecoveryClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": DisasterRecoveryWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new DisasterRecoveryWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): DisasterRecoveryWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): DisasterRecoveryWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Create an association between the DR protection group identified by *drProtectionGroupId* and
     * another DR protection group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AssociateDrProtectionGroupRequest
     * @return AssociateDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/AssociateDrProtectionGroup.ts.html |here} to see how to use AssociateDrProtectionGroup API.
     */
    associateDrProtectionGroup(associateDrProtectionGroupRequest: requests.AssociateDrProtectionGroupRequest): Promise<responses.AssociateDrProtectionGroupResponse>;
    /**
     * Cancel the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelDrPlanExecutionRequest
     * @return CancelDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/CancelDrPlanExecution.ts.html |here} to see how to use CancelDrPlanExecution API.
     */
    cancelDrPlanExecution(cancelDrPlanExecutionRequest: requests.CancelDrPlanExecutionRequest): Promise<responses.CancelDrPlanExecutionResponse>;
    /**
     * Cancel the work request identified by *workRequestId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Move the DR protection group identified by *drProtectionGroupId* to a different compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeDrProtectionGroupCompartmentRequest
     * @return ChangeDrProtectionGroupCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ChangeDrProtectionGroupCompartment.ts.html |here} to see how to use ChangeDrProtectionGroupCompartment API.
     */
    changeDrProtectionGroupCompartment(changeDrProtectionGroupCompartmentRequest: requests.ChangeDrProtectionGroupCompartmentRequest): Promise<responses.ChangeDrProtectionGroupCompartmentResponse>;
    /**
     * Create a DR plan of the specified DR plan type.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDrPlanRequest
     * @return CreateDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/CreateDrPlan.ts.html |here} to see how to use CreateDrPlan API.
     */
    createDrPlan(createDrPlanRequest: requests.CreateDrPlanRequest): Promise<responses.CreateDrPlanResponse>;
    /**
     * Execute a DR plan for a DR protection group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDrPlanExecutionRequest
     * @return CreateDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/CreateDrPlanExecution.ts.html |here} to see how to use CreateDrPlanExecution API.
     */
    createDrPlanExecution(createDrPlanExecutionRequest: requests.CreateDrPlanExecutionRequest): Promise<responses.CreateDrPlanExecutionResponse>;
    /**
     * Create a DR protection group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDrProtectionGroupRequest
     * @return CreateDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/CreateDrProtectionGroup.ts.html |here} to see how to use CreateDrProtectionGroup API.
     */
    createDrProtectionGroup(createDrProtectionGroupRequest: requests.CreateDrProtectionGroupRequest): Promise<responses.CreateDrProtectionGroupResponse>;
    /**
     * Delete the DR plan identified by *drPlanId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDrPlanRequest
     * @return DeleteDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/DeleteDrPlan.ts.html |here} to see how to use DeleteDrPlan API.
     */
    deleteDrPlan(deleteDrPlanRequest: requests.DeleteDrPlanRequest): Promise<responses.DeleteDrPlanResponse>;
    /**
     * Delete the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDrPlanExecutionRequest
     * @return DeleteDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/DeleteDrPlanExecution.ts.html |here} to see how to use DeleteDrPlanExecution API.
     */
    deleteDrPlanExecution(deleteDrPlanExecutionRequest: requests.DeleteDrPlanExecutionRequest): Promise<responses.DeleteDrPlanExecutionResponse>;
    /**
     * Delete the DR protection group identified by *drProtectionGroupId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDrProtectionGroupRequest
     * @return DeleteDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/DeleteDrProtectionGroup.ts.html |here} to see how to use DeleteDrProtectionGroup API.
     */
    deleteDrProtectionGroup(deleteDrProtectionGroupRequest: requests.DeleteDrProtectionGroupRequest): Promise<responses.DeleteDrProtectionGroupResponse>;
    /**
     * Delete the association between the DR protection group identified by *drProtectionGroupId*.
     * and its peer DR protection group.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisassociateDrProtectionGroupRequest
     * @return DisassociateDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/DisassociateDrProtectionGroup.ts.html |here} to see how to use DisassociateDrProtectionGroup API.
     */
    disassociateDrProtectionGroup(disassociateDrProtectionGroupRequest: requests.DisassociateDrProtectionGroupRequest): Promise<responses.DisassociateDrProtectionGroupResponse>;
    /**
     * Get details for the DR plan identified by *drPlanId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDrPlanRequest
     * @return GetDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/GetDrPlan.ts.html |here} to see how to use GetDrPlan API.
     */
    getDrPlan(getDrPlanRequest: requests.GetDrPlanRequest): Promise<responses.GetDrPlanResponse>;
    /**
     * Get details for the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDrPlanExecutionRequest
     * @return GetDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/GetDrPlanExecution.ts.html |here} to see how to use GetDrPlanExecution API.
     */
    getDrPlanExecution(getDrPlanExecutionRequest: requests.GetDrPlanExecutionRequest): Promise<responses.GetDrPlanExecutionResponse>;
    /**
     * Get the DR protection group identified by *drProtectionGroupId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDrProtectionGroupRequest
     * @return GetDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/GetDrProtectionGroup.ts.html |here} to see how to use GetDrProtectionGroup API.
     */
    getDrProtectionGroup(getDrProtectionGroupRequest: requests.GetDrProtectionGroupRequest): Promise<responses.GetDrProtectionGroupResponse>;
    /**
     * Get the status of the work request identified by *workRequestId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Ignore the failed group or step in DR plan execution identified by *drPlanExecutionId* and resume execution.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param IgnoreDrPlanExecutionRequest
     * @return IgnoreDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/IgnoreDrPlanExecution.ts.html |here} to see how to use IgnoreDrPlanExecution API.
     */
    ignoreDrPlanExecution(ignoreDrPlanExecutionRequest: requests.IgnoreDrPlanExecutionRequest): Promise<responses.IgnoreDrPlanExecutionResponse>;
    /**
     * Get a summary list of all DR plan executions for a DR protection group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDrPlanExecutionsRequest
     * @return ListDrPlanExecutionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListDrPlanExecutions.ts.html |here} to see how to use ListDrPlanExecutions API.
     */
    listDrPlanExecutions(listDrPlanExecutionsRequest: requests.ListDrPlanExecutionsRequest): Promise<responses.ListDrPlanExecutionsResponse>;
    /**
     * Get a summary list of all DR plans for a DR protection group.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDrPlansRequest
     * @return ListDrPlansResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListDrPlans.ts.html |here} to see how to use ListDrPlans API.
     */
    listDrPlans(listDrPlansRequest: requests.ListDrPlansRequest): Promise<responses.ListDrPlansResponse>;
    /**
     * Get a summary list of all DR protection groups in a compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDrProtectionGroupsRequest
     * @return ListDrProtectionGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListDrProtectionGroups.ts.html |here} to see how to use ListDrProtectionGroups API.
     */
    listDrProtectionGroups(listDrProtectionGroupsRequest: requests.ListDrProtectionGroupsRequest): Promise<responses.ListDrProtectionGroupsResponse>;
    /**
     * Get a list of work request errors for the work request identified by *workRequestId*.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Get a list of logs for the work request identified by *workRequestId*.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Pause the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param PauseDrPlanExecutionRequest
     * @return PauseDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/PauseDrPlanExecution.ts.html |here} to see how to use PauseDrPlanExecution API.
     */
    pauseDrPlanExecution(pauseDrPlanExecutionRequest: requests.PauseDrPlanExecutionRequest): Promise<responses.PauseDrPlanExecutionResponse>;
    /**
     * Refresh DR Plan identified by *drPlanId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RefreshDrPlanRequest
     * @return RefreshDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/RefreshDrPlan.ts.html |here} to see how to use RefreshDrPlan API.
     */
    refreshDrPlan(refreshDrPlanRequest: requests.RefreshDrPlanRequest): Promise<responses.RefreshDrPlanResponse>;
    /**
     * Resume the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ResumeDrPlanExecutionRequest
     * @return ResumeDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/ResumeDrPlanExecution.ts.html |here} to see how to use ResumeDrPlanExecution API.
     */
    resumeDrPlanExecution(resumeDrPlanExecutionRequest: requests.ResumeDrPlanExecutionRequest): Promise<responses.ResumeDrPlanExecutionResponse>;
    /**
     * Retry the failed group or step in DR plan execution identified by *drPlanExecutionId* and resume execution.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RetryDrPlanExecutionRequest
     * @return RetryDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/RetryDrPlanExecution.ts.html |here} to see how to use RetryDrPlanExecution API.
     */
    retryDrPlanExecution(retryDrPlanExecutionRequest: requests.RetryDrPlanExecutionRequest): Promise<responses.RetryDrPlanExecutionResponse>;
    /**
     * Update the DR plan identified by *drPlanId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDrPlanRequest
     * @return UpdateDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/UpdateDrPlan.ts.html |here} to see how to use UpdateDrPlan API.
     */
    updateDrPlan(updateDrPlanRequest: requests.UpdateDrPlanRequest): Promise<responses.UpdateDrPlanResponse>;
    /**
     * Update the DR plan execution identified by *drPlanExecutionId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDrPlanExecutionRequest
     * @return UpdateDrPlanExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/UpdateDrPlanExecution.ts.html |here} to see how to use UpdateDrPlanExecution API.
     */
    updateDrPlanExecution(updateDrPlanExecutionRequest: requests.UpdateDrPlanExecutionRequest): Promise<responses.UpdateDrPlanExecutionResponse>;
    /**
     * Update the DR protection group identified by *drProtectionGroupId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDrProtectionGroupRequest
     * @return UpdateDrProtectionGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/UpdateDrProtectionGroup.ts.html |here} to see how to use UpdateDrProtectionGroup API.
     */
    updateDrProtectionGroup(updateDrProtectionGroupRequest: requests.UpdateDrProtectionGroupRequest): Promise<responses.UpdateDrProtectionGroupResponse>;
    /**
     * Update the role of the DR protection group identified by *drProtectionGroupId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDrProtectionGroupRoleRequest
     * @return UpdateDrProtectionGroupRoleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/UpdateDrProtectionGroupRole.ts.html |here} to see how to use UpdateDrProtectionGroupRole API.
     */
    updateDrProtectionGroupRole(updateDrProtectionGroupRoleRequest: requests.UpdateDrProtectionGroupRoleRequest): Promise<responses.UpdateDrProtectionGroupRoleResponse>;
    /**
     * Verify DR Plan identified by *drPlanId*.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param VerifyDrPlanRequest
     * @return VerifyDrPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/disasterrecovery/VerifyDrPlan.ts.html |here} to see how to use VerifyDrPlan API.
     */
    verifyDrPlan(verifyDrPlanRequest: requests.VerifyDrPlanRequest): Promise<responses.VerifyDrPlanResponse>;
}
export {};
