/**
 * Oracle API Access Control
 * This service is used to restrict the control plane service apis; so that everybody won't be
able to access those apis.
There are two main resouces defined as a part of this service
1. PrivilegedApiControl: This is created by the customer which defines which service apis are
   controlled and who can access it.
2. PrivilegedApiRequest: This is a request object again created by the customer operators who           seek access to those privileged apis. After a request is obtained based on the                       PrivilegedAccessControl for which the api belongs to, either it can be approved so that the          requested person can execute the service apis or it will wait for the customer to approve it.

 * OpenAPI spec version: 20241130
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
* A PrivilegedApiControl is a kind of Policy definition which provides details about which operations needs to be secure; who can approve a privilegedApiRequest requesting for a particular operation, whether the operations needs to be approved by customer or is it preApproved.
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to
* an administrator. If you're an administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/policiesgs/get-started-with-policies.htm).
*
*/
export interface PrivilegedApiControl {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
     */
    "id": string;
    /**
     * Name of the privilegedApi control. The name must be unique.
     */
    "displayName": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * Description of privilegedApi control.
     */
    "description"?: string;
    /**
     * The OCID of the OCI Notification topic to publish messages related to this Privileged Api Control.
     */
    "notificationTopicId"?: string;
    /**
     * List of IAM user group ids who can approve an privilegedApi request associated with a target resource under the governance of this operator control.
     */
    "approverGroupIdList"?: Array<string>;
    /**
     * resourceType for which the PrivilegedApiControl is applicable
     */
    "resourceType"?: string;
    /**
     * contains Resource details
     */
    "resources"?: Array<string>;
    /**
     * List of privileged operations/apis. These operations/apis will be treaated as secured, once enabled by the Privileged API Managment for a resource. Any of these operations, if needs to be executed, needs to be raised as a PrivilegedApi Request which needs to be approved by customers or it can be pre-approved.
     *
     */
    "privilegedOperationList"?: Array<model.PrivilegedApiDetails>;
    /**
     * Number of approvers required to approve an privilegedApi request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "numberOfApprovers"?: number;
    /**
      * The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    /**
      * The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeUpdated"?: Date;
    /**
      * The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeDeleted"?: Date;
    /**
     * The current state of the PrivilegedApiControl.
     */
    "state": string;
    /**
     * A message that describes the current state of the PrivilegedApiControl in more detail. For example,
     * can be used to provide actionable information for a resource in the Failed state.
     *
     */
    "stateDetails"?: string;
    /**
     * The current state of the PrivilegedApiControl.
     */
    "lifecycleState": PrivilegedApiControl.LifecycleState;
    /**
     * A message that describes the current state of the PrivilegedApiControl in more detail. For example,
     * can be used to provide actionable information for a resource in the Failed state.
     *
     */
    "lifecycleDetails"?: string;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Department\": \"Finance\"}}
  *
      */
    "freeformTags": {
        [key: string]: string;
    };
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
  *
      */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * System tags for this resource. Each key is predefined and scoped to a namespace.
  * <p>
  Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
  *
      */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace PrivilegedApiControl {
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: PrivilegedApiControl): object;
    function getDeserializedJsonObj(obj: PrivilegedApiControl): object;
}
