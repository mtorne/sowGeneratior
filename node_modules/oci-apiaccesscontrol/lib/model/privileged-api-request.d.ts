/**
 * Oracle API Access Control
 * This service is used to restrict the control plane service apis; so that everybody won't be
able to access those apis.
There are two main resouces defined as a part of this service
1. PrivilegedApiControl: This is created by the customer which defines which service apis are
   controlled and who can access it.
2. PrivilegedApiRequest: This is a request object again created by the customer operators who           seek access to those privileged apis. After a request is obtained based on the                       PrivilegedAccessControl for which the api belongs to, either it can be approved so that the          requested person can execute the service apis or it will wait for the customer to approve it.

 * OpenAPI spec version: 20241130
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
* An Oracle operator raises privilegedApi request when they need access to any infrastructure resource governed by PrivilegedApi Access Control.
*   The privilegedApi request identifies the target resource and the set of operator actions. Access request handling depends upon the Operator Control
*   that governs the target resource, and the set of operator actions listed for approval in the access request. If all of the operator actions
*   listed in the privilegedApi request are in the pre-approved list in the PrivilegedApi Control that governs the target resource, then the privilegedApi request is
*   automatically approved. If not, then the privilegedApi request requires explicit approval from the approver group specified by the PrivilegedApi Control governing the target resource.
* <p>
You can approve or reject an privilegedApi request. You can also revoke the approval of an already approved privilegedApi request. While creating an access request,
*   the operator specifies the duration of access. You have the option to approve the entire duration or reduce or even increase the time duration.
*   An operator can also request for an extension. The approval for such an extension is processed the same way the original privilegedApi request was processed.
*
*/
export interface PrivilegedApiRequest {
    /**
     * The OCID of the privilegedApi request.
     */
    "id": string;
    /**
     * Name of the privilegedApi control. The name must be unique.
     */
    "displayName"?: string;
    /**
     * This is an automatic identifier generated by the system which is easier for human comprehension.
     */
    "requestId"?: string;
    /**
     * Summary comment by the operator creating the access request.
     */
    "reasonSummary": string;
    /**
     * The OCID of the OCI Notification topic to publish messages related to this privileged api request.
     */
    "notificationTopicId"?: string;
    /**
     * List of Users who has created this privilegedApiRequest.
     *
     */
    "requestedBy"?: Array<string>;
    /**
     * resourceName for which the PrivilegedApiRequest is applicable
     */
    "resourceName"?: string;
    /**
     * The OCID of the target resource associated with the access request. The operator raises an access request to get approval to access the target resource.
     *
     */
    "resourceId": string;
    /**
     * The subresource names requested for approval.
     */
    "subResourceNameList"?: Array<string>;
    /**
     * The OCID of the compartment that contains the access request.
     */
    "compartmentId"?: string;
    /**
     * resourceType for which the AccessRequest is applicable
     */
    "resourceType"?: string;
    /**
     * entityType of resource for which the AccessRequest is applicable
     */
    "entityType"?: string;
    /**
     * List of api names, attributes for which approval is sought by the user.
     *
     */
    "privilegedOperationList"?: Array<model.PrivilegedApiRequestOperationDetails>;
    /**
     * Reason in Detail for which the operator is requesting access on the target resource.
     */
    "reasonDetail"?: string;
    /**
     * Priority assigned to the access request by the operator
     */
    "severity"?: model.PrivilegedApiRequestSeverity;
    /**
     * Duration in hours for which access is sought on the target resource. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "durationInHrs"?: number;
    /**
     * A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     *
     */
    "ticketNumbers"?: Array<string>;
    /**
     * The current state of the Access Request.
     */
    "state": PrivilegedApiRequest.State;
    /**
     * A message that describes the current state of the PrivilegedApiControl in more detail. For example,
     * can be used to provide actionable information for a resource in the Failed state.
     *
     */
    "stateDetails"?: string;
    /**
     * The current state of the PrivilegedApiRequest.
     */
    "lifecycleState"?: PrivilegedApiRequest.LifecycleState;
    /**
     * more in detail about the lifeCycleState.
     */
    "lifecycleDetails"?: string;
    /**
     * Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     *
     */
    "timeCreated"?: Date;
    /**
     * Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     *
     */
    "timeUpdated"?: Date;
    /**
     * The comment entered by the operator while closing the request.
     */
    "closureComment"?: string;
    /**
     * The OCID of the privilegedApi control governing the target resource.
     */
    "privilegedApiControlId"?: string;
    /**
     * Name of the privilegedApi control governing the target resource.
     */
    "privilegedApiControlName"?: string;
    /**
     * Number of approvers required to approve an privilegedApi request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "numberOfApproversRequired"?: number;
    /**
     * Contains the approver details who have approved the privilegedApi Request during the initial request.
     */
    "approverDetails"?: Array<model.ApproverDetail>;
    /**
     * Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     *
     */
    "timeRequestedForFutureAccess"?: Date;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Department\": \"Finance\"}}
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
  *
      */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * System tags for this resource. Each key is predefined and scoped to a namespace.
  * <p>
  Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
  *
      */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace PrivilegedApiRequest {
    enum State {
        Created = "CREATED",
        ApprovalWaiting = "APPROVAL_WAITING",
        Approved = "APPROVED",
        ApprovedForFuture = "APPROVED_FOR_FUTURE",
        Rejected = "REJECTED",
        Deployed = "DEPLOYED",
        DeployFailed = "DEPLOY_FAILED",
        CloseFailed = "CLOSE_FAILED",
        RevokeFailed = "REVOKE_FAILED",
        ExpiryFailed = "EXPIRY_FAILED",
        Revoking = "REVOKING",
        Revoked = "REVOKED",
        Closing = "CLOSING",
        Closed = "CLOSED",
        Expired = "EXPIRED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Waiting = "WAITING",
        Failed = "FAILED",
        Succeeded = "SUCCEEDED",
        Canceling = "CANCELING",
        Canceled = "CANCELED",
        NeedsAttention = "NEEDS_ATTENTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: PrivilegedApiRequest): object;
    function getDeserializedJsonObj(obj: PrivilegedApiRequest): object;
}
