/**
 * Resource Manager API
 * Use the Resource Manager API to automate deployment and operations for all Oracle Cloud Infrastructure resources.
Using the infrastructure-as-code (IaC) model, the service is based on Terraform, an open source industry standard that lets DevOps engineers develop and deploy their infrastructure anywhere.
For more information, see
[the Resource Manager documentation](https://docs.oracle.com/iaas/Content/ResourceManager/home.htm).

 * OpenAPI spec version: 20180917
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { ResourceManagerWaiter } from "./resourcemanager-waiter";
declare const Breaker: any;
export declare enum ResourceManagerApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ResourceManagerClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ResourceManagerWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ResourceManagerWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ResourceManagerWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ResourceManagerWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Indicates the intention to cancel the specified job.
     * Cancellation of the job is not immediate, and may be delayed,
     * or may not happen at all.
     * You can optionally choose forced cancellation by setting `isForced` to true.
     * A forced cancellation can result in an incorrect state file.
     * For example, the state file might not reflect the exact state of the provisioned resources.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelJobRequest
     * @return CancelJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CancelJob.ts.html |here} to see how to use CancelJob API.
     */
    cancelJob(cancelJobRequest: requests.CancelJobRequest): Promise<responses.CancelJobResponse>;
    /**
     * Moves a configuration source provider into a different compartment within the same tenancy.
     * For information about moving resources between compartments, see
     * [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeConfigurationSourceProviderCompartmentRequest
     * @return ChangeConfigurationSourceProviderCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ChangeConfigurationSourceProviderCompartment.ts.html |here} to see how to use ChangeConfigurationSourceProviderCompartment API.
     */
    changeConfigurationSourceProviderCompartment(changeConfigurationSourceProviderCompartmentRequest: requests.ChangeConfigurationSourceProviderCompartmentRequest): Promise<responses.ChangeConfigurationSourceProviderCompartmentResponse>;
    /**
     * Moves a private endpoint to a different compartment within the same tenancy.
     * For information about moving resources between compartments, see
     * [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangePrivateEndpointCompartmentRequest
     * @return ChangePrivateEndpointCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ChangePrivateEndpointCompartment.ts.html |here} to see how to use ChangePrivateEndpointCompartment API.
     */
    changePrivateEndpointCompartment(changePrivateEndpointCompartmentRequest: requests.ChangePrivateEndpointCompartmentRequest): Promise<responses.ChangePrivateEndpointCompartmentResponse>;
    /**
     * Moves a stack (and its associated jobs) into a different compartment within the same tenancy.
     * For information about moving resources between compartments, see
     * [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeStackCompartmentRequest
     * @return ChangeStackCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ChangeStackCompartment.ts.html |here} to see how to use ChangeStackCompartment API.
     */
    changeStackCompartment(changeStackCompartmentRequest: requests.ChangeStackCompartmentRequest): Promise<responses.ChangeStackCompartmentResponse>;
    /**
     * Moves a template into a different compartment within the same tenancy.
     * For information about moving resources between compartments, see
     * [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeTemplateCompartmentRequest
     * @return ChangeTemplateCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ChangeTemplateCompartment.ts.html |here} to see how to use ChangeTemplateCompartment API.
     */
    changeTemplateCompartment(changeTemplateCompartmentRequest: requests.ChangeTemplateCompartmentRequest): Promise<responses.ChangeTemplateCompartmentResponse>;
    /**
     * Creates a configuration source provider in the specified compartment.
     * For more information, see
     * [To create a configuration source provider](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/managingconfigurationsourceproviders.htm#CreateConfigurationSourceProvider).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateConfigurationSourceProviderRequest
     * @return CreateConfigurationSourceProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CreateConfigurationSourceProvider.ts.html |here} to see how to use CreateConfigurationSourceProvider API.
     */
    createConfigurationSourceProvider(createConfigurationSourceProviderRequest: requests.CreateConfigurationSourceProviderRequest): Promise<responses.CreateConfigurationSourceProviderResponse>;
    /**
     * Creates a job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateJobRequest
     * @return CreateJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CreateJob.ts.html |here} to see how to use CreateJob API.
     */
    createJob(createJobRequest: requests.CreateJobRequest): Promise<responses.CreateJobResponse>;
    /**
     * Creates a private endpoint in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreatePrivateEndpointRequest
     * @return CreatePrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CreatePrivateEndpoint.ts.html |here} to see how to use CreatePrivateEndpoint API.
     */
    createPrivateEndpoint(createPrivateEndpointRequest: requests.CreatePrivateEndpointRequest): Promise<responses.CreatePrivateEndpointResponse>;
    /**
     * Creates a stack in the specified compartment.
     * You can create a stack from a Terraform configuration.
     * The Terraform configuration can be directly uploaded or referenced from a source code control system.
     * You can also create a stack from an existing compartment, which generates a Terraform configuration.
     * You can also upload the Terraform configuration from an Object Storage bucket.
     * For more information, see
     * [Creating Stacks](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/create-stack.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateStackRequest
     * @return CreateStackResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CreateStack.ts.html |here} to see how to use CreateStack API.
     */
    createStack(createStackRequest: requests.CreateStackRequest): Promise<responses.CreateStackResponse>;
    /**
     * Creates a private template in the specified compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateTemplateRequest
     * @return CreateTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/CreateTemplate.ts.html |here} to see how to use CreateTemplate API.
     */
    createTemplate(createTemplateRequest: requests.CreateTemplateRequest): Promise<responses.CreateTemplateResponse>;
    /**
     * Deletes the specified configuration source provider.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteConfigurationSourceProviderRequest
     * @return DeleteConfigurationSourceProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/DeleteConfigurationSourceProvider.ts.html |here} to see how to use DeleteConfigurationSourceProvider API.
     */
    deleteConfigurationSourceProvider(deleteConfigurationSourceProviderRequest: requests.DeleteConfigurationSourceProviderRequest): Promise<responses.DeleteConfigurationSourceProviderResponse>;
    /**
     * Deletes the specified private endpoint.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeletePrivateEndpointRequest
     * @return DeletePrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/DeletePrivateEndpoint.ts.html |here} to see how to use DeletePrivateEndpoint API.
     */
    deletePrivateEndpoint(deletePrivateEndpointRequest: requests.DeletePrivateEndpointRequest): Promise<responses.DeletePrivateEndpointResponse>;
    /**
     * Deletes the specified stack.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteStackRequest
     * @return DeleteStackResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/DeleteStack.ts.html |here} to see how to use DeleteStack API.
     */
    deleteStack(deleteStackRequest: requests.DeleteStackRequest): Promise<responses.DeleteStackResponse>;
    /**
     * Deletes the specified template.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteTemplateRequest
     * @return DeleteTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/DeleteTemplate.ts.html |here} to see how to use DeleteTemplate API.
     */
    deleteTemplate(deleteTemplateRequest: requests.DeleteTemplateRequest): Promise<responses.DeleteTemplateResponse>;
    /**
     * Checks drift status for the specified stack.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DetectStackDriftRequest
     * @return DetectStackDriftResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/DetectStackDrift.ts.html |here} to see how to use DetectStackDrift API.
     */
    detectStackDrift(detectStackDriftRequest: requests.DetectStackDriftRequest): Promise<responses.DetectStackDriftResponse>;
    /**
     * Gets the properties of the specified configuration source provider.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConfigurationSourceProviderRequest
     * @return GetConfigurationSourceProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetConfigurationSourceProvider.ts.html |here} to see how to use GetConfigurationSourceProvider API.
     */
    getConfigurationSourceProvider(getConfigurationSourceProviderRequest: requests.GetConfigurationSourceProviderRequest): Promise<responses.GetConfigurationSourceProviderResponse>;
    /**
     * Gets the properties of the specified job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobRequest
     * @return GetJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJob.ts.html |here} to see how to use GetJob API.
     */
    getJob(getJobRequest: requests.GetJobRequest): Promise<responses.GetJobResponse>;
    /**
     * Returns the Terraform detailed log content for the specified job in plain text. [Learn about Terraform detailed log.](https://www.terraform.io/docs/internals/debugging.html)
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobDetailedLogContentRequest
     * @return GetJobDetailedLogContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobDetailedLogContent.ts.html |here} to see how to use GetJobDetailedLogContent API.
     */
    getJobDetailedLogContent(getJobDetailedLogContentRequest: requests.GetJobDetailedLogContentRequest): Promise<responses.GetJobDetailedLogContentResponse>;
    /**
     * Returns console log entries for the specified job in JSON format.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobLogsRequest
     * @return GetJobLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobLogs.ts.html |here} to see how to use GetJobLogs API.
     */
    getJobLogs(getJobLogsRequest: requests.GetJobLogsRequest): Promise<responses.GetJobLogsResponse>;
    /**
     * NOTE: This function is deprecated in favor of getJobLogsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LogEntry objects
     * contained in responses from the getJobLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllJobLogs(request: requests.GetJobLogsRequest): AsyncIterableIterator<model.LogEntry>;
    /**
     * NOTE: This function is deprecated in favor of getJobLogsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the getJobLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllJobLogsResponses(request: requests.GetJobLogsRequest): AsyncIterableIterator<responses.GetJobLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LogEntry objects
     * contained in responses from the getJobLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getJobLogsRecordIterator(request: requests.GetJobLogsRequest): AsyncIterableIterator<model.LogEntry>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the getJobLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getJobLogsResponseIterator(request: requests.GetJobLogsRequest): AsyncIterableIterator<responses.GetJobLogsResponse>;
    /**
     * Returns the raw log file for the specified job in text format.
     * The file includes a maximum of 100,000 log entries.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobLogsContentRequest
     * @return GetJobLogsContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobLogsContent.ts.html |here} to see how to use GetJobLogsContent API.
     */
    getJobLogsContent(getJobLogsContentRequest: requests.GetJobLogsContentRequest): Promise<responses.GetJobLogsContentResponse>;
    /**
     * Returns the Terraform configuration for the specified job in zip format.
     * If no zip file is found, returns an error.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobTfConfigRequest
     * @return GetJobTfConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobTfConfig.ts.html |here} to see how to use GetJobTfConfig API.
     */
    getJobTfConfig(getJobTfConfigRequest: requests.GetJobTfConfigRequest): Promise<responses.GetJobTfConfigResponse>;
    /**
     * Returns the output of the specified Terraform plan job in binary or JSON format.
     * For information about running Terraform plan jobs, see
     * [Creating Plan Jobs](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/create-job.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobTfPlanRequest
     * @return GetJobTfPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobTfPlan.ts.html |here} to see how to use GetJobTfPlan API.
     */
    getJobTfPlan(getJobTfPlanRequest: requests.GetJobTfPlanRequest): Promise<responses.GetJobTfPlanResponse>;
    /**
     * Returns the Terraform state for the specified job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetJobTfStateRequest
     * @return GetJobTfStateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetJobTfState.ts.html |here} to see how to use GetJobTfState API.
     */
    getJobTfState(getJobTfStateRequest: requests.GetJobTfStateRequest): Promise<responses.GetJobTfStateResponse>;
    /**
     * Gets the specified private endpoint.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetPrivateEndpointRequest
     * @return GetPrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetPrivateEndpoint.ts.html |here} to see how to use GetPrivateEndpoint API.
     */
    getPrivateEndpoint(getPrivateEndpointRequest: requests.GetPrivateEndpointRequest): Promise<responses.GetPrivateEndpointResponse>;
    /**
     * Gets the reachable, or alternative, IP address for a nonpublic IP address that is associated with the private endpoint.
     * Resource Manager uses this IP address to connect to nonpublic resources through the associated private endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetReachableIpRequest
     * @return GetReachableIpResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetReachableIp.ts.html |here} to see how to use GetReachableIp API.
     */
    getReachableIp(getReachableIpRequest: requests.GetReachableIpRequest): Promise<responses.GetReachableIpResponse>;
    /**
     * Gets the specified stack.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetStackRequest
     * @return GetStackResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetStack.ts.html |here} to see how to use GetStack API.
     */
    getStack(getStackRequest: requests.GetStackRequest): Promise<responses.GetStackResponse>;
    /**
     * Returns the Terraform configuration file for the specified stack in zip format.
     * Returns an error if no zip file is found.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetStackTfConfigRequest
     * @return GetStackTfConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetStackTfConfig.ts.html |here} to see how to use GetStackTfConfig API.
     */
    getStackTfConfig(getStackTfConfigRequest: requests.GetStackTfConfigRequest): Promise<responses.GetStackTfConfigResponse>;
    /**
     * Returns the Terraform state for the specified stack.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetStackTfStateRequest
     * @return GetStackTfStateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetStackTfState.ts.html |here} to see how to use GetStackTfState API.
     */
    getStackTfState(getStackTfStateRequest: requests.GetStackTfStateRequest): Promise<responses.GetStackTfStateResponse>;
    /**
     * Gets the specified template.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTemplateRequest
     * @return GetTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetTemplate.ts.html |here} to see how to use GetTemplate API.
     */
    getTemplate(getTemplateRequest: requests.GetTemplateRequest): Promise<responses.GetTemplateResponse>;
    /**
     * Returns the Terraform logo file in .logo format for the specified template.
     * Returns an error if no logo file is found.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTemplateLogoRequest
     * @return GetTemplateLogoResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetTemplateLogo.ts.html |here} to see how to use GetTemplateLogo API.
     */
    getTemplateLogo(getTemplateLogoRequest: requests.GetTemplateLogoRequest): Promise<responses.GetTemplateLogoResponse>;
    /**
     * Returns the Terraform configuration file in zip format for the specified template.
     * Returns an error if no zip file is found.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetTemplateTfConfigRequest
     * @return GetTemplateTfConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetTemplateTfConfig.ts.html |here} to see how to use GetTemplateTfConfig API.
     */
    getTemplateTfConfig(getTemplateTfConfigRequest: requests.GetTemplateTfConfigRequest): Promise<responses.GetTemplateTfConfigResponse>;
    /**
     * Returns the specified work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists configuration source providers according to the specified filter.
     * - For `compartmentId`, lists all configuration source providers in the matching compartment.
     * - For `configurationSourceProviderId`, lists the matching configuration source provider.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListConfigurationSourceProvidersRequest
     * @return ListConfigurationSourceProvidersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListConfigurationSourceProviders.ts.html |here} to see how to use ListConfigurationSourceProviders API.
     */
    listConfigurationSourceProviders(listConfigurationSourceProvidersRequest: requests.ListConfigurationSourceProvidersRequest): Promise<responses.ListConfigurationSourceProvidersResponse>;
    /**
     * Gets the list of resources associated with the specified job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListJobAssociatedResourcesRequest
     * @return ListJobAssociatedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListJobAssociatedResources.ts.html |here} to see how to use ListJobAssociatedResources API.
     */
    listJobAssociatedResources(listJobAssociatedResourcesRequest: requests.ListJobAssociatedResourcesRequest): Promise<responses.ListJobAssociatedResourcesResponse>;
    /**
     * Gets the list of outputs associated with the specified job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListJobOutputsRequest
     * @return ListJobOutputsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListJobOutputs.ts.html |here} to see how to use ListJobOutputs API.
     */
    listJobOutputs(listJobOutputsRequest: requests.ListJobOutputsRequest): Promise<responses.ListJobOutputsResponse>;
    /**
       * Lists jobs according to the specified filter. By default, the list is ordered by time created.
  * <p>
  - To list all jobs in a stack, provide the stack [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
  * - To list all jobs in a compartment, provide the compartment [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
  * - To return a specific job, provide the job [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm). (Equivalent to {@link #getStack(GetStackRequest) getStack}.)
  *
       * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
       * @param ListJobsRequest
       * @return ListJobsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListJobs.ts.html |here} to see how to use ListJobs API.
       */
    listJobs(listJobsRequest: requests.ListJobsRequest): Promise<responses.ListJobsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listJobsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.JobSummary objects
     * contained in responses from the listJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllJobs(request: requests.ListJobsRequest): AsyncIterableIterator<model.JobSummary>;
    /**
     * NOTE: This function is deprecated in favor of listJobsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllJobsResponses(request: requests.ListJobsRequest): AsyncIterableIterator<responses.ListJobsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.JobSummary objects
     * contained in responses from the listJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listJobsRecordIterator(request: requests.ListJobsRequest): AsyncIterableIterator<model.JobSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listJobsResponseIterator(request: requests.ListJobsRequest): AsyncIterableIterator<responses.ListJobsResponse>;
    /**
     * Lists private endpoints according to the specified filter.
     * - For `compartmentId`, lists all private endpoints in the matching compartment.
     * - For `privateEndpointId`, lists the matching private endpoint.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPrivateEndpointsRequest
     * @return ListPrivateEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListPrivateEndpoints.ts.html |here} to see how to use ListPrivateEndpoints API.
     */
    listPrivateEndpoints(listPrivateEndpointsRequest: requests.ListPrivateEndpointsRequest): Promise<responses.ListPrivateEndpointsResponse>;
    /**
     * Returns a list of supported services for [Resource Discovery](https://docs.oracle.com/iaas/Content/ResourceManager/Concepts/resource-discovery.htm).
     * For reference on service names, see the [Terraform provider documentation](https://www.terraform.io/docs/providers/oci/guides/resource_discovery.html#services).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListResourceDiscoveryServicesRequest
     * @return ListResourceDiscoveryServicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListResourceDiscoveryServices.ts.html |here} to see how to use ListResourceDiscoveryServices API.
     */
    listResourceDiscoveryServices(listResourceDiscoveryServicesRequest: requests.ListResourceDiscoveryServicesRequest): Promise<responses.ListResourceDiscoveryServicesResponse>;
    /**
     * Gets the list of resources associated with the specified stack.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListStackAssociatedResourcesRequest
     * @return ListStackAssociatedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListStackAssociatedResources.ts.html |here} to see how to use ListStackAssociatedResources API.
     */
    listStackAssociatedResources(listStackAssociatedResourcesRequest: requests.ListStackAssociatedResourcesRequest): Promise<responses.ListStackAssociatedResourcesResponse>;
    /**
     * Lists drift status details for each resource defined in the specified stack.
     * The drift status details for a given resource indicate differences, if any, between the actual state
     * and the expected (defined) state for that resource.
     * The drift status details correspond to the specified work request (`workRequestId`).
     * If no work request is specified, then the drift status details correspond to the latest completed work request for the stack.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListStackResourceDriftDetailsRequest
     * @return ListStackResourceDriftDetailsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListStackResourceDriftDetails.ts.html |here} to see how to use ListStackResourceDriftDetails API.
     */
    listStackResourceDriftDetails(listStackResourceDriftDetailsRequest: requests.ListStackResourceDriftDetailsRequest): Promise<responses.ListStackResourceDriftDetailsResponse>;
    /**
     * Lists stacks according to the specified filter.
     * - If called using the compartment ID, returns all stacks in the specified compartment.
     * - If called using the stack ID, returns the specified stack. (See also {@link #getStack(GetStackRequest) getStack}.)
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListStacksRequest
     * @return ListStacksResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListStacks.ts.html |here} to see how to use ListStacks API.
     */
    listStacks(listStacksRequest: requests.ListStacksRequest): Promise<responses.ListStacksResponse>;
    /**
     * NOTE: This function is deprecated in favor of listStacksRecordIterator function.
     * Creates a new async iterator which will iterate over the models.StackSummary objects
     * contained in responses from the listStacks operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllStacks(request: requests.ListStacksRequest): AsyncIterableIterator<model.StackSummary>;
    /**
     * NOTE: This function is deprecated in favor of listStacksResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listStacks operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllStacksResponses(request: requests.ListStacksRequest): AsyncIterableIterator<responses.ListStacksResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.StackSummary objects
     * contained in responses from the listStacks operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listStacksRecordIterator(request: requests.ListStacksRequest): AsyncIterableIterator<model.StackSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listStacks operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listStacksResponseIterator(request: requests.ListStacksRequest): AsyncIterableIterator<responses.ListStacksResponse>;
    /**
     * Lists template categories.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTemplateCategoriesRequest
     * @return ListTemplateCategoriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListTemplateCategories.ts.html |here} to see how to use ListTemplateCategories API.
     */
    listTemplateCategories(listTemplateCategoriesRequest: requests.ListTemplateCategoriesRequest): Promise<responses.ListTemplateCategoriesResponse>;
    /**
     * Lists templates according to the specified filter.
     * The attributes `compartmentId` and `templateCategoryId` are required unless `templateId` is specified.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTemplatesRequest
     * @return ListTemplatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListTemplates.ts.html |here} to see how to use ListTemplates API.
     */
    listTemplates(listTemplatesRequest: requests.ListTemplatesRequest): Promise<responses.ListTemplatesResponse>;
    /**
     * Returns a list of supported Terraform versions for use with stacks.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListTerraformVersionsRequest
     * @return ListTerraformVersionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListTerraformVersions.ts.html |here} to see how to use ListTerraformVersions API.
     */
    listTerraformVersions(listTerraformVersionsRequest: requests.ListTerraformVersionsRequest): Promise<responses.ListTerraformVersionsResponse>;
    /**
     * Returns a paginated list of errors for the specified work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestErrorsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsRecordIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<model.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestErrorsResponseIterator(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a paginated list of logs for the specified work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestLogsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsRecordIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<model.WorkRequestLogEntry>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestLogsResponseIterator(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in the specified compartment or for the specified resource.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Updates the properties of the specified configuration source provider.
     * For more information, see
     * [To edit a configuration source provider](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/managingconfigurationsourceproviders.htm#EditConfigurationSourceProvider).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateConfigurationSourceProviderRequest
     * @return UpdateConfigurationSourceProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/UpdateConfigurationSourceProvider.ts.html |here} to see how to use UpdateConfigurationSourceProvider API.
     */
    updateConfigurationSourceProvider(updateConfigurationSourceProviderRequest: requests.UpdateConfigurationSourceProviderRequest): Promise<responses.UpdateConfigurationSourceProviderResponse>;
    /**
     * Updates the specified job.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateJobRequest
     * @return UpdateJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/UpdateJob.ts.html |here} to see how to use UpdateJob API.
     */
    updateJob(updateJobRequest: requests.UpdateJobRequest): Promise<responses.UpdateJobResponse>;
    /**
     * Updates the specified private endpoint.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdatePrivateEndpointRequest
     * @return UpdatePrivateEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/UpdatePrivateEndpoint.ts.html |here} to see how to use UpdatePrivateEndpoint API.
     */
    updatePrivateEndpoint(updatePrivateEndpointRequest: requests.UpdatePrivateEndpointRequest): Promise<responses.UpdatePrivateEndpointResponse>;
    /**
     * Updates the specified stack.
     * Use `UpdateStack` when you update your Terraform configuration
     * and want your changes to be reflected in the execution plan.
     * For more information, see
     * [Updating Stacks](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/update-stack.htm).
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateStackRequest
     * @return UpdateStackResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/UpdateStack.ts.html |here} to see how to use UpdateStack API.
     */
    updateStack(updateStackRequest: requests.UpdateStackRequest): Promise<responses.UpdateStackResponse>;
    /**
     * Updates the specified template.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateTemplateRequest
     * @return UpdateTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/resourcemanager/UpdateTemplate.ts.html |here} to see how to use UpdateTemplate API.
     */
    updateTemplate(updateTemplateRequest: requests.UpdateTemplateRequest): Promise<responses.UpdateTemplateResponse>;
}
export {};
