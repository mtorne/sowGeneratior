/**
 * Resource Manager API
 * Use the Resource Manager API to automate deployment and operations for all Oracle Cloud Infrastructure resources.
Using the infrastructure-as-code (IaC) model, the service is based on Terraform, an open source industry standard that lets DevOps engineers develop and deploy their infrastructure anywhere.
For more information, see
[the Resource Manager documentation](https://docs.oracle.com/iaas/Content/ResourceManager/home.htm).

 * OpenAPI spec version: 20180917
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Location information about custom Terraform providers for a stack.
 * For more information, see [Custom Providers](https://docs.oracle.com/iaas/Content/ResourceManager/Concepts/resourcemanager.htm#features__custom-providers).
 * Note: Older stacks must be explicitly updated to use Terraform Registry ({@code isThirdPartyProviderExperienceEnabled=true}).
 * See {@link #updateStack(UpdateStackRequest) updateStack}. For more information, see
 * [Using Terraform Registry with Older Stacks](https://docs.oracle.com/iaas/Content/ResourceManager/Tasks/update-stack-tf-reg.htm).
 *
 */
export interface CustomTerraformProvider {
    /**
     * The name of the region that contains the bucket you want.
     * For information about regions, see [Regions and Availability Domains](https://docs.oracle.com/iaas/Content/General/Concepts/regions.htm).
     * Example: {@code us-phoenix-1}
     *
     */
    "region": string;
    /**
     * The Object Storage namespace that contains the bucket you want.
     * For information about Object Storage namespaces, see [Understanding Object Storage Namespaces](https://docs.oracle.com/iaas/Content/Object/Tasks/understandingnamespaces.htm).
     *
     */
    "namespace": string;
    /**
     * The name of the bucket that contains the binary files for the custom Terraform providers.
     * For information about buckets, see [Managing Buckets](https://docs.oracle.com/iaas/Content/Object/Tasks/managingbuckets.htm).
     *
     */
    "bucketName": string;
}
export declare namespace CustomTerraformProvider {
    function getJsonObj(obj: CustomTerraformProvider): object;
    function getDeserializedJsonObj(obj: CustomTerraformProvider): object;
}
