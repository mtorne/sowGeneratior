/**
 * Scanning API
 * Use the Vulnerability Scanning Service (VSS) API to manage scan recipes, targets, and reports. For more information, see [the Vulnerability Scanning documentation](https://docs.oracle.com/iaas/scanning/home.htm).
 * OpenAPI spec version: 20210215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of a scan vulnerability
 */
export interface VulnerabilitySummary {
    /**
     * ID of the vulnerability
     */
    "id": string;
    /**
     * Compartment ID of the vulnerability. Vulnerabilities with identical CVEs can exist in different compartments.
     */
    "compartmentId": string;
    /**
     * Reference to the vulnerability type's unique identifier. For CVE, this is the MITRE CVE ID
     */
    "vulnerabilityReference"?: string;
    /**
     * Severity of the vulnerability
     */
    "severity": model.ScanResultProblemSeverity;
    /**
     * State of the vulnerability
     */
    "state"?: model.ScanResultVulnerabilityState;
    /**
     * The description of CVE vulnerability
     */
    "cveDescription"?: string;
    /**
     * Vulnerability name
     */
    "name": string;
    /**
     * Date of scan result that most recently reported the vulnerability
     */
    "timeLastDetected": Date;
    /**
     * Date of scan result that first reported the vulnerability
     */
    "timeFirstDetected": Date;
    "impactedResourcesCount": model.ImpactedResourcesCount;
    /**
     * Specifies the type of Vulnerability
     */
    "vulnerabilityType": model.VulnerabilityType;
    /**
     * The current state of the resource.
     */
    "lifecycleState"?: model.LifecycleState;
}
export declare namespace VulnerabilitySummary {
    function getJsonObj(obj: VulnerabilitySummary): object;
    function getDeserializedJsonObj(obj: VulnerabilitySummary): object;
}
