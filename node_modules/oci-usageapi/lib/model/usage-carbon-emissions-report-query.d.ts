/**
 * Usage API
 * Use the Usage API to view your Oracle Cloud usage and costs. The API allows you to request data that meets the specified filter criteria, and to group that data by the chosen dimension. The Usage API is used by [Cost Analysis](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm), [Scheduled Reports](https://docs.oracle.com/iaas/Content/Billing/Concepts/scheduledreportoverview.htm), and [Carbon Emissions Analysis](https://docs.oracle.com/iaas/Content/General/Concepts/emissions-management.htm) in the Console. Also see [Using the Usage API](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm#cost_analysis_using_the_api) for more information.
 * OpenAPI spec version: 20200107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The request of the generated carbon emissions usage report.
 */
export interface UsageCarbonEmissionsReportQuery {
    /**
     * Tenant ID.
     */
    "tenantId": string;
    /**
     * The usage start time.
     */
    "timeUsageStarted"?: Date;
    /**
     * The usage end time.
     */
    "timeUsageEnded"?: Date;
    /**
     * Specifies the method used for emission calculation, such as POWER_BASED or SPEND_BASED
     */
    "emissionCalculationMethod"?: string;
    /**
     * Specifies the type of emission, such as MARKET_BASED or LOCATION_BASED.
     */
    "emissionType"?: string;
    /**
     * The carbon emission granularity. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation.
     */
    "granularity"?: string;
    /**
     * Specifies whether aggregated by time. If isAggregateByTime is true, all usage or costs over the query time period are summed.
     */
    "isAggregateByTime"?: boolean;
    /**
     * Specifies what to aggregate the result by.
     * For example:
     *   {@code [\"tagNamespace\", \"tagKey\", \"tagValue\", \"service\", \"skuName\", \"skuPartNumber\", \"unit\",
     *     \"compartmentName\", \"compartmentPath\", \"compartmentId\", \"platform\", \"region\", \"logicalAd\",
     *     \"resourceId\", \"tenantId\", \"tenantName\"]}
     *
     */
    "groupBy"?: Array<string>;
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list.
     * For example:
     *   {@code [{\"namespace\":\"oracle\", \"key\":\"createdBy\"]}
     *
     */
    "groupByTag"?: Array<model.Tag>;
    /**
     * The compartment depth level. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "compartmentDepth"?: number;
    "filter"?: model.Filter;
    /**
     * The user interface date range, for example, LAST_THREE_MONTHS. Overrides the timeUsageStarted and timeUsageEnded properties.
     */
    "dateRangeName"?: UsageCarbonEmissionsReportQuery.DateRangeName;
}
export declare namespace UsageCarbonEmissionsReportQuery {
    enum DateRangeName {
        LastTwoMonths = "LAST_TWO_MONTHS",
        LastThreeMonths = "LAST_THREE_MONTHS",
        LastSixMonths = "LAST_SIX_MONTHS",
        LastOneYear = "LAST_ONE_YEAR",
        Custom = "CUSTOM",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: UsageCarbonEmissionsReportQuery): object;
    function getDeserializedJsonObj(obj: UsageCarbonEmissionsReportQuery): object;
}
