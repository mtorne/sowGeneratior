/**
 * Usage API
 * Use the Usage API to view your Oracle Cloud usage and costs. The API allows you to request data that meets the specified filter criteria, and to group that data by the chosen dimension. The Usage API is used by [Cost Analysis](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm), [Scheduled Reports](https://docs.oracle.com/iaas/Content/Billing/Concepts/scheduledreportoverview.htm), and [Carbon Emissions Analysis](https://docs.oracle.com/iaas/Content/General/Concepts/emissions-management.htm) in the Console. Also see [Using the Usage API](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm#cost_analysis_using_the_api) for more information.
 * OpenAPI spec version: 20200107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The carbon emission usage store result.
 */
export interface UsageCarbonEmissionSummary {
    /**
     * The tenancy OCID.
     */
    "tenantId"?: string;
    /**
     * The tenancy name.
     */
    "tenantName"?: string;
    /**
     * The compartment OCID.
     */
    "compartmentId"?: string;
    /**
     * The compartment path, starting from root.
     */
    "compartmentPath"?: string;
    /**
     * The compartment name.
     */
    "compartmentName"?: string;
    /**
     * The service name that is incurring the cost.
     */
    "service"?: string;
    /**
     * The resource name that is incurring the cost.
     */
    "resourceName"?: string;
    /**
     * The resource OCID that is incurring the cost.
     */
    "resourceId"?: string;
    /**
     * The region of the usage.
     */
    "region"?: string;
    /**
     * The availability domain of the usage.
     */
    "ad"?: string;
    /**
     * The SKU part number.
     */
    "skuPartNumber"?: string;
    /**
     * The SKU friendly name.
     */
    "skuName"?: string;
    /**
     * Platform for the cost.
     */
    "platform"?: string;
    /**
     * The usage start time.
     */
    "timeUsageStarted": Date;
    /**
     * The usage end time.
     */
    "timeUsageEnded": Date;
    /**
     * The carbon emission usage in MTCO2 units. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "computedCarbonEmission": number;
    /**
     * Specifies the approach for calculating carbon emissions, supports both SPEND_BASED (based on expenditure data) and POWER_BASED (based on power consumption, newly introduced in the metering pipeline)
     */
    "emissionCalculationMethod": string;
    /**
     * The emission type, such as MARKET_BASED or LOCATION_BASED.
     */
    "emissionType"?: string;
    /**
     * The subscription ID.
     */
    "subscriptionId"?: string;
    /**
     * For grouping, a tag definition. For filtering, a definition and key.
     */
    "tags"?: Array<model.Tag>;
}
export declare namespace UsageCarbonEmissionSummary {
    function getJsonObj(obj: UsageCarbonEmissionSummary): object;
    function getDeserializedJsonObj(obj: UsageCarbonEmissionSummary): object;
}
