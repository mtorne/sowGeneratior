/**
 * Usage API
 * Use the Usage API to view your Oracle Cloud usage and costs. The API allows you to request data that meets the specified filter criteria, and to group that data by the chosen dimension. The Usage API is used by [Cost Analysis](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm), [Scheduled Reports](https://docs.oracle.com/iaas/Content/Billing/Concepts/scheduledreportoverview.htm), and [Carbon Emissions Analysis](https://docs.oracle.com/iaas/Content/General/Concepts/emissions-management.htm) in the Console. Also see [Using the Usage API](https://docs.oracle.com/iaas/Content/Billing/Concepts/costanalysisoverview.htm#cost_analysis_using_the_api) for more information.
 * OpenAPI spec version: 20200107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { UsageapiWaiter } from "./usageapi-waiter";
declare const Breaker: any;
export declare enum UsageapiApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class UsageapiClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": UsageapiWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new UsageapiWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): UsageapiWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): UsageapiWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Returns the created custom table.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCustomTableRequest
     * @return CreateCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/CreateCustomTable.ts.html |here} to see how to use CreateCustomTable API.
     */
    createCustomTable(createCustomTableRequest: requests.CreateCustomTableRequest): Promise<responses.CreateCustomTableResponse>;
    /**
     * Creates a list of email recipients that can receive usage statements for the subscription.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateEmailRecipientsGroupRequest
     * @return CreateEmailRecipientsGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/CreateEmailRecipientsGroup.ts.html |here} to see how to use CreateEmailRecipientsGroup API.
     */
    createEmailRecipientsGroup(createEmailRecipientsGroupRequest: requests.CreateEmailRecipientsGroupRequest): Promise<responses.CreateEmailRecipientsGroupResponse>;
    /**
     * Returns the created query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateQueryRequest
     * @return CreateQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/CreateQuery.ts.html |here} to see how to use CreateQuery API.
     */
    createQuery(createQueryRequest: requests.CreateQueryRequest): Promise<responses.CreateQueryResponse>;
    /**
     * Returns the created schedule.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateScheduleRequest
     * @return CreateScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/CreateSchedule.ts.html |here} to see how to use CreateSchedule API.
     */
    createSchedule(createScheduleRequest: requests.CreateScheduleRequest): Promise<responses.CreateScheduleResponse>;
    /**
     * Returns the created carbon emissions usage query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateUsageCarbonEmissionsQueryRequest
     * @return CreateUsageCarbonEmissionsQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/CreateUsageCarbonEmissionsQuery.ts.html |here} to see how to use CreateUsageCarbonEmissionsQuery API.
     */
    createUsageCarbonEmissionsQuery(createUsageCarbonEmissionsQueryRequest: requests.CreateUsageCarbonEmissionsQueryRequest): Promise<responses.CreateUsageCarbonEmissionsQueryResponse>;
    /**
     * Delete a saved custom table by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCustomTableRequest
     * @return DeleteCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/DeleteCustomTable.ts.html |here} to see how to use DeleteCustomTable API.
     */
    deleteCustomTable(deleteCustomTableRequest: requests.DeleteCustomTableRequest): Promise<responses.DeleteCustomTableResponse>;
    /**
     * Deletes the email recipients group for the usage statement subscription.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteEmailRecipientsGroupRequest
     * @return DeleteEmailRecipientsGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/DeleteEmailRecipientsGroup.ts.html |here} to see how to use DeleteEmailRecipientsGroup API.
     */
    deleteEmailRecipientsGroup(deleteEmailRecipientsGroupRequest: requests.DeleteEmailRecipientsGroupRequest): Promise<responses.DeleteEmailRecipientsGroupResponse>;
    /**
     * Delete a saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteQueryRequest
     * @return DeleteQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/DeleteQuery.ts.html |here} to see how to use DeleteQuery API.
     */
    deleteQuery(deleteQueryRequest: requests.DeleteQueryRequest): Promise<responses.DeleteQueryResponse>;
    /**
     * Delete a saved scheduled report by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteScheduleRequest
     * @return DeleteScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/DeleteSchedule.ts.html |here} to see how to use DeleteSchedule API.
     */
    deleteSchedule(deleteScheduleRequest: requests.DeleteScheduleRequest): Promise<responses.DeleteScheduleResponse>;
    /**
     * Delete a carbon emissions usage saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteUsageCarbonEmissionsQueryRequest
     * @return DeleteUsageCarbonEmissionsQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/DeleteUsageCarbonEmissionsQuery.ts.html |here} to see how to use DeleteUsageCarbonEmissionsQuery API.
     */
    deleteUsageCarbonEmissionsQuery(deleteUsageCarbonEmissionsQueryRequest: requests.DeleteUsageCarbonEmissionsQueryRequest): Promise<responses.DeleteUsageCarbonEmissionsQueryResponse>;
    /**
     * Returns the saved custom table.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCustomTableRequest
     * @return GetCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetCustomTable.ts.html |here} to see how to use GetCustomTable API.
     */
    getCustomTable(getCustomTableRequest: requests.GetCustomTableRequest): Promise<responses.GetCustomTableResponse>;
    /**
     * Returns the saved usage statement email recipients group.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetEmailRecipientsGroupRequest
     * @return GetEmailRecipientsGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetEmailRecipientsGroup.ts.html |here} to see how to use GetEmailRecipientsGroup API.
     */
    getEmailRecipientsGroup(getEmailRecipientsGroupRequest: requests.GetEmailRecipientsGroupRequest): Promise<responses.GetEmailRecipientsGroupResponse>;
    /**
     * Returns the saved query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetQueryRequest
     * @return GetQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetQuery.ts.html |here} to see how to use GetQuery API.
     */
    getQuery(getQueryRequest: requests.GetQueryRequest): Promise<responses.GetQueryResponse>;
    /**
     * Returns the saved schedule.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetScheduleRequest
     * @return GetScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetSchedule.ts.html |here} to see how to use GetSchedule API.
     */
    getSchedule(getScheduleRequest: requests.GetScheduleRequest): Promise<responses.GetScheduleResponse>;
    /**
     * Returns the saved schedule run.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetScheduledRunRequest
     * @return GetScheduledRunResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetScheduledRun.ts.html |here} to see how to use GetScheduledRun API.
     */
    getScheduledRun(getScheduledRunRequest: requests.GetScheduledRunRequest): Promise<responses.GetScheduledRunResponse>;
    /**
     * Returns the carbon emissions usage saved query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetUsageCarbonEmissionsQueryRequest
     * @return GetUsageCarbonEmissionsQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/GetUsageCarbonEmissionsQuery.ts.html |here} to see how to use GetUsageCarbonEmissionsQuery API.
     */
    getUsageCarbonEmissionsQuery(getUsageCarbonEmissionsQueryRequest: requests.GetUsageCarbonEmissionsQueryRequest): Promise<responses.GetUsageCarbonEmissionsQueryResponse>;
    /**
     * Returns the saved custom table list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCustomTablesRequest
     * @return ListCustomTablesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListCustomTables.ts.html |here} to see how to use ListCustomTables API.
     */
    listCustomTables(listCustomTablesRequest: requests.ListCustomTablesRequest): Promise<responses.ListCustomTablesResponse>;
    /**
     * Returns the saved usage statement email recipients group.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListEmailRecipientsGroupsRequest
     * @return ListEmailRecipientsGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListEmailRecipientsGroups.ts.html |here} to see how to use ListEmailRecipientsGroups API.
     */
    listEmailRecipientsGroups(listEmailRecipientsGroupsRequest: requests.ListEmailRecipientsGroupsRequest): Promise<responses.ListEmailRecipientsGroupsResponse>;
    /**
     * Returns the saved query list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListQueriesRequest
     * @return ListQueriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListQueries.ts.html |here} to see how to use ListQueries API.
     */
    listQueries(listQueriesRequest: requests.ListQueriesRequest): Promise<responses.ListQueriesResponse>;
    /**
     * Returns the schedule history list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListScheduledRunsRequest
     * @return ListScheduledRunsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListScheduledRuns.ts.html |here} to see how to use ListScheduledRuns API.
     */
    listScheduledRuns(listScheduledRunsRequest: requests.ListScheduledRunsRequest): Promise<responses.ListScheduledRunsResponse>;
    /**
     * Returns the saved schedule list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSchedulesRequest
     * @return ListSchedulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListSchedules.ts.html |here} to see how to use ListSchedules API.
     */
    listSchedules(listSchedulesRequest: requests.ListSchedulesRequest): Promise<responses.ListSchedulesResponse>;
    /**
     * Returns the carbon emissions usage saved query list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListUsageCarbonEmissionsQueriesRequest
     * @return ListUsageCarbonEmissionsQueriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/ListUsageCarbonEmissionsQueries.ts.html |here} to see how to use ListUsageCarbonEmissionsQueries API.
     */
    listUsageCarbonEmissionsQueries(listUsageCarbonEmissionsQueriesRequest: requests.ListUsageCarbonEmissionsQueriesRequest): Promise<responses.ListUsageCarbonEmissionsQueriesResponse>;
    /**
     * Returns the average carbon emissions summary by SKU.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestAverageCarbonEmissionRequest
     * @return RequestAverageCarbonEmissionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestAverageCarbonEmission.ts.html |here} to see how to use RequestAverageCarbonEmission API.
     */
    requestAverageCarbonEmission(requestAverageCarbonEmissionRequest: requests.RequestAverageCarbonEmissionRequest): Promise<responses.RequestAverageCarbonEmissionResponse>;
    /**
     * Returns the clean energy usage summary by region.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestCleanEnergyUsageRequest
     * @return RequestCleanEnergyUsageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestCleanEnergyUsage.ts.html |here} to see how to use RequestCleanEnergyUsage API.
     */
    requestCleanEnergyUsage(requestCleanEnergyUsageRequest: requests.RequestCleanEnergyUsageRequest): Promise<responses.RequestCleanEnergyUsageResponse>;
    /**
     * Returns the configurations list for the UI drop-down list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedConfigurationsRequest
     * @return RequestSummarizedConfigurationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestSummarizedConfigurations.ts.html |here} to see how to use RequestSummarizedConfigurations API.
     */
    requestSummarizedConfigurations(requestSummarizedConfigurationsRequest: requests.RequestSummarizedConfigurationsRequest): Promise<responses.RequestSummarizedConfigurationsResponse>;
    /**
     * Returns usage for the given account.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedUsagesRequest
     * @return RequestSummarizedUsagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestSummarizedUsages.ts.html |here} to see how to use RequestSummarizedUsages API.
     */
    requestSummarizedUsages(requestSummarizedUsagesRequest: requests.RequestSummarizedUsagesRequest): Promise<responses.RequestSummarizedUsagesResponse>;
    /**
     * Returns the configuration list for the Console's carbon emission user interface drop-down list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestUsageCarbonEmissionConfigRequest
     * @return RequestUsageCarbonEmissionConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestUsageCarbonEmissionConfig.ts.html |here} to see how to use RequestUsageCarbonEmissionConfig API.
     */
    requestUsageCarbonEmissionConfig(requestUsageCarbonEmissionConfigRequest: requests.RequestUsageCarbonEmissionConfigRequest): Promise<responses.RequestUsageCarbonEmissionConfigResponse>;
    /**
     * Returns carbon emission usage for the given account.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestUsageCarbonEmissionsRequest
     * @return RequestUsageCarbonEmissionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/RequestUsageCarbonEmissions.ts.html |here} to see how to use RequestUsageCarbonEmissions API.
     */
    requestUsageCarbonEmissions(requestUsageCarbonEmissionsRequest: requests.RequestUsageCarbonEmissionsRequest): Promise<responses.RequestUsageCarbonEmissionsResponse>;
    /**
     * Update a saved custom table by table ID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCustomTableRequest
     * @return UpdateCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/UpdateCustomTable.ts.html |here} to see how to use UpdateCustomTable API.
     */
    updateCustomTable(updateCustomTableRequest: requests.UpdateCustomTableRequest): Promise<responses.UpdateCustomTableResponse>;
    /**
     * Updates a saved email recipients group.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateEmailRecipientsGroupRequest
     * @return UpdateEmailRecipientsGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/UpdateEmailRecipientsGroup.ts.html |here} to see how to use UpdateEmailRecipientsGroup API.
     */
    updateEmailRecipientsGroup(updateEmailRecipientsGroupRequest: requests.UpdateEmailRecipientsGroupRequest): Promise<responses.UpdateEmailRecipientsGroupResponse>;
    /**
     * Update a saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateQueryRequest
     * @return UpdateQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/UpdateQuery.ts.html |here} to see how to use UpdateQuery API.
     */
    updateQuery(updateQueryRequest: requests.UpdateQueryRequest): Promise<responses.UpdateQueryResponse>;
    /**
     * Update a saved schedule.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateScheduleRequest
     * @return UpdateScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/UpdateSchedule.ts.html |here} to see how to use UpdateSchedule API.
     */
    updateSchedule(updateScheduleRequest: requests.UpdateScheduleRequest): Promise<responses.UpdateScheduleResponse>;
    /**
     * Update a carbon emissions usage saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateUsageCarbonEmissionsQueryRequest
     * @return UpdateUsageCarbonEmissionsQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/usageapi/UpdateUsageCarbonEmissionsQuery.ts.html |here} to see how to use UpdateUsageCarbonEmissionsQuery API.
     */
    updateUsageCarbonEmissionsQuery(updateUsageCarbonEmissionsQueryRequest: requests.UpdateUsageCarbonEmissionsQueryRequest): Promise<responses.UpdateUsageCarbonEmissionsQueryResponse>;
}
export {};
