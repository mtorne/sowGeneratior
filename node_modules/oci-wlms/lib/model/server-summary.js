"use strict";
/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerSummary = void 0;
var ServerSummary;
(function (ServerSummary) {
    let LatestPatchesStatus;
    (function (LatestPatchesStatus) {
        LatestPatchesStatus["OnLatestPatches"] = "ON_LATEST_PATCHES";
        LatestPatchesStatus["PatchingRequired"] = "PATCHING_REQUIRED";
        LatestPatchesStatus["Unknown"] = "UNKNOWN";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LatestPatchesStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(LatestPatchesStatus = ServerSummary.LatestPatchesStatus || (ServerSummary.LatestPatchesStatus = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ServerSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ServerSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(ServerSummary = exports.ServerSummary || (exports.ServerSummary = {}));
//# sourceMappingURL=server-summary.js.map