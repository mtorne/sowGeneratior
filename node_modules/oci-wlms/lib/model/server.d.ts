/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The server object that is returned by the API to get a specific server in a WebLogic domain.
 *
 */
export interface Server {
    /**
     * The unique identifier of the server.
     * <p>
     **Note:** Not an [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     */
    "id"?: string;
    /**
     * The name of the server.
     */
    "name": string;
    /**
     * Whether or not the server is an admin node.
     */
    "isAdmin": boolean;
    /**
     * The status of the server.
     */
    "status": string;
    /**
     * The restart order assigned to the server. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "restartOrder"?: number;
    /**
     * The middleware path on the server.
     */
    "middlewarePath"?: string;
    /**
     * The middleware type on the server.
     */
    "middlewareType"?: string;
    /**
     * The version of the WebLogic domain of the server
     */
    "weblogicVersion"?: string;
    /**
     * The JDK path on the server.
     */
    "jdkPath"?: string;
    /**
     * The JDK version on the server.
     */
    "jdkVersion"?: string;
    /**
     * The name of the WebLogic domain to which the server belongs.
     */
    "wlsDomainName"?: string;
    /**
     * The ID of the WebLogic domain to which the server belongs.
     */
    "wlsDomainId"?: string;
    /**
     * The path of the WebLogic domain to which the server belongs.
     */
    "wlsDomainPath"?: string;
    /**
     * Whether or not the server has installed the latest patches.
     */
    "latestPatchesStatus"?: Server.LatestPatchesStatus;
    /**
     * The patch readiness status of the server.
     */
    "patchReadinessStatus"?: model.PatchReadinessStatus;
    /**
     * The name of the server.
     */
    "hostName"?: string;
    /**
     * The managed instance ID of the server.
     */
    "managedInstanceId"?: string;
    /**
      * The date and time the server was first reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated"?: Date;
    /**
      * The date and time the server was last reported (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeUpdated"?: Date;
}
export declare namespace Server {
    enum LatestPatchesStatus {
        OnLatestPatches = "ON_LATEST_PATCHES",
        PatchingRequired = "PATCHING_REQUIRED",
        Unknown = "UNKNOWN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Server): object;
    function getDeserializedJsonObj(obj: Server): object;
}
