/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
* WLSDomain is representative of a WebLogic Domain running on one or more managed instances.
* <p>
To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to
* an administrator. If you're an administrator who needs to write policies to give users access, see
* [Getting Started with Policies](https://docs.oracle.com/iaas/Content/Identity/policiesgs/get-started-with-policies.htm).
*
*/
export interface WlsDomain {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
     */
    "id": string;
    /**
     * A user-friendly name that does not have to be unique and is changeable.
     */
    "displayName": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * The middleware type on the administration server of the WebLogic domain.
     */
    "middlewareType"?: string;
    /**
     * The version of the WebLogic domain.
     */
    "weblogicVersion"?: string;
    /**
     * The patch readiness status of the WebLogic domain.
     */
    "patchReadinessStatus"?: model.PatchReadinessStatus;
    /**
     * Whether or not the terms of use agreement has been accepted for the WebLogic domain.
     */
    "isAcceptedTermsAndConditions"?: boolean;
    /**
     * The current state of the WebLogic service domain.
     */
    "lifecycleState": WlsDomain.LifecycleState;
    /**
     * A message that describes the current state of the WebLogic domain in more detail. For example,
     * it can be used to provide actionable information for a resource in the Failed state.
     *
     */
    "lifecycleDetails"?: string;
    "configuration"?: model.WlsDomainConfiguration;
    /**
      * The date and time the WebLogic domain was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated"?: Date;
    /**
      * The date and time the WebLogic domain was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeUpdated"?: Date;
    /**
      * Free-form tags for this resource. Each tag is a key-value pair with no predefined name, type, or namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Department\": \"Finance\"}}
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
  *
      */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * System tags for this resource. Each key is predefined and scoped to a namespace.
  * <p>
  Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
  *
      */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace WlsDomain {
    enum LifecycleState {
        Active = "ACTIVE",
        Creating = "CREATING",
        Deleted = "DELETED",
        Deleting = "DELETING",
        Failed = "FAILED",
        NeedsAttention = "NEEDS_ATTENTION",
        Updating = "UPDATING",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: WlsDomain): object;
    function getDeserializedJsonObj(obj: WlsDomain): object;
}
