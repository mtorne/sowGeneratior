/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The WebLogic domain configuration.
 *
 */
export interface WlsDomainConfiguration {
    /**
     * Whether or not the WebLogic domain is enabled for patching.
     */
    "isPatchEnabled": boolean;
    /**
     * Whether or not to rollback on failure during patching of WebLogic domain.
     */
    "isRollbackOnFailure"?: boolean;
    /**
     * Servers shutdown timeout. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "serversShutdownTimeout"?: number;
    /**
     * Whether to manage the admin server using Node Manager or scripts.
     */
    "adminServerControlMode"?: model.ServerControlMode;
    /**
     * Whether to manage the managed server using Node Manager or scripts.
     */
    "managedServerControlMode"?: model.ServerControlMode;
    /**
     * Path to admin server start script.
     */
    "adminServerStartScriptPath"?: string;
    /**
     * Path to admin server stop script.
     */
    "adminServerStopScriptPath"?: string;
    /**
     * Path to managed server start script.
     */
    "managedServerStartScriptPath"?: string;
    /**
     * Path to managed server stop script.
     */
    "managedServerStopScriptPath"?: string;
}
export declare namespace WlsDomainConfiguration {
    function getJsonObj(obj: WlsDomainConfiguration): object;
    function getDeserializedJsonObj(obj: WlsDomainConfiguration): object;
}
