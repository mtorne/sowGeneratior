/**
 * WebLogic Management Service API
 * WebLogic Management Service is an OCI service that enables a unified view and management of WebLogic domains
in Oracle Cloud Infrastructure. Features include on-demand patching of WebLogic domains, rollback of the
last applied patch, discovery and management of WebLogic instances on a compute host.

 * OpenAPI spec version: 20241101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { WeblogicManagementServiceWaiter } from "./weblogicmanagementservice-waiter";
declare const Breaker: any;
export declare enum WeblogicManagementServiceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class WeblogicManagementServiceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": WeblogicManagementServiceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new WeblogicManagementServiceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): WeblogicManagementServiceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): WeblogicManagementServiceWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Moves a WebLogic domain into a different compartment within the same tenancy.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeWlsDomainCompartmentRequest
     * @return ChangeWlsDomainCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ChangeWlsDomainCompartment.ts.html |here} to see how to use ChangeWlsDomainCompartment API.
     */
    changeWlsDomainCompartment(changeWlsDomainCompartmentRequest: requests.ChangeWlsDomainCompartmentRequest): Promise<responses.ChangeWlsDomainCompartmentResponse>;
    /**
     * Creates a terms of use agreement record for a WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateAgreementRecordRequest
     * @return CreateAgreementRecordResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/CreateAgreementRecord.ts.html |here} to see how to use CreateAgreementRecord API.
     */
    createAgreementRecord(createAgreementRecordRequest: requests.CreateAgreementRecordRequest): Promise<responses.CreateAgreementRecordResponse>;
    /**
     * Delete the WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteWlsDomainRequest
     * @return DeleteWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/DeleteWlsDomain.ts.html |here} to see how to use DeleteWlsDomain API.
     */
    deleteWlsDomain(deleteWlsDomainRequest: requests.DeleteWlsDomainRequest): Promise<responses.DeleteWlsDomainResponse>;
    /**
     * Returns the terms and conditions of use agreement.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAgreementRequest
     * @return GetAgreementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetAgreement.ts.html |here} to see how to use GetAgreement API.
     */
    getAgreement(getAgreementRequest: requests.GetAgreementRequest): Promise<responses.GetAgreementResponse>;
    /**
     * Gets information about the specified managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceRequest
     * @return GetManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetManagedInstance.ts.html |here} to see how to use GetManagedInstance API.
     */
    getManagedInstance(getManagedInstanceRequest: requests.GetManagedInstanceRequest): Promise<responses.GetManagedInstanceResponse>;
    /**
     * Gets information about the specified server in a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetManagedInstanceServerRequest
     * @return GetManagedInstanceServerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetManagedInstanceServer.ts.html |here} to see how to use GetManagedInstanceServer API.
     */
    getManagedInstanceServer(getManagedInstanceServerRequest: requests.GetManagedInstanceServerRequest): Promise<responses.GetManagedInstanceServerResponse>;
    /**
     * Gets a specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWlsDomainRequest
     * @return GetWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWlsDomain.ts.html |here} to see how to use GetWlsDomain API.
     */
    getWlsDomain(getWlsDomainRequest: requests.GetWlsDomainRequest): Promise<responses.GetWlsDomainResponse>;
    /**
     * Gets WebLogic and Node Manager credentials of a specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWlsDomainCredentialRequest
     * @return GetWlsDomainCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWlsDomainCredential.ts.html |here} to see how to use GetWlsDomainCredential API.
     */
    getWlsDomainCredential(getWlsDomainCredentialRequest: requests.GetWlsDomainCredentialRequest): Promise<responses.GetWlsDomainCredentialResponse>;
    /**
     * Gets information about the specified server in a WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWlsDomainServerRequest
     * @return GetWlsDomainServerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWlsDomainServer.ts.html |here} to see how to use GetWlsDomainServer API.
     */
    getWlsDomainServer(getWlsDomainServerRequest: requests.GetWlsDomainServerRequest): Promise<responses.GetWlsDomainServerResponse>;
    /**
     * Get details of specific backup for the WebLogic Domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWlsDomainServerBackupRequest
     * @return GetWlsDomainServerBackupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWlsDomainServerBackup.ts.html |here} to see how to use GetWlsDomainServerBackup API.
     */
    getWlsDomainServerBackup(getWlsDomainServerBackupRequest: requests.GetWlsDomainServerBackupRequest): Promise<responses.GetWlsDomainServerBackupResponse>;
    /**
     * Get details of specific backup for the WebLogic Domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWlsDomainServerBackupContentRequest
     * @return GetWlsDomainServerBackupContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWlsDomainServerBackupContent.ts.html |here} to see how to use GetWlsDomainServerBackupContent API.
     */
    getWlsDomainServerBackupContent(getWlsDomainServerBackupContentRequest: requests.GetWlsDomainServerBackupContentRequest): Promise<responses.GetWlsDomainServerBackupContentResponse>;
    /**
     * Gets the details of a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Install the latest patches on a WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallLatestPatchesOnWlsDomainRequest
     * @return InstallLatestPatchesOnWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/InstallLatestPatchesOnWlsDomain.ts.html |here} to see how to use InstallLatestPatchesOnWlsDomain API.
     */
    installLatestPatchesOnWlsDomain(installLatestPatchesOnWlsDomainRequest: requests.InstallLatestPatchesOnWlsDomainRequest): Promise<responses.InstallLatestPatchesOnWlsDomainResponse>;
    /**
     * List the terms of use agreement record for the WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAgreementRecordsRequest
     * @return ListAgreementRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListAgreementRecords.ts.html |here} to see how to use ListAgreementRecords API.
     */
    listAgreementRecords(listAgreementRecordsRequest: requests.ListAgreementRecordsRequest): Promise<responses.ListAgreementRecordsResponse>;
    /**
     * Gets the latest patches that can be installed to the WebLogic domains.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListApplicablePatchesRequest
     * @return ListApplicablePatchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListApplicablePatches.ts.html |here} to see how to use ListApplicablePatches API.
     */
    listApplicablePatches(listApplicablePatchesRequest: requests.ListApplicablePatchesRequest): Promise<responses.ListApplicablePatchesResponse>;
    /**
     * Gets all the scan results for all WebLogic servers in the managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceScanResultsRequest
     * @return ListManagedInstanceScanResultsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListManagedInstanceScanResults.ts.html |here} to see how to use ListManagedInstanceScanResults API.
     */
    listManagedInstanceScanResults(listManagedInstanceScanResultsRequest: requests.ListManagedInstanceScanResultsRequest): Promise<responses.ListManagedInstanceScanResultsResponse>;
    /**
     * Gets a list of installed patches on a server in a managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceServerInstalledPatchesRequest
     * @return ListManagedInstanceServerInstalledPatchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListManagedInstanceServerInstalledPatches.ts.html |here} to see how to use ListManagedInstanceServerInstalledPatches API.
     */
    listManagedInstanceServerInstalledPatches(listManagedInstanceServerInstalledPatchesRequest: requests.ListManagedInstanceServerInstalledPatchesRequest): Promise<responses.ListManagedInstanceServerInstalledPatchesResponse>;
    /**
     * Gets list of servers in a specific managed instance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstanceServersRequest
     * @return ListManagedInstanceServersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListManagedInstanceServers.ts.html |here} to see how to use ListManagedInstanceServers API.
     */
    listManagedInstanceServers(listManagedInstanceServersRequest: requests.ListManagedInstanceServersRequest): Promise<responses.ListManagedInstanceServersResponse>;
    /**
     * Lists managed instances that match the specified compartment or managed instance OCID. Filter the list against a variety of criteria including but not limited to its name, status and compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListManagedInstancesRequest
     * @return ListManagedInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListManagedInstances.ts.html |here} to see how to use ListManagedInstances API.
     */
    listManagedInstances(listManagedInstancesRequest: requests.ListManagedInstancesRequest): Promise<responses.ListManagedInstancesResponse>;
    /**
     * Gets all the required policies for the WebLogic Management Service.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListRequiredPoliciesRequest
     * @return ListRequiredPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListRequiredPolicies.ts.html |here} to see how to use ListRequiredPolicies API.
     */
    listRequiredPolicies(listRequiredPoliciesRequest: requests.ListRequiredPoliciesRequest): Promise<responses.ListRequiredPoliciesResponse>;
    /**
     * Gets domain credentials of a specific domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainCredentialsRequest
     * @return ListWlsDomainCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainCredentials.ts.html |here} to see how to use ListWlsDomainCredentials API.
     */
    listWlsDomainCredentials(listWlsDomainCredentialsRequest: requests.ListWlsDomainCredentialsRequest): Promise<responses.ListWlsDomainCredentialsResponse>;
    /**
     * Get all scan results for a server in a specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainScanResultsRequest
     * @return ListWlsDomainScanResultsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainScanResults.ts.html |here} to see how to use ListWlsDomainScanResults API.
     */
    listWlsDomainScanResults(listWlsDomainScanResultsRequest: requests.ListWlsDomainScanResultsRequest): Promise<responses.ListWlsDomainScanResultsResponse>;
    /**
     * Gets a list of backups for the server of a specific WebLogic Domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainServerBackupsRequest
     * @return ListWlsDomainServerBackupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainServerBackups.ts.html |here} to see how to use ListWlsDomainServerBackups API.
     */
    listWlsDomainServerBackups(listWlsDomainServerBackupsRequest: requests.ListWlsDomainServerBackupsRequest): Promise<responses.ListWlsDomainServerBackupsResponse>;
    /**
     * Gets a list of installed patches on a server for a domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainServerInstalledPatchesRequest
     * @return ListWlsDomainServerInstalledPatchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainServerInstalledPatches.ts.html |here} to see how to use ListWlsDomainServerInstalledPatches API.
     */
    listWlsDomainServerInstalledPatches(listWlsDomainServerInstalledPatchesRequest: requests.ListWlsDomainServerInstalledPatchesRequest): Promise<responses.ListWlsDomainServerInstalledPatchesResponse>;
    /**
     * Gets list of servers in a specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainServersRequest
     * @return ListWlsDomainServersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainServers.ts.html |here} to see how to use ListWlsDomainServers API.
     */
    listWlsDomainServers(listWlsDomainServersRequest: requests.ListWlsDomainServersRequest): Promise<responses.ListWlsDomainServersResponse>;
    /**
     * Gets all WebLogic domains in a given compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainsRequest
     * @return ListWlsDomainsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomains.ts.html |here} to see how to use ListWlsDomains API.
     */
    listWlsDomains(listWlsDomainsRequest: requests.ListWlsDomainsRequest): Promise<responses.ListWlsDomainsResponse>;
    /**
     * Gets a list of WebLogic domains that share middleware with a specific domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWlsDomainsSharingMiddlewaresRequest
     * @return ListWlsDomainsSharingMiddlewaresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWlsDomainsSharingMiddlewares.ts.html |here} to see how to use ListWlsDomainsSharingMiddlewares API.
     */
    listWlsDomainsSharingMiddlewares(listWlsDomainsSharingMiddlewaresRequest: requests.ListWlsDomainsSharingMiddlewaresRequest): Promise<responses.ListWlsDomainsSharingMiddlewaresResponse>;
    /**
     * Lists the errors for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Lists the logs for a work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Restarts all the servers in the WebLogic domains. Servers that are already stopped are ignored.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RestartWlsDomainRequest
     * @return RestartWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/RestartWlsDomain.ts.html |here} to see how to use RestartWlsDomain API.
     */
    restartWlsDomain(restartWlsDomainRequest: requests.RestartWlsDomainRequest): Promise<responses.RestartWlsDomainResponse>;
    /**
     * Restore a domain from backup. If the backup contains a MIDDLEWARE asset, then the middleware of the domain, including patches, will be restored.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RestoreWlsDomainRequest
     * @return RestoreWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/RestoreWlsDomain.ts.html |here} to see how to use RestoreWlsDomain API.
     */
    restoreWlsDomain(restoreWlsDomainRequest: requests.RestoreWlsDomainRequest): Promise<responses.RestoreWlsDomainResponse>;
    /**
     * Scans a managed instance for WebLogic domains.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ScanManagedInstanceRequest
     * @return ScanManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ScanManagedInstance.ts.html |here} to see how to use ScanManagedInstance API.
     */
    scanManagedInstance(scanManagedInstanceRequest: requests.ScanManagedInstanceRequest): Promise<responses.ScanManagedInstanceResponse>;
    /**
     * Runs a series of checks in the WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ScanWlsDomainRequest
     * @return ScanWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/ScanWlsDomain.ts.html |here} to see how to use ScanWlsDomain API.
     */
    scanWlsDomain(scanWlsDomainRequest: requests.ScanWlsDomainRequest): Promise<responses.ScanWlsDomainResponse>;
    /**
     * Sets restart order of servers in specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SetRestartOrderRequest
     * @return SetRestartOrderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/SetRestartOrder.ts.html |here} to see how to use SetRestartOrder API.
     */
    setRestartOrder(setRestartOrderRequest: requests.SetRestartOrderRequest): Promise<responses.SetRestartOrderResponse>;
    /**
     * Starts all the servers in the WebLogic domain. Servers that are already started are ignored.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StartWlsDomainRequest
     * @return StartWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/StartWlsDomain.ts.html |here} to see how to use StartWlsDomain API.
     */
    startWlsDomain(startWlsDomainRequest: requests.StartWlsDomainRequest): Promise<responses.StartWlsDomainResponse>;
    /**
     * Stops all the servers in the WebLogic domain. Servers that are already stopped are ignored.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StopWlsDomainRequest
     * @return StopWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/StopWlsDomain.ts.html |here} to see how to use StopWlsDomain API.
     */
    stopWlsDomain(stopWlsDomainRequest: requests.StopWlsDomainRequest): Promise<responses.StopWlsDomainResponse>;
    /**
     * Gets the data to be shown in the Overview page of the service in a given compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param SummarizeResourceInventoryRequest
     * @return SummarizeResourceInventoryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/SummarizeResourceInventory.ts.html |here} to see how to use SummarizeResourceInventory API.
     */
    summarizeResourceInventory(summarizeResourceInventoryRequest: requests.SummarizeResourceInventoryRequest): Promise<responses.SummarizeResourceInventoryResponse>;
    /**
     * Updates the specified managed instance information, such as discovery interval and domain search path.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateManagedInstanceRequest
     * @return UpdateManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/UpdateManagedInstance.ts.html |here} to see how to use UpdateManagedInstance API.
     */
    updateManagedInstance(updateManagedInstanceRequest: requests.UpdateManagedInstanceRequest): Promise<responses.UpdateManagedInstanceResponse>;
    /**
     * Updates a specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateWlsDomainRequest
     * @return UpdateWlsDomainResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/UpdateWlsDomain.ts.html |here} to see how to use UpdateWlsDomain API.
     */
    updateWlsDomain(updateWlsDomainRequest: requests.UpdateWlsDomainRequest): Promise<responses.UpdateWlsDomainResponse>;
    /**
     * Updates WebLogic domain credentials of specific WebLogic domain.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateWlsDomainCredentialRequest
     * @return UpdateWlsDomainCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/UpdateWlsDomainCredential.ts.html |here} to see how to use UpdateWlsDomainCredential API.
     */
    updateWlsDomainCredential(updateWlsDomainCredentialRequest: requests.UpdateWlsDomainCredentialRequest): Promise<responses.UpdateWlsDomainCredentialResponse>;
}
export declare enum WeblogicManagementServiceConfigurationApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class WeblogicManagementServiceConfigurationClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Gets service configuration.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetConfigurationRequest
     * @return GetConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/GetConfiguration.ts.html |here} to see how to use GetConfiguration API.
     */
    getConfiguration(getConfigurationRequest: requests.GetConfigurationRequest): Promise<responses.GetConfigurationResponse>;
    /**
     * Updates service configuration.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateConfigurationRequest
     * @return UpdateConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/wlms/UpdateConfiguration.ts.html |here} to see how to use UpdateConfiguration API.
     */
    updateConfiguration(updateConfigurationRequest: requests.UpdateConfigurationRequest): Promise<responses.UpdateConfigurationResponse>;
}
export {};
