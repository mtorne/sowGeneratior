/**
 * Cloud Advisor API
 * Use the Cloud Advisor API to find potential inefficiencies in your tenancy and address them.
Cloud Advisor can help you save money, improve performance, strengthen system resilience, and improve security.
For more information, see [Cloud Advisor](https://docs.oracle.com/iaas/Content/CloudAdvisor/Concepts/cloudadvisoroverview.htm).

 * OpenAPI spec version: 20200606
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The metadata associated with the profile level summary.
 *
 */
export interface ProfileLevelSummary {
    /**
     * A unique name for the profile level.
     */
    "name": string;
    /**
     * The name of the recommendation this profile level applies to.
     */
    "recommendationName": string;
    /**
     * The metrics that will be evaluated by profiles using this profile level.
     */
    "metrics": Array<model.EvaluatedMetric>;
    /**
     * The default aggregation interval (in days) for profiles using this profile level.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "defaultInterval": number;
    /**
     * An array of aggregation intervals (in days) allowed for profiles using this profile level.
     *
     */
    "validIntervals": Array<number>;
    /**
     * The date and time the category details were created, in the format defined by RFC3339.
     */
    "timeCreated": Date;
    /**
     * The date and time the category details were last updated, in the format defined by RFC3339.
     */
    "timeUpdated": Date;
}
export declare namespace ProfileLevelSummary {
    function getJsonObj(obj: ProfileLevelSummary): object;
    function getDeserializedJsonObj(obj: ProfileLevelSummary): object;
}
