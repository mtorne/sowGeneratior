"use strict";
/**
 * Fusion Applications Environment Management API
 * Use the Fusion Applications Environment Management API to manage the environments where your Fusion Applications run. For more information, see the [Fusion Applications Environment Management documentation](https://docs.oracle.com/iaas/Content/fusion-applications/home.htm).
 * OpenAPI spec version: 20211201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Subscription = void 0;
const model = __importStar(require("../model"));
var Subscription;
(function (Subscription) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Inactive"] = "INACTIVE";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Failed"] = "FAILED";
        LifecycleState["NeedsAttention"] = "NEEDS_ATTENTION";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = Subscription.LifecycleState || (Subscription.LifecycleState = {}));
    let LifecycleDetails;
    (function (LifecycleDetails) {
        LifecycleDetails["Active"] = "ACTIVE";
        LifecycleDetails["Purged"] = "PURGED";
        LifecycleDetails["Canceled"] = "CANCELED";
        LifecycleDetails["PaidPurged"] = "PAID_PURGED";
        LifecycleDetails["Initialized"] = "INITIALIZED";
        LifecycleDetails["SoftTerminated"] = "SOFT_TERMINATED";
        LifecycleDetails["Disabled"] = "DISABLED";
        LifecycleDetails["BeginTermination"] = "BEGIN_TERMINATION";
        LifecycleDetails["Migrated"] = "MIGRATED";
        LifecycleDetails["PendingCancelation"] = "PENDING_CANCELATION";
        LifecycleDetails["Archived"] = "ARCHIVED";
        LifecycleDetails["NonRecoverable"] = "NON_RECOVERABLE";
        LifecycleDetails["BeginSoftTermination"] = "BEGIN_SOFT_TERMINATION";
        LifecycleDetails["Activated"] = "ACTIVATED";
        LifecycleDetails["AccessDisabled"] = "ACCESS_DISABLED";
        LifecycleDetails["PendingRegistration"] = "PENDING_REGISTRATION";
        LifecycleDetails["Terminated"] = "TERMINATED";
        LifecycleDetails["Relocating"] = "RELOCATING";
        LifecycleDetails["Deprovisioned"] = "DEPROVISIONED";
        LifecycleDetails["Provisioned"] = "PROVISIONED";
        LifecycleDetails["BeginTerminationPassive"] = "BEGIN_TERMINATION_PASSIVE";
        LifecycleDetails["Locked"] = "LOCKED";
        LifecycleDetails["PendingDeprovisioning"] = "PENDING_DEPROVISIONING";
        LifecycleDetails["Registered"] = "REGISTERED";
        LifecycleDetails["Cancelled"] = "CANCELLED";
        LifecycleDetails["Expired"] = "EXPIRED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleDetails["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleDetails = Subscription.LifecycleDetails || (Subscription.LifecycleDetails = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "skus": obj.skus
                ? obj.skus.map(item => {
                    return model.SubscriptionSku.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    Subscription.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "skus": obj.skus
                ? obj.skus.map(item => {
                    return model.SubscriptionSku.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    Subscription.getDeserializedJsonObj = getDeserializedJsonObj;
})(Subscription = exports.Subscription || (exports.Subscription = {}));
//# sourceMappingURL=subscription.js.map