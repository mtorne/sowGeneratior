"use strict";
/**
 * Fusion Applications Environment Management API
 * Use the Fusion Applications Environment Management API to manage the environments where your Fusion Applications run. For more information, see the [Fusion Applications Environment Management documentation](https://docs.oracle.com/iaas/Content/fusion-applications/home.htm).
 * OpenAPI spec version: 20211201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledActivity = void 0;
const model = __importStar(require("../model"));
var ScheduledActivity;
(function (ScheduledActivity) {
    let RunCycle;
    (function (RunCycle) {
        RunCycle["Quarterly"] = "QUARTERLY";
        RunCycle["Monthly"] = "MONTHLY";
        RunCycle["Oneoff"] = "ONEOFF";
        RunCycle["Vertex"] = "VERTEX";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        RunCycle["UnknownValue"] = "UNKNOWN_VALUE";
    })(RunCycle = ScheduledActivity.RunCycle || (ScheduledActivity.RunCycle = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Accepted"] = "ACCEPTED";
        LifecycleState["InProgress"] = "IN_PROGRESS";
        LifecycleState["Failed"] = "FAILED";
        LifecycleState["Succeeded"] = "SUCCEEDED";
        LifecycleState["Canceled"] = "CANCELED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = ScheduledActivity.LifecycleState || (ScheduledActivity.LifecycleState = {}));
    let ServiceAvailability;
    (function (ServiceAvailability) {
        ServiceAvailability["Available"] = "AVAILABLE";
        ServiceAvailability["Unavailable"] = "UNAVAILABLE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ServiceAvailability["UnknownValue"] = "UNKNOWN_VALUE";
    })(ServiceAvailability = ScheduledActivity.ServiceAvailability || (ScheduledActivity.ServiceAvailability = {}));
    let LifecycleDetails;
    (function (LifecycleDetails) {
        LifecycleDetails["None"] = "NONE";
        LifecycleDetails["Rollbackaccepted"] = "ROLLBACKACCEPTED";
        LifecycleDetails["Rollbackinprogress"] = "ROLLBACKINPROGRESS";
        LifecycleDetails["Rollbacksucceeded"] = "ROLLBACKSUCCEEDED";
        LifecycleDetails["Rollbackfailed"] = "ROLLBACKFAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleDetails["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleDetails = ScheduledActivity.LifecycleDetails || (ScheduledActivity.LifecycleDetails = {}));
    let ScheduledActivityPhase;
    (function (ScheduledActivityPhase) {
        ScheduledActivityPhase["PreMaintenance"] = "PRE_MAINTENANCE";
        ScheduledActivityPhase["Maintenance"] = "MAINTENANCE";
        ScheduledActivityPhase["PostMaintenance"] = "POST_MAINTENANCE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ScheduledActivityPhase["UnknownValue"] = "UNKNOWN_VALUE";
    })(ScheduledActivityPhase = ScheduledActivity.ScheduledActivityPhase || (ScheduledActivity.ScheduledActivityPhase = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "actions": obj.actions
                ? obj.actions.map(item => {
                    return model.Action.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    ScheduledActivity.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "actions": obj.actions
                ? obj.actions.map(item => {
                    return model.Action.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    ScheduledActivity.getDeserializedJsonObj = getDeserializedJsonObj;
})(ScheduledActivity = exports.ScheduledActivity || (exports.ScheduledActivity = {}));
//# sourceMappingURL=scheduled-activity.js.map