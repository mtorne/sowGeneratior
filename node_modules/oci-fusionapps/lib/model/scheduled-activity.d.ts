/**
 * Fusion Applications Environment Management API
 * Use the Fusion Applications Environment Management API to manage the environments where your Fusion Applications run. For more information, see the [Fusion Applications Environment Management documentation](https://docs.oracle.com/iaas/Content/fusion-applications/home.htm).
 * OpenAPI spec version: 20211201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of scheduled activity.
 */
export interface ScheduledActivity {
    /**
     * Unique identifier that is immutable on creation.
     */
    "id": string;
    /**
     * scheduled activity display name, can be renamed.
     */
    "displayName": string;
    /**
     * run cadence.
     */
    "runCycle": ScheduledActivity.RunCycle;
    /**
     * FAaaS Environment Identifier.
     */
    "fusionEnvironmentId": string;
    /**
     * The current state of the scheduledActivity.
     */
    "lifecycleState": ScheduledActivity.LifecycleState;
    /**
     * List of actions
     */
    "actions"?: Array<model.Action>;
    /**
     * Service availability / impact during scheduled activity execution up down
     */
    "serviceAvailability": ScheduledActivity.ServiceAvailability;
    /**
     * Current time the scheduled activity is scheduled to start. An RFC3339 formatted datetime string.
     */
    "timeScheduledStart": Date;
    /**
     * Current time the scheduled activity is scheduled to end. An RFC3339 formatted datetime string.
     */
    "timeExpectedFinish": Date;
    /**
     * The time the scheduled activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
     */
    "timeFinished"?: Date;
    /**
     * Cumulative delay hours Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "delayInHours"?: number;
    /**
     * The time the scheduled activity record was created. An RFC3339 formatted datetime string.
     */
    "timeCreated"?: Date;
    /**
     * The time the scheduled activity record was updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: ScheduledActivity.LifecycleDetails;
    /**
     * A property describing the phase of the scheduled activity.
     */
    "scheduledActivityPhase": ScheduledActivity.ScheduledActivityPhase;
    /**
     * The unique identifier that associates a scheduled activity with others in one complete maintenance. For example, with ZDT, a complete upgrade maintenance includes 5 scheduled activities - PREPARE, EXECUTE, POST, PRE_MAINTENANCE, and POST_MAINTENANCE. All of them share the same unique identifier - scheduledActivityAssociationId.
     */
    "scheduledActivityAssociationId": string;
}
export declare namespace ScheduledActivity {
    enum RunCycle {
        Quarterly = "QUARTERLY",
        Monthly = "MONTHLY",
        Oneoff = "ONEOFF",
        Vertex = "VERTEX",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Failed = "FAILED",
        Succeeded = "SUCCEEDED",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ServiceAvailability {
        Available = "AVAILABLE",
        Unavailable = "UNAVAILABLE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleDetails {
        None = "NONE",
        Rollbackaccepted = "ROLLBACKACCEPTED",
        Rollbackinprogress = "ROLLBACKINPROGRESS",
        Rollbacksucceeded = "ROLLBACKSUCCEEDED",
        Rollbackfailed = "ROLLBACKFAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ScheduledActivityPhase {
        PreMaintenance = "PRE_MAINTENANCE",
        Maintenance = "MAINTENANCE",
        PostMaintenance = "POST_MAINTENANCE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ScheduledActivity): object;
    function getDeserializedJsonObj(obj: ScheduledActivity): object;
}
