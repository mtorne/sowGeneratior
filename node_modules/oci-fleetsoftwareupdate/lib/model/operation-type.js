"use strict";
/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationType = void 0;
/**
 * Possible operation types.
 **/
var OperationType;
(function (OperationType) {
    OperationType["CreateDiscovery"] = "CREATE_DISCOVERY";
    OperationType["DeleteDiscovery"] = "DELETE_DISCOVERY";
    OperationType["CreateCollection"] = "CREATE_COLLECTION";
    OperationType["UpdateCollection"] = "UPDATE_COLLECTION";
    OperationType["DeleteCollection"] = "DELETE_COLLECTION";
    OperationType["MoveCollection"] = "MOVE_COLLECTION";
    OperationType["AddTargetsToCollection"] = "ADD_TARGETS_TO_COLLECTION";
    OperationType["RemoveTargetsInCollection"] = "REMOVE_TARGETS_IN_COLLECTION";
    OperationType["CreateMaintenanceCycle"] = "CREATE_MAINTENANCE_CYCLE";
    OperationType["UpdateMaintenanceCycle"] = "UPDATE_MAINTENANCE_CYCLE";
    OperationType["DeleteMaintenanceCycle"] = "DELETE_MAINTENANCE_CYCLE";
    OperationType["MoveMaintenanceCycle"] = "MOVE_MAINTENANCE_CYCLE";
    OperationType["CloneMaintenanceCycle"] = "CLONE_MAINTENANCE_CYCLE";
    OperationType["RollbackMaintenanceCycleAction"] = "ROLLBACK_MAINTENANCE_CYCLE_ACTION";
    OperationType["CreateAction"] = "CREATE_ACTION";
    OperationType["UpdateAction"] = "UPDATE_ACTION";
    OperationType["DeleteAction"] = "DELETE_ACTION";
    OperationType["MoveAction"] = "MOVE_ACTION";
    OperationType["PatchAction"] = "PATCH_ACTION";
    OperationType["CleanupAction"] = "CLEANUP_ACTION";
    OperationType["RollbackAndRemoveAction"] = "ROLLBACK_AND_REMOVE_ACTION";
    OperationType["ApplyAction"] = "APPLY_ACTION";
    OperationType["PrecheckAction"] = "PRECHECK_ACTION";
    OperationType["StageAction"] = "STAGE_ACTION";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
(function (OperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationType = exports.OperationType || (exports.OperationType = {}));
//# sourceMappingURL=operation-type.js.map