"use strict";
/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateBatchingStrategies = void 0;
/**
 * Possible Batching Strategy types to specify during an update Exadata Fleet Update Cycle operation.
 *
 **/
var UpdateBatchingStrategies;
(function (UpdateBatchingStrategies) {
    UpdateBatchingStrategies["Sequential"] = "SEQUENTIAL";
    UpdateBatchingStrategies["FiftyFifty"] = "FIFTY_FIFTY";
    UpdateBatchingStrategies["ServiceAvailabilityFactor"] = "SERVICE_AVAILABILITY_FACTOR";
    UpdateBatchingStrategies["NonRolling"] = "NON_ROLLING";
    UpdateBatchingStrategies["None"] = "NONE";
})(UpdateBatchingStrategies = exports.UpdateBatchingStrategies || (exports.UpdateBatchingStrategies = {}));
(function (UpdateBatchingStrategies) {
    function getJsonObj(obj) {
        return obj;
    }
    UpdateBatchingStrategies.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    UpdateBatchingStrategies.getDeserializedJsonObj = getDeserializedJsonObj;
})(UpdateBatchingStrategies = exports.UpdateBatchingStrategies || (exports.UpdateBatchingStrategies = {}));
//# sourceMappingURL=update-batching-strategies.js.map