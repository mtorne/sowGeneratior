/**
 * MySQL Database Service API
 * The API for the MySQL Database Service
 * OpenAPI spec version: 20190415
 * Contact: mysql-cloud-dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of the read replica.
 */
export interface ReplicaSummary {
    /**
     * The OCID of the read replica.
     */
    "id": string;
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    "dbSystemId": string;
    /**
     * The OCID of the compartment that contains the read replica.
     */
    "compartmentId": string;
    /**
     * The user-friendly name for the read replica. It does not have to be unique.
     */
    "displayName": string;
    /**
     * User provided description of the read replica.
     */
    "description"?: string;
    /**
     * The state of the read replica.
     */
    "lifecycleState": ReplicaSummary.LifecycleState;
    /**
     * A message describing the state of the read replica.
     */
    "lifecycleDetails"?: string;
    /**
     * The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeCreated": Date;
    /**
     * The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeUpdated"?: Date;
    /**
     * The MySQL version currently in use by the read replica.
     */
    "mysqlVersion": string;
    /**
     * The name of the Availability Domain the read replica is located in.
     */
    "availabilityDomain"?: string;
    /**
     * The name of the Fault Domain the read replica is located in.
     */
    "faultDomain"?: string;
    /**
     * Network Security Group OCIDs used for the VNIC attachment.
     */
    "nsgIds"?: Array<string>;
    /**
     * The IP address the read replica is configured to listen on.
     *
     */
    "ipAddress": string;
    /**
     * The port the read replica is configured to listen on. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "port": number;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "portX": number;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow.
     * Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If
     * the DB System is delete protected, read replicas can still be deleted individually if they are not delete
     * protected themselves.
     *
     */
    "isDeleteProtected"?: boolean;
    /**
     * The shape currently in use by the read replica. The shape determines the resources allocated:
     * CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.
     * To get a list of shapes, use the {@link #listShapes(ListShapesRequest) listShapes} operation.
     *
     */
    "shapeName"?: string;
    /**
     * The OCID of the Configuration currently in use by the read replica.
     */
    "configurationId"?: string;
    "replicaOverrides"?: model.ReplicaOverrides;
}
export declare namespace ReplicaSummary {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Updating = "UPDATING",
        Deleting = "DELETING",
        Deleted = "DELETED",
        NeedsAttention = "NEEDS_ATTENTION",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ReplicaSummary): object;
    function getDeserializedJsonObj(obj: ReplicaSummary): object;
}
