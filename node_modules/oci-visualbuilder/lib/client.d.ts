/**
 * Visual Builder API
 * Oracle Visual Builder enables developers to quickly build web and mobile applications. With a visual development environment that makes it easy to connect to Oracle data and third-party REST services, developers can build modern, consumer-grade applications in a fraction of the time it would take in other tools.
The Visual Builder Instance Management API allows users to create and manage a Visual Builder instance.

 * OpenAPI spec version: 20210601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { VbInstanceWaiter } from "./vbinstance-waiter";
declare const Breaker: any;
export declare enum VbInstanceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class VbInstanceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": VbInstanceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new VbInstanceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): VbInstanceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): VbInstanceWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Change the compartment for an vb instance
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeVbInstanceCompartmentRequest
     * @return ChangeVbInstanceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ChangeVbInstanceCompartment.ts.html |here} to see how to use ChangeVbInstanceCompartment API.
     */
    changeVbInstanceCompartment(changeVbInstanceCompartmentRequest: requests.ChangeVbInstanceCompartmentRequest): Promise<responses.ChangeVbInstanceCompartmentResponse>;
    /**
     * Creates a new Vb Instance.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateVbInstanceRequest
     * @return CreateVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/CreateVbInstance.ts.html |here} to see how to use CreateVbInstance API.
     */
    createVbInstance(createVbInstanceRequest: requests.CreateVbInstanceRequest): Promise<responses.CreateVbInstanceResponse>;
    /**
     * Deletes an Vb Instance resource by identifier.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteVbInstanceRequest
     * @return DeleteVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/DeleteVbInstance.ts.html |here} to see how to use DeleteVbInstance API.
     */
    deleteVbInstance(deleteVbInstanceRequest: requests.DeleteVbInstanceRequest): Promise<responses.DeleteVbInstanceResponse>;
    /**
     * Gets a VbInstance by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetVbInstanceRequest
     * @return GetVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/GetVbInstance.ts.html |here} to see how to use GetVbInstance API.
     */
    getVbInstance(getVbInstanceRequest: requests.GetVbInstanceRequest): Promise<responses.GetVbInstanceResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Returns a list of Vb Instances.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListVbInstancesRequest
     * @return ListVbInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ListVbInstances.ts.html |here} to see how to use ListVbInstances API.
     */
    listVbInstances(listVbInstancesRequest: requests.ListVbInstancesRequest): Promise<responses.ListVbInstancesResponse>;
    /**
     * Get the errors of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Get the logs of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Reconfigures the Private Endpoint associated with the private visual builder instance. Use this action in case the Private Endpoint is not working and needs to be reset.
     * The VB instance has to be in ACTIVE state and should be a private instance to perform this operation.
     * If the previous state is not ACTIVE, then the state of the vbInstance will not be changed and a 409 response returned.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ReconfigurePrivateEndpointVbInstanceRequest
     * @return ReconfigurePrivateEndpointVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/ReconfigurePrivateEndpointVbInstance.ts.html |here} to see how to use ReconfigurePrivateEndpointVbInstance API.
     */
    reconfigurePrivateEndpointVbInstance(reconfigurePrivateEndpointVbInstanceRequest: requests.ReconfigurePrivateEndpointVbInstanceRequest): Promise<responses.ReconfigurePrivateEndpointVbInstanceResponse>;
    /**
     * Summarizes the applications for a vb instance.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedApplicationsRequest
     * @return RequestSummarizedApplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/RequestSummarizedApplications.ts.html |here} to see how to use RequestSummarizedApplications API.
     */
    requestSummarizedApplications(requestSummarizedApplicationsRequest: requests.RequestSummarizedApplicationsRequest): Promise<responses.RequestSummarizedApplicationsResponse>;
    /**
     * Start an vb instance that was previously in an INACTIVE state. If the previous state is not
     * INACTIVE, then the state of the vbInstance will not be changed and a 409 response returned.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StartVbInstanceRequest
     * @return StartVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/StartVbInstance.ts.html |here} to see how to use StartVbInstance API.
     */
    startVbInstance(startVbInstanceRequest: requests.StartVbInstanceRequest): Promise<responses.StartVbInstanceResponse>;
    /**
     * Stop an vb instance that was previously in an ACTIVE state. If the previous state is not
     * ACTIVE, then the state of the vbInstance will not be changed and a 409 response returned.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StopVbInstanceRequest
     * @return StopVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/StopVbInstance.ts.html |here} to see how to use StopVbInstance API.
     */
    stopVbInstance(stopVbInstanceRequest: requests.StopVbInstanceRequest): Promise<responses.StopVbInstanceResponse>;
    /**
     * Updates the Vb Instance.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateVbInstanceRequest
     * @return UpdateVbInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/visualbuilder/UpdateVbInstance.ts.html |here} to see how to use UpdateVbInstance API.
     */
    updateVbInstance(updateVbInstanceRequest: requests.UpdateVbInstanceRequest): Promise<responses.UpdateVbInstanceResponse>;
}
export {};
