"use strict";
/**
 * Certificates Service Retrieval API
 * API for retrieving certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateBundleWithPrivateKey = exports.CertificateBundlePublicOnly = exports.VersionStage = exports.Validity = exports.RevocationStatus = exports.RevocationReason = exports.CertificateBundleVersionSummary = exports.CertificateBundleVersionCollection = exports.CertificateBundle = exports.CertificateAuthorityBundleVersionSummary = exports.CertificateAuthorityBundleVersionCollection = exports.CertificateAuthorityBundle = exports.CaBundle = void 0;
const CaBundle = __importStar(require("./ca-bundle"));
exports.CaBundle = CaBundle.CaBundle;
const CertificateAuthorityBundle = __importStar(require("./certificate-authority-bundle"));
exports.CertificateAuthorityBundle = CertificateAuthorityBundle.CertificateAuthorityBundle;
const CertificateAuthorityBundleVersionCollection = __importStar(require("./certificate-authority-bundle-version-collection"));
exports.CertificateAuthorityBundleVersionCollection = CertificateAuthorityBundleVersionCollection.CertificateAuthorityBundleVersionCollection;
const CertificateAuthorityBundleVersionSummary = __importStar(require("./certificate-authority-bundle-version-summary"));
exports.CertificateAuthorityBundleVersionSummary = CertificateAuthorityBundleVersionSummary.CertificateAuthorityBundleVersionSummary;
const CertificateBundle = __importStar(require("./certificate-bundle"));
exports.CertificateBundle = CertificateBundle.CertificateBundle;
const CertificateBundleVersionCollection = __importStar(require("./certificate-bundle-version-collection"));
exports.CertificateBundleVersionCollection = CertificateBundleVersionCollection.CertificateBundleVersionCollection;
const CertificateBundleVersionSummary = __importStar(require("./certificate-bundle-version-summary"));
exports.CertificateBundleVersionSummary = CertificateBundleVersionSummary.CertificateBundleVersionSummary;
const RevocationReason = __importStar(require("./revocation-reason"));
exports.RevocationReason = RevocationReason.RevocationReason;
const RevocationStatus = __importStar(require("./revocation-status"));
exports.RevocationStatus = RevocationStatus.RevocationStatus;
const Validity = __importStar(require("./validity"));
exports.Validity = Validity.Validity;
const VersionStage = __importStar(require("./version-stage"));
exports.VersionStage = VersionStage.VersionStage;
const CertificateBundlePublicOnly = __importStar(require("./certificate-bundle-public-only"));
exports.CertificateBundlePublicOnly = CertificateBundlePublicOnly.CertificateBundlePublicOnly;
const CertificateBundleWithPrivateKey = __importStar(require("./certificate-bundle-with-private-key"));
exports.CertificateBundleWithPrivateKey = CertificateBundleWithPrivateKey.CertificateBundleWithPrivateKey;
//# sourceMappingURL=index.js.map