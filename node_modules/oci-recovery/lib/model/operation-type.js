"use strict";
/**
 * Oracle Database Autonomous Recovery Service API
 * Use Oracle Database Autonomous Recovery Service API to manage Protected Databases.
 * OpenAPI spec version: 20210216
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationType = void 0;
/**
 * The type of work request.
 **/
var OperationType;
(function (OperationType) {
    OperationType["CreateProtectedDatabase"] = "CREATE_PROTECTED_DATABASE";
    OperationType["UpdateProtectedDatabase"] = "UPDATE_PROTECTED_DATABASE";
    OperationType["DeleteProtectedDatabase"] = "DELETE_PROTECTED_DATABASE";
    OperationType["MoveProtectedDatabase"] = "MOVE_PROTECTED_DATABASE";
    OperationType["CreateProtectionPolicy"] = "CREATE_PROTECTION_POLICY";
    OperationType["UpdateProtectionPolicy"] = "UPDATE_PROTECTION_POLICY";
    OperationType["DeleteProtectionPolicy"] = "DELETE_PROTECTION_POLICY";
    OperationType["MoveProtectionPolicy"] = "MOVE_PROTECTION_POLICY";
    OperationType["CreateRecoveryServiceSubnet"] = "CREATE_RECOVERY_SERVICE_SUBNET";
    OperationType["UpdateRecoveryServiceSubnet"] = "UPDATE_RECOVERY_SERVICE_SUBNET";
    OperationType["DeleteRecoveryServiceSubnet"] = "DELETE_RECOVERY_SERVICE_SUBNET";
    OperationType["MoveRecoveryServiceSubnet"] = "MOVE_RECOVERY_SERVICE_SUBNET";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
(function (OperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationType = exports.OperationType || (exports.OperationType = {}));
//# sourceMappingURL=operation-type.js.map