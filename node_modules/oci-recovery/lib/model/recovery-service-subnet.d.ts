/**
 * Oracle Database Autonomous Recovery Service API
 * Use Oracle Database Autonomous Recovery Service API to manage Protected Databases.
 * OpenAPI spec version: 20210216
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of a recovery service subnet.
 * Recovery service subnets allows Recovery Service to access protected databases in each VCN.
 * Each recovery service subnet uses a single private endpoint on a subnet of your choice within a VCN. The private endpoint need not be on the same subnet as the Oracle Cloud Database, although, it must be on a subnet that can communicate with the Oracle Cloud Database.
 *
 */
export interface RecoveryServiceSubnet {
    /**
     * The recovery service subnet OCID.
     */
    "id": string;
    /**
     * A user-provided name for the recovery service subnet.
     */
    "displayName"?: string;
    /**
     * The compartment OCID.
     */
    "compartmentId": string;
    /**
     * VCN Identifier.
     */
    "vcnId": string;
    /**
     * Deprecated. One of the subnets associated with the Recovery Service subnet.
     *
     */
    "subnetId": string;
    /**
     * A list of OCIDs of all the subnets associated with the Recovery Service subnet.
     */
    "subnets"?: Array<string>;
    /**
     * A list of network security group (NSG) OCIDs that are associated with the Recovery Service subnet.
     * You can specify a maximum of 5 unique OCIDs, which implies that you can associate a maximum of 5 NSGs to each Recovery Service subnet.
     * Specify an empty array if you want to remove all the associated NSGs from a Recovery Service subnet.
     * See {@link NetworkSecurityGroup} for more information.
     *
     */
    "nsgIds"?: Array<string>;
    /**
     * An RFC3339 formatted datetime string that indicates the last created time for a recovery service subnet. For example: '2020-05-22T21:10:29.600Z'.
     *
     */
    "timeCreated"?: Date;
    /**
     * An RFC3339 formatted datetime string that indicates the last updated time for a recovery service subnet. For example: '2020-05-22T21:10:29.600Z'.
     *
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the recovery service subnet.
     *
     */
    "lifecycleState"?: model.LifecycleState;
    /**
     * Detailed description about the current lifecycle state of the recovery service subnet. For example, it can be used to provide actionable information for a resource in a Failed state
     */
    "lifecycleDetails"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace RecoveryServiceSubnet {
    function getJsonObj(obj: RecoveryServiceSubnet): object;
    function getDeserializedJsonObj(obj: RecoveryServiceSubnet): object;
}
