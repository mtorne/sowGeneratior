/**
 *
 *
 * OpenAPI spec version: 20210216
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/CreateProtectedDatabase.ts.html |here} to see how to use CreateProtectedDatabaseRequest.
 */
export interface CreateProtectedDatabaseRequest extends common.BaseRequest {
    /**
     * Describes the parameters required to create a protected database.
     */
    "createProtectedDatabaseDetails": model.CreateProtectedDatabaseDetails;
    /**
     * A token that uniquely identifies a request so it can be retried in case of a timeout or
     * server error without risk of executing that same action again. Retry tokens expire after 24
     * hours, but can be invalidated before then due to conflicting operations. For example, if a resource
     * has been deleted and purged from the system, then a retry of the original creation request
     * might be rejected.
     *
     */
    "opcRetryToken"?: string;
    /**
     * Unique identifier for the request.
     */
    "opcRequestId"?: string;
    /**
   * Indicates if the request is to test the preparedness for creating a protected database, without actually creating a protected database.
  * <p>
  If you set the {@code opcDryRun} option as {@code true}, then Recovery Service only performs a test run to check for any missing prerequisites or configurations required to create a protected database, and then returns error messages to warn you about any missing requirements.
  * <p>
  If an error occurs, you can review, correct, and repeat the dry run until the {@code createProtectedDatabase} request does not return any errors.
  * <p>
  These are the common issues that you can identify by performing a dry run of the {@code createProtectedDatabase} request:
  * <p>
  * The Recovery Service subnet has insufficient free IP addresses to support the required number of private endpoints. See, [troubleshooting](https://docs.oracle.com/en/cloud/paas/recovery-service/dbrsu/troubleshoot-backup-failures-recovery-service.html#GUID-05FA08B8-421D-4E52-B84B-7AFB84ADECF9) information
  * * Recovery Service does not have permissions to manage the network resources in a chosen compartment
  * * Recovery Service is out of capacity. See, [Service Limits](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/servicelimits.htm) for more information
  * * Recovery Service resources exceed quota limits
  * * A protected database, having the same database ID, already exists
  * * The specified protection policy does not exist, or it is not in an Active state
  * * The specified Recovery Service subnet does not exist, or it is not in an Active state
  * <p>
  See, [Prerequisites for Using Recovery Service](https://docs.oracle.com/en/cloud/paas/recovery-service/dbrsu/backup-recover-recovery-service.html#GUID-B2ABF281-DFF8-4A4E-AC85-629801AAF36A) for more information.
  *
   */
    "opcDryRun"?: boolean;
}
