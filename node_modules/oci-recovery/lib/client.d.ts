/**
 * Oracle Database Autonomous Recovery Service API
 * Use Oracle Database Autonomous Recovery Service API to manage Protected Databases.
 * OpenAPI spec version: 20210216
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { DatabaseRecoveryWaiter } from "./databaserecovery-waiter";
declare const Breaker: any;
export declare enum DatabaseRecoveryApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class DatabaseRecoveryClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": DatabaseRecoveryWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new DatabaseRecoveryWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): DatabaseRecoveryWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): DatabaseRecoveryWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Cancels the scheduled deletion of a protected database, and returns the protected database to an ACTIVE state. You can cancel the deletion only if the protected database is in the DELETE SCHEDULED state.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CancelProtectedDatabaseDeletionRequest
     * @return CancelProtectedDatabaseDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/CancelProtectedDatabaseDeletion.ts.html |here} to see how to use CancelProtectedDatabaseDeletion API.
     */
    cancelProtectedDatabaseDeletion(cancelProtectedDatabaseDeletionRequest: requests.CancelProtectedDatabaseDeletionRequest): Promise<responses.CancelProtectedDatabaseDeletionResponse>;
    /**
     * Moves a protected database resource from the existing compartment to the specified compartment. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeProtectedDatabaseCompartmentRequest
     * @return ChangeProtectedDatabaseCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ChangeProtectedDatabaseCompartment.ts.html |here} to see how to use ChangeProtectedDatabaseCompartment API.
     */
    changeProtectedDatabaseCompartment(changeProtectedDatabaseCompartmentRequest: requests.ChangeProtectedDatabaseCompartmentRequest): Promise<responses.ChangeProtectedDatabaseCompartmentResponse>;
    /**
     * Associates the protected database with a new cloud service environment, such as Microsoft Azure.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeProtectedDatabaseSubscriptionRequest
     * @return ChangeProtectedDatabaseSubscriptionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ChangeProtectedDatabaseSubscription.ts.html |here} to see how to use ChangeProtectedDatabaseSubscription API.
     */
    changeProtectedDatabaseSubscription(changeProtectedDatabaseSubscriptionRequest: requests.ChangeProtectedDatabaseSubscriptionRequest): Promise<responses.ChangeProtectedDatabaseSubscriptionResponse>;
    /**
     * Moves a protection policy resource from the existing compartment to the specified compartment. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeProtectionPolicyCompartmentRequest
     * @return ChangeProtectionPolicyCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ChangeProtectionPolicyCompartment.ts.html |here} to see how to use ChangeProtectionPolicyCompartment API.
     */
    changeProtectionPolicyCompartment(changeProtectionPolicyCompartmentRequest: requests.ChangeProtectionPolicyCompartmentRequest): Promise<responses.ChangeProtectionPolicyCompartmentResponse>;
    /**
     * Moves a recovery service subnet resource from the existing compartment to the specified compartment. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeRecoveryServiceSubnetCompartmentRequest
     * @return ChangeRecoveryServiceSubnetCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ChangeRecoveryServiceSubnetCompartment.ts.html |here} to see how to use ChangeRecoveryServiceSubnetCompartment API.
     */
    changeRecoveryServiceSubnetCompartment(changeRecoveryServiceSubnetCompartmentRequest: requests.ChangeRecoveryServiceSubnetCompartmentRequest): Promise<responses.ChangeRecoveryServiceSubnetCompartmentResponse>;
    /**
     * Creates a new Protected Database.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProtectedDatabaseRequest
     * @return CreateProtectedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/CreateProtectedDatabase.ts.html |here} to see how to use CreateProtectedDatabase API.
     */
    createProtectedDatabase(createProtectedDatabaseRequest: requests.CreateProtectedDatabaseRequest): Promise<responses.CreateProtectedDatabaseResponse>;
    /**
     * Creates a new Protection Policy.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateProtectionPolicyRequest
     * @return CreateProtectionPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/CreateProtectionPolicy.ts.html |here} to see how to use CreateProtectionPolicy API.
     */
    createProtectionPolicy(createProtectionPolicyRequest: requests.CreateProtectionPolicyRequest): Promise<responses.CreateProtectionPolicyResponse>;
    /**
     * Creates a new Recovery Service Subnet.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateRecoveryServiceSubnetRequest
     * @return CreateRecoveryServiceSubnetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/CreateRecoveryServiceSubnet.ts.html |here} to see how to use CreateRecoveryServiceSubnet API.
     */
    createRecoveryServiceSubnet(createRecoveryServiceSubnetRequest: requests.CreateRecoveryServiceSubnetRequest): Promise<responses.CreateRecoveryServiceSubnetResponse>;
    /**
     * Deletes a protected database based on the specified protected database ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteProtectedDatabaseRequest
     * @return DeleteProtectedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/DeleteProtectedDatabase.ts.html |here} to see how to use DeleteProtectedDatabase API.
     */
    deleteProtectedDatabase(deleteProtectedDatabaseRequest: requests.DeleteProtectedDatabaseRequest): Promise<responses.DeleteProtectedDatabaseResponse>;
    /**
     * Deletes a specified protection policy. You can delete custom policies only.
     * Deleting a Oracle predefined policies will result in status code 405 Method Not Allowed.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteProtectionPolicyRequest
     * @return DeleteProtectionPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/DeleteProtectionPolicy.ts.html |here} to see how to use DeleteProtectionPolicy API.
     */
    deleteProtectionPolicy(deleteProtectionPolicyRequest: requests.DeleteProtectionPolicyRequest): Promise<responses.DeleteProtectionPolicyResponse>;
    /**
     * Deletes a specified recovery service subnet.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteRecoveryServiceSubnetRequest
     * @return DeleteRecoveryServiceSubnetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/DeleteRecoveryServiceSubnet.ts.html |here} to see how to use DeleteRecoveryServiceSubnet API.
     */
    deleteRecoveryServiceSubnet(deleteRecoveryServiceSubnetRequest: requests.DeleteRecoveryServiceSubnetRequest): Promise<responses.DeleteRecoveryServiceSubnetResponse>;
    /**
     * Downloads the network service configuration file 'tnsnames.ora' for a specified protected database. Applies to user-defined recovery systems only.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param FetchProtectedDatabaseConfigurationRequest
     * @return FetchProtectedDatabaseConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/FetchProtectedDatabaseConfiguration.ts.html |here} to see how to use FetchProtectedDatabaseConfiguration API.
     */
    fetchProtectedDatabaseConfiguration(fetchProtectedDatabaseConfigurationRequest: requests.FetchProtectedDatabaseConfigurationRequest): Promise<responses.FetchProtectedDatabaseConfigurationResponse>;
    /**
     * Gets information about a specified protected database.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProtectedDatabaseRequest
     * @return GetProtectedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/GetProtectedDatabase.ts.html |here} to see how to use GetProtectedDatabase API.
     */
    getProtectedDatabase(getProtectedDatabaseRequest: requests.GetProtectedDatabaseRequest): Promise<responses.GetProtectedDatabaseResponse>;
    /**
     * Gets information about a specified protection policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetProtectionPolicyRequest
     * @return GetProtectionPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/GetProtectionPolicy.ts.html |here} to see how to use GetProtectionPolicy API.
     */
    getProtectionPolicy(getProtectionPolicyRequest: requests.GetProtectionPolicyRequest): Promise<responses.GetProtectionPolicyResponse>;
    /**
     * Gets information about a specified recovery service subnet.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetRecoveryServiceSubnetRequest
     * @return GetRecoveryServiceSubnetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/GetRecoveryServiceSubnet.ts.html |here} to see how to use GetRecoveryServiceSubnet API.
     */
    getRecoveryServiceSubnet(getRecoveryServiceSubnetRequest: requests.GetRecoveryServiceSubnetRequest): Promise<responses.GetRecoveryServiceSubnetResponse>;
    /**
     * Gets the status of the work request based on the specified ID
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists the protected databases based on the specified parameters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProtectedDatabasesRequest
     * @return ListProtectedDatabasesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListProtectedDatabases.ts.html |here} to see how to use ListProtectedDatabases API.
     */
    listProtectedDatabases(listProtectedDatabasesRequest: requests.ListProtectedDatabasesRequest): Promise<responses.ListProtectedDatabasesResponse>;
    /**
     * Gets a list of protection policies based on the specified parameters.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListProtectionPoliciesRequest
     * @return ListProtectionPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListProtectionPolicies.ts.html |here} to see how to use ListProtectionPolicies API.
     */
    listProtectionPolicies(listProtectionPoliciesRequest: requests.ListProtectionPoliciesRequest): Promise<responses.ListProtectionPoliciesResponse>;
    /**
     * Returns a list of Recovery Service Subnets.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListRecoveryServiceSubnetsRequest
     * @return ListRecoveryServiceSubnetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListRecoveryServiceSubnets.ts.html |here} to see how to use ListRecoveryServiceSubnets API.
     */
    listRecoveryServiceSubnets(listRecoveryServiceSubnetsRequest: requests.ListRecoveryServiceSubnetsRequest): Promise<responses.ListRecoveryServiceSubnetsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Defines a preferred schedule to delete a protected database after you terminate the source database.
     * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
     * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ScheduleProtectedDatabaseDeletionRequest
     * @return ScheduleProtectedDatabaseDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/ScheduleProtectedDatabaseDeletion.ts.html |here} to see how to use ScheduleProtectedDatabaseDeletion API.
     */
    scheduleProtectedDatabaseDeletion(scheduleProtectedDatabaseDeletionRequest: requests.ScheduleProtectedDatabaseDeletionRequest): Promise<responses.ScheduleProtectedDatabaseDeletionResponse>;
    /**
     * Updates the Protected Database
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateProtectedDatabaseRequest
     * @return UpdateProtectedDatabaseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/UpdateProtectedDatabase.ts.html |here} to see how to use UpdateProtectedDatabase API.
     */
    updateProtectedDatabase(updateProtectedDatabaseRequest: requests.UpdateProtectedDatabaseRequest): Promise<responses.UpdateProtectedDatabaseResponse>;
    /**
     * Updates the specified protection policy.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateProtectionPolicyRequest
     * @return UpdateProtectionPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/UpdateProtectionPolicy.ts.html |here} to see how to use UpdateProtectionPolicy API.
     */
    updateProtectionPolicy(updateProtectionPolicyRequest: requests.UpdateProtectionPolicyRequest): Promise<responses.UpdateProtectionPolicyResponse>;
    /**
     * Updates the specified recovery service subnet.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateRecoveryServiceSubnetRequest
     * @return UpdateRecoveryServiceSubnetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/recovery/UpdateRecoveryServiceSubnet.ts.html |here} to see how to use UpdateRecoveryServiceSubnet API.
     */
    updateRecoveryServiceSubnet(updateRecoveryServiceSubnetRequest: requests.UpdateRecoveryServiceSubnetRequest): Promise<responses.UpdateRecoveryServiceSubnetResponse>;
}
export {};
