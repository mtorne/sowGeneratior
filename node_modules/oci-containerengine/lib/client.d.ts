/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { ContainerEngineWaiter } from "./containerengine-waiter";
declare const Breaker: any;
export declare enum ContainerEngineApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ContainerEngineClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ContainerEngineWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ContainerEngineWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ContainerEngineWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ContainerEngineWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Initiates cluster migration to use native VCN.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ClusterMigrateToNativeVcnRequest
     * @return ClusterMigrateToNativeVcnResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ClusterMigrateToNativeVcn.ts.html |here} to see how to use ClusterMigrateToNativeVcn API.
     */
    clusterMigrateToNativeVcn(clusterMigrateToNativeVcnRequest: requests.ClusterMigrateToNativeVcnRequest): Promise<responses.ClusterMigrateToNativeVcnResponse>;
    /**
     * Complete cluster credential rotation. Retire old credentials from kubernetes components.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CompleteCredentialRotationRequest
     * @return CompleteCredentialRotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CompleteCredentialRotation.ts.html |here} to see how to use CompleteCredentialRotation API.
     */
    completeCredentialRotation(completeCredentialRotationRequest: requests.CompleteCredentialRotationRequest): Promise<responses.CompleteCredentialRotationResponse>;
    /**
     * Create a new cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateClusterRequest
     * @return CreateClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CreateCluster.ts.html |here} to see how to use CreateCluster API.
     */
    createCluster(createClusterRequest: requests.CreateClusterRequest): Promise<responses.CreateClusterResponse>;
    /**
     * Create the Kubeconfig YAML for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateKubeconfigRequest
     * @return CreateKubeconfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CreateKubeconfig.ts.html |here} to see how to use CreateKubeconfig API.
     */
    createKubeconfig(createKubeconfigRequest: requests.CreateKubeconfigRequest): Promise<responses.CreateKubeconfigResponse>;
    /**
     * Create a new node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateNodePoolRequest
     * @return CreateNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CreateNodePool.ts.html |here} to see how to use CreateNodePool API.
     */
    createNodePool(createNodePoolRequest: requests.CreateNodePoolRequest): Promise<responses.CreateNodePoolResponse>;
    /**
     * Create a new virtual node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateVirtualNodePoolRequest
     * @return CreateVirtualNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CreateVirtualNodePool.ts.html |here} to see how to use CreateVirtualNodePool API.
     */
    createVirtualNodePool(createVirtualNodePoolRequest: requests.CreateVirtualNodePoolRequest): Promise<responses.CreateVirtualNodePoolResponse>;
    /**
     * Create the specified workloadMapping for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateWorkloadMappingRequest
     * @return CreateWorkloadMappingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/CreateWorkloadMapping.ts.html |here} to see how to use CreateWorkloadMapping API.
     */
    createWorkloadMapping(createWorkloadMappingRequest: requests.CreateWorkloadMappingRequest): Promise<responses.CreateWorkloadMappingResponse>;
    /**
     * Delete a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteClusterRequest
     * @return DeleteClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteCluster.ts.html |here} to see how to use DeleteCluster API.
     */
    deleteCluster(deleteClusterRequest: requests.DeleteClusterRequest): Promise<responses.DeleteClusterResponse>;
    /**
     * Delete node.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteNodeRequest
     * @return DeleteNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteNode.ts.html |here} to see how to use DeleteNode API.
     */
    deleteNode(deleteNodeRequest: requests.DeleteNodeRequest): Promise<responses.DeleteNodeResponse>;
    /**
     * Delete a node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteNodePoolRequest
     * @return DeleteNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteNodePool.ts.html |here} to see how to use DeleteNodePool API.
     */
    deleteNodePool(deleteNodePoolRequest: requests.DeleteNodePoolRequest): Promise<responses.DeleteNodePoolResponse>;
    /**
     * Delete a virtual node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteVirtualNodePoolRequest
     * @return DeleteVirtualNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteVirtualNodePool.ts.html |here} to see how to use DeleteVirtualNodePool API.
     */
    deleteVirtualNodePool(deleteVirtualNodePoolRequest: requests.DeleteVirtualNodePoolRequest): Promise<responses.DeleteVirtualNodePoolResponse>;
    /**
     * Cancel a work request that has not started.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteWorkRequestRequest
     * @return DeleteWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteWorkRequest.ts.html |here} to see how to use DeleteWorkRequest API.
     */
    deleteWorkRequest(deleteWorkRequestRequest: requests.DeleteWorkRequestRequest): Promise<responses.DeleteWorkRequestResponse>;
    /**
     * Delete workloadMapping for a provisioned cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteWorkloadMappingRequest
     * @return DeleteWorkloadMappingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DeleteWorkloadMapping.ts.html |here} to see how to use DeleteWorkloadMapping API.
     */
    deleteWorkloadMapping(deleteWorkloadMappingRequest: requests.DeleteWorkloadMappingRequest): Promise<responses.DeleteWorkloadMappingResponse>;
    /**
     * Disable addon for a provisioned cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DisableAddonRequest
     * @return DisableAddonResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/DisableAddon.ts.html |here} to see how to use DisableAddon API.
     */
    disableAddon(disableAddonRequest: requests.DisableAddonRequest): Promise<responses.DisableAddonResponse>;
    /**
     * Get the specified addon for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetAddonRequest
     * @return GetAddonResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetAddon.ts.html |here} to see how to use GetAddon API.
     */
    getAddon(getAddonRequest: requests.GetAddonRequest): Promise<responses.GetAddonResponse>;
    /**
     * Get the details of a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetClusterRequest
     * @return GetClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetCluster.ts.html |here} to see how to use GetCluster API.
     */
    getCluster(getClusterRequest: requests.GetClusterRequest): Promise<responses.GetClusterResponse>;
    /**
     * Get details on a cluster's migration to native VCN.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetClusterMigrateToNativeVcnStatusRequest
     * @return GetClusterMigrateToNativeVcnStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetClusterMigrateToNativeVcnStatus.ts.html |here} to see how to use GetClusterMigrateToNativeVcnStatus API.
     */
    getClusterMigrateToNativeVcnStatus(getClusterMigrateToNativeVcnStatusRequest: requests.GetClusterMigrateToNativeVcnStatusRequest): Promise<responses.GetClusterMigrateToNativeVcnStatusResponse>;
    /**
     * Get options available for clusters.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetClusterOptionsRequest
     * @return GetClusterOptionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetClusterOptions.ts.html |here} to see how to use GetClusterOptions API.
     */
    getClusterOptions(getClusterOptionsRequest: requests.GetClusterOptionsRequest): Promise<responses.GetClusterOptionsResponse>;
    /**
     * Get cluster credential rotation status.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetCredentialRotationStatusRequest
     * @return GetCredentialRotationStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetCredentialRotationStatus.ts.html |here} to see how to use GetCredentialRotationStatus API.
     */
    getCredentialRotationStatus(getCredentialRotationStatusRequest: requests.GetCredentialRotationStatusRequest): Promise<responses.GetCredentialRotationStatusResponse>;
    /**
     * Get the details of a node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetNodePoolRequest
     * @return GetNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetNodePool.ts.html |here} to see how to use GetNodePool API.
     */
    getNodePool(getNodePoolRequest: requests.GetNodePoolRequest): Promise<responses.GetNodePoolResponse>;
    /**
     * Get options available for node pools.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetNodePoolOptionsRequest
     * @return GetNodePoolOptionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetNodePoolOptions.ts.html |here} to see how to use GetNodePoolOptions API.
     */
    getNodePoolOptions(getNodePoolOptionsRequest: requests.GetNodePoolOptionsRequest): Promise<responses.GetNodePoolOptionsResponse>;
    /**
     * Get the details of a virtual node.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetVirtualNodeRequest
     * @return GetVirtualNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetVirtualNode.ts.html |here} to see how to use GetVirtualNode API.
     */
    getVirtualNode(getVirtualNodeRequest: requests.GetVirtualNodeRequest): Promise<responses.GetVirtualNodeResponse>;
    /**
     * Get the details of a virtual node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetVirtualNodePoolRequest
     * @return GetVirtualNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetVirtualNodePool.ts.html |here} to see how to use GetVirtualNodePool API.
     */
    getVirtualNodePool(getVirtualNodePoolRequest: requests.GetVirtualNodePoolRequest): Promise<responses.GetVirtualNodePoolResponse>;
    /**
     * Get the details of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Get the specified workloadMapping for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkloadMappingRequest
     * @return GetWorkloadMappingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/GetWorkloadMapping.ts.html |here} to see how to use GetWorkloadMapping API.
     */
    getWorkloadMapping(getWorkloadMappingRequest: requests.GetWorkloadMappingRequest): Promise<responses.GetWorkloadMappingResponse>;
    /**
     * Install the specified addon for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param InstallAddonRequest
     * @return InstallAddonResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/InstallAddon.ts.html |here} to see how to use InstallAddon API.
     */
    installAddon(installAddonRequest: requests.InstallAddonRequest): Promise<responses.InstallAddonResponse>;
    /**
     * Get list of supported addons for a specific kubernetes version.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAddonOptionsRequest
     * @return ListAddonOptionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListAddonOptions.ts.html |here} to see how to use ListAddonOptions API.
     */
    listAddonOptions(listAddonOptionsRequest: requests.ListAddonOptionsRequest): Promise<responses.ListAddonOptionsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAddonOptionsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AddonOptionSummary objects
     * contained in responses from the listAddonOptions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddonOptions(request: requests.ListAddonOptionsRequest): AsyncIterableIterator<model.AddonOptionSummary>;
    /**
     * NOTE: This function is deprecated in favor of listAddonOptionsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAddonOptions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddonOptionsResponses(request: requests.ListAddonOptionsRequest): AsyncIterableIterator<responses.ListAddonOptionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AddonOptionSummary objects
     * contained in responses from the listAddonOptions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddonOptionsRecordIterator(request: requests.ListAddonOptionsRequest): AsyncIterableIterator<model.AddonOptionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAddonOptions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddonOptionsResponseIterator(request: requests.ListAddonOptionsRequest): AsyncIterableIterator<responses.ListAddonOptionsResponse>;
    /**
     * List addon for a provisioned cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListAddonsRequest
     * @return ListAddonsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListAddons.ts.html |here} to see how to use ListAddons API.
     */
    listAddons(listAddonsRequest: requests.ListAddonsRequest): Promise<responses.ListAddonsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listAddonsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.AddonSummary objects
     * contained in responses from the listAddons operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddons(request: requests.ListAddonsRequest): AsyncIterableIterator<model.AddonSummary>;
    /**
     * NOTE: This function is deprecated in favor of listAddonsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listAddons operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAddonsResponses(request: requests.ListAddonsRequest): AsyncIterableIterator<responses.ListAddonsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AddonSummary objects
     * contained in responses from the listAddons operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddonsRecordIterator(request: requests.ListAddonsRequest): AsyncIterableIterator<model.AddonSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAddons operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAddonsResponseIterator(request: requests.ListAddonsRequest): AsyncIterableIterator<responses.ListAddonsResponse>;
    /**
     * List all the cluster objects in a compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListClustersRequest
     * @return ListClustersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListClusters.ts.html |here} to see how to use ListClusters API.
     */
    listClusters(listClustersRequest: requests.ListClustersRequest): Promise<responses.ListClustersResponse>;
    /**
     * NOTE: This function is deprecated in favor of listClustersRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ClusterSummary objects
     * contained in responses from the listClusters operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllClusters(request: requests.ListClustersRequest): AsyncIterableIterator<model.ClusterSummary>;
    /**
     * NOTE: This function is deprecated in favor of listClustersResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listClusters operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllClustersResponses(request: requests.ListClustersRequest): AsyncIterableIterator<responses.ListClustersResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ClusterSummary objects
     * contained in responses from the listClusters operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listClustersRecordIterator(request: requests.ListClustersRequest): AsyncIterableIterator<model.ClusterSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listClusters operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listClustersResponseIterator(request: requests.ListClustersRequest): AsyncIterableIterator<responses.ListClustersResponse>;
    /**
     * List all the node pools in a compartment, and optionally filter by cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListNodePoolsRequest
     * @return ListNodePoolsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListNodePools.ts.html |here} to see how to use ListNodePools API.
     */
    listNodePools(listNodePoolsRequest: requests.ListNodePoolsRequest): Promise<responses.ListNodePoolsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listNodePoolsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.NodePoolSummary objects
     * contained in responses from the listNodePools operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllNodePools(request: requests.ListNodePoolsRequest): AsyncIterableIterator<model.NodePoolSummary>;
    /**
     * NOTE: This function is deprecated in favor of listNodePoolsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listNodePools operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllNodePoolsResponses(request: requests.ListNodePoolsRequest): AsyncIterableIterator<responses.ListNodePoolsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.NodePoolSummary objects
     * contained in responses from the listNodePools operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listNodePoolsRecordIterator(request: requests.ListNodePoolsRequest): AsyncIterableIterator<model.NodePoolSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listNodePools operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listNodePoolsResponseIterator(request: requests.ListNodePoolsRequest): AsyncIterableIterator<responses.ListNodePoolsResponse>;
    /**
     * List all the Pod Shapes in a compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPodShapesRequest
     * @return ListPodShapesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListPodShapes.ts.html |here} to see how to use ListPodShapes API.
     */
    listPodShapes(listPodShapesRequest: requests.ListPodShapesRequest): Promise<responses.ListPodShapesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listPodShapesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.PodShapeSummary objects
     * contained in responses from the listPodShapes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPodShapes(request: requests.ListPodShapesRequest): AsyncIterableIterator<model.PodShapeSummary>;
    /**
     * NOTE: This function is deprecated in favor of listPodShapesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listPodShapes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPodShapesResponses(request: requests.ListPodShapesRequest): AsyncIterableIterator<responses.ListPodShapesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.PodShapeSummary objects
     * contained in responses from the listPodShapes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPodShapesRecordIterator(request: requests.ListPodShapesRequest): AsyncIterableIterator<model.PodShapeSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPodShapes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listPodShapesResponseIterator(request: requests.ListPodShapesRequest): AsyncIterableIterator<responses.ListPodShapesResponse>;
    /**
     * List all the virtual node pools in a compartment, and optionally filter by cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListVirtualNodePoolsRequest
     * @return ListVirtualNodePoolsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListVirtualNodePools.ts.html |here} to see how to use ListVirtualNodePools API.
     */
    listVirtualNodePools(listVirtualNodePoolsRequest: requests.ListVirtualNodePoolsRequest): Promise<responses.ListVirtualNodePoolsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listVirtualNodePoolsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.VirtualNodePoolSummary objects
     * contained in responses from the listVirtualNodePools operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVirtualNodePools(request: requests.ListVirtualNodePoolsRequest): AsyncIterableIterator<model.VirtualNodePoolSummary>;
    /**
     * NOTE: This function is deprecated in favor of listVirtualNodePoolsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listVirtualNodePools operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVirtualNodePoolsResponses(request: requests.ListVirtualNodePoolsRequest): AsyncIterableIterator<responses.ListVirtualNodePoolsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.VirtualNodePoolSummary objects
     * contained in responses from the listVirtualNodePools operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listVirtualNodePoolsRecordIterator(request: requests.ListVirtualNodePoolsRequest): AsyncIterableIterator<model.VirtualNodePoolSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listVirtualNodePools operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listVirtualNodePoolsResponseIterator(request: requests.ListVirtualNodePoolsRequest): AsyncIterableIterator<responses.ListVirtualNodePoolsResponse>;
    /**
     * List virtual nodes in a virtual node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListVirtualNodesRequest
     * @return ListVirtualNodesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListVirtualNodes.ts.html |here} to see how to use ListVirtualNodes API.
     */
    listVirtualNodes(listVirtualNodesRequest: requests.ListVirtualNodesRequest): Promise<responses.ListVirtualNodesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listVirtualNodesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.VirtualNodeSummary objects
     * contained in responses from the listVirtualNodes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVirtualNodes(request: requests.ListVirtualNodesRequest): AsyncIterableIterator<model.VirtualNodeSummary>;
    /**
     * NOTE: This function is deprecated in favor of listVirtualNodesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listVirtualNodes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVirtualNodesResponses(request: requests.ListVirtualNodesRequest): AsyncIterableIterator<responses.ListVirtualNodesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.VirtualNodeSummary objects
     * contained in responses from the listVirtualNodes operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listVirtualNodesRecordIterator(request: requests.ListVirtualNodesRequest): AsyncIterableIterator<model.VirtualNodeSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listVirtualNodes operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listVirtualNodesResponseIterator(request: requests.ListVirtualNodesRequest): AsyncIterableIterator<responses.ListVirtualNodesResponse>;
    /**
     * Get the errors of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Get the logs of a work request.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * List all work requests in a compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsRecordIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<model.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkRequestsResponseIterator(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * List workloadMappings for a provisioned cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkloadMappingsRequest
     * @return ListWorkloadMappingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ListWorkloadMappings.ts.html |here} to see how to use ListWorkloadMappings API.
     */
    listWorkloadMappings(listWorkloadMappingsRequest: requests.ListWorkloadMappingsRequest): Promise<responses.ListWorkloadMappingsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listWorkloadMappingsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.WorkloadMappingSummary objects
     * contained in responses from the listWorkloadMappings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkloadMappings(request: requests.ListWorkloadMappingsRequest): AsyncIterableIterator<model.WorkloadMappingSummary>;
    /**
     * NOTE: This function is deprecated in favor of listWorkloadMappingsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listWorkloadMappings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkloadMappingsResponses(request: requests.ListWorkloadMappingsRequest): AsyncIterableIterator<responses.ListWorkloadMappingsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkloadMappingSummary objects
     * contained in responses from the listWorkloadMappings operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkloadMappingsRecordIterator(request: requests.ListWorkloadMappingsRequest): AsyncIterableIterator<model.WorkloadMappingSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkloadMappings operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listWorkloadMappingsResponseIterator(request: requests.ListWorkloadMappingsRequest): AsyncIterableIterator<responses.ListWorkloadMappingsResponse>;
    /**
     * perform reboot action to node in cluster
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RebootClusterNodeRequest
     * @return RebootClusterNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/RebootClusterNode.ts.html |here} to see how to use RebootClusterNode API.
     */
    rebootClusterNode(rebootClusterNodeRequest: requests.RebootClusterNodeRequest): Promise<responses.RebootClusterNodeResponse>;
    /**
     * perform cycle action to node in cluster
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ReplaceBootVolumeClusterNodeRequest
     * @return ReplaceBootVolumeClusterNodeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/ReplaceBootVolumeClusterNode.ts.html |here} to see how to use ReplaceBootVolumeClusterNode API.
     */
    replaceBootVolumeClusterNode(replaceBootVolumeClusterNodeRequest: requests.ReplaceBootVolumeClusterNodeRequest): Promise<responses.ReplaceBootVolumeClusterNodeResponse>;
    /**
     * Start cluster credential rotation by adding new credentials, old credentials will still work after this operation.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StartCredentialRotationRequest
     * @return StartCredentialRotationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/StartCredentialRotation.ts.html |here} to see how to use StartCredentialRotation API.
     */
    startCredentialRotation(startCredentialRotationRequest: requests.StartCredentialRotationRequest): Promise<responses.StartCredentialRotationResponse>;
    /**
     * Update addon details for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateAddonRequest
     * @return UpdateAddonResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateAddon.ts.html |here} to see how to use UpdateAddon API.
     */
    updateAddon(updateAddonRequest: requests.UpdateAddonRequest): Promise<responses.UpdateAddonResponse>;
    /**
     * Update the details of a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateClusterRequest
     * @return UpdateClusterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateCluster.ts.html |here} to see how to use UpdateCluster API.
     */
    updateCluster(updateClusterRequest: requests.UpdateClusterRequest): Promise<responses.UpdateClusterResponse>;
    /**
     * Update the details of the cluster endpoint configuration.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateClusterEndpointConfigRequest
     * @return UpdateClusterEndpointConfigResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateClusterEndpointConfig.ts.html |here} to see how to use UpdateClusterEndpointConfig API.
     */
    updateClusterEndpointConfig(updateClusterEndpointConfigRequest: requests.UpdateClusterEndpointConfigRequest): Promise<responses.UpdateClusterEndpointConfigResponse>;
    /**
     * Update the details of a node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateNodePoolRequest
     * @return UpdateNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateNodePool.ts.html |here} to see how to use UpdateNodePool API.
     */
    updateNodePool(updateNodePoolRequest: requests.UpdateNodePoolRequest): Promise<responses.UpdateNodePoolResponse>;
    /**
     * Update the details of a virtual node pool.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateVirtualNodePoolRequest
     * @return UpdateVirtualNodePoolResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateVirtualNodePool.ts.html |here} to see how to use UpdateVirtualNodePool API.
     */
    updateVirtualNodePool(updateVirtualNodePoolRequest: requests.UpdateVirtualNodePoolRequest): Promise<responses.UpdateVirtualNodePoolResponse>;
    /**
     * Update workloadMapping details for a cluster.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateWorkloadMappingRequest
     * @return UpdateWorkloadMappingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/containerengine/UpdateWorkloadMapping.ts.html |here} to see how to use UpdateWorkloadMapping API.
     */
    updateWorkloadMapping(updateWorkloadMappingRequest: requests.UpdateWorkloadMappingRequest): Promise<responses.UpdateWorkloadMappingResponse>;
}
export {};
