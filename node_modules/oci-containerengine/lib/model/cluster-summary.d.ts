/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The properties that define a cluster summary.
 */
export interface ClusterSummary {
    /**
     * The OCID of the cluster.
     */
    "id"?: string;
    /**
     * The name of the cluster.
     */
    "name"?: string;
    /**
     * The OCID of the compartment in which the cluster exists.
     */
    "compartmentId"?: string;
    /**
     * The network configuration for access to the Cluster control plane.
     *
     */
    "endpointConfig"?: model.ClusterEndpointConfig;
    /**
     * The OCID of the virtual cloud network (VCN) in which the cluster exists
     */
    "vcnId"?: string;
    /**
     * The version of Kubernetes running on the cluster masters.
     */
    "kubernetesVersion"?: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Optional attributes for the cluster.
     */
    "options"?: model.ClusterCreateOptions;
    /**
     * Metadata about the cluster.
     */
    "metadata"?: model.ClusterMetadata;
    /**
     * The state of the cluster masters. For more information, see [Monitoring Clusters](https://docs.oracle.com/iaas/Content/ContEng/Tasks/contengmonitoringclusters.htm)
     */
    "lifecycleState"?: model.ClusterLifecycleState;
    /**
     * Details about the state of the cluster masters.
     */
    "lifecycleDetails"?: string;
    /**
     * Endpoints served up by the cluster masters.
     */
    "endpoints"?: model.ClusterEndpoints;
    /**
     * Available Kubernetes versions to which the clusters masters may be upgraded.
     */
    "availableKubernetesUpgrades"?: Array<string>;
    /**
     * The image verification policy for signature validation.
     *
     */
    "imagePolicyConfig"?: model.ImagePolicyConfig;
    /**
     * Available CNIs and network options for existing and new node pools of the cluster
     */
    "clusterPodNetworkOptions"?: Array<model.ClusterPodNetworkOptionDetails>;
    /**
     * Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
     */
    "type"?: model.ClusterType;
}
export declare namespace ClusterSummary {
    function getJsonObj(obj: ClusterSummary): object;
    function getDeserializedJsonObj(obj: ClusterSummary): object;
}
