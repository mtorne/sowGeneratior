"use strict";
/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialRotationStatus = void 0;
var CredentialRotationStatus;
(function (CredentialRotationStatus) {
    let Status;
    (function (Status) {
        Status["InProgress"] = "IN_PROGRESS";
        Status["Waiting"] = "WAITING";
        Status["Completed"] = "COMPLETED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = CredentialRotationStatus.Status || (CredentialRotationStatus.Status = {}));
    let StatusDetails;
    (function (StatusDetails) {
        StatusDetails["IssuingNewCredentials"] = "ISSUING_NEW_CREDENTIALS";
        StatusDetails["NewCredentialsIssued"] = "NEW_CREDENTIALS_ISSUED";
        StatusDetails["RetiringOldCredentials"] = "RETIRING_OLD_CREDENTIALS";
        StatusDetails["Completed"] = "COMPLETED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        StatusDetails["UnknownValue"] = "UNKNOWN_VALUE";
    })(StatusDetails = CredentialRotationStatus.StatusDetails || (CredentialRotationStatus.StatusDetails = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    CredentialRotationStatus.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    CredentialRotationStatus.getDeserializedJsonObj = getDeserializedJsonObj;
})(CredentialRotationStatus = exports.CredentialRotationStatus || (exports.CredentialRotationStatus = {}));
//# sourceMappingURL=credential-rotation-status.js.map