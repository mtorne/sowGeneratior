/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The types of work request operations.
 **/
export declare enum WorkRequestOperationType {
    ClusterCreate = "CLUSTER_CREATE",
    ClusterUpdate = "CLUSTER_UPDATE",
    ClusterDelete = "CLUSTER_DELETE",
    CreateNamespace = "CREATE_NAMESPACE",
    NodepoolCreate = "NODEPOOL_CREATE",
    NodepoolUpdate = "NODEPOOL_UPDATE",
    NodepoolDelete = "NODEPOOL_DELETE",
    NodepoolReconcile = "NODEPOOL_RECONCILE",
    NodepoolCycling = "NODEPOOL_CYCLING",
    WorkrequestCancel = "WORKREQUEST_CANCEL",
    VirtualnodepoolCreate = "VIRTUALNODEPOOL_CREATE",
    VirtualnodepoolUpdate = "VIRTUALNODEPOOL_UPDATE",
    VirtualnodepoolDelete = "VIRTUALNODEPOOL_DELETE",
    VirtualnodeDelete = "VIRTUALNODE_DELETE",
    EnableAddon = "ENABLE_ADDON",
    UpdateAddon = "UPDATE_ADDON",
    DisableAddon = "DISABLE_ADDON",
    ReconcileAddon = "RECONCILE_ADDON",
    ClusterNodeReboot = "CLUSTER_NODE_REBOOT",
    ClusterNodeReplaceBootVolume = "CLUSTER_NODE_REPLACE_BOOT_VOLUME",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
}
export declare namespace WorkRequestOperationType {
    function getJsonObj(obj: WorkRequestOperationType): WorkRequestOperationType;
    function getDeserializedJsonObj(obj: WorkRequestOperationType): WorkRequestOperationType;
}
