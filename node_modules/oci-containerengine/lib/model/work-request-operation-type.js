"use strict";
/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestOperationType = void 0;
/**
 * The types of work request operations.
 **/
var WorkRequestOperationType;
(function (WorkRequestOperationType) {
    WorkRequestOperationType["ClusterCreate"] = "CLUSTER_CREATE";
    WorkRequestOperationType["ClusterUpdate"] = "CLUSTER_UPDATE";
    WorkRequestOperationType["ClusterDelete"] = "CLUSTER_DELETE";
    WorkRequestOperationType["CreateNamespace"] = "CREATE_NAMESPACE";
    WorkRequestOperationType["NodepoolCreate"] = "NODEPOOL_CREATE";
    WorkRequestOperationType["NodepoolUpdate"] = "NODEPOOL_UPDATE";
    WorkRequestOperationType["NodepoolDelete"] = "NODEPOOL_DELETE";
    WorkRequestOperationType["NodepoolReconcile"] = "NODEPOOL_RECONCILE";
    WorkRequestOperationType["NodepoolCycling"] = "NODEPOOL_CYCLING";
    WorkRequestOperationType["WorkrequestCancel"] = "WORKREQUEST_CANCEL";
    WorkRequestOperationType["VirtualnodepoolCreate"] = "VIRTUALNODEPOOL_CREATE";
    WorkRequestOperationType["VirtualnodepoolUpdate"] = "VIRTUALNODEPOOL_UPDATE";
    WorkRequestOperationType["VirtualnodepoolDelete"] = "VIRTUALNODEPOOL_DELETE";
    WorkRequestOperationType["VirtualnodeDelete"] = "VIRTUALNODE_DELETE";
    WorkRequestOperationType["EnableAddon"] = "ENABLE_ADDON";
    WorkRequestOperationType["UpdateAddon"] = "UPDATE_ADDON";
    WorkRequestOperationType["DisableAddon"] = "DISABLE_ADDON";
    WorkRequestOperationType["ReconcileAddon"] = "RECONCILE_ADDON";
    WorkRequestOperationType["ClusterNodeReboot"] = "CLUSTER_NODE_REBOOT";
    WorkRequestOperationType["ClusterNodeReplaceBootVolume"] = "CLUSTER_NODE_REPLACE_BOOT_VOLUME";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    WorkRequestOperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
(function (WorkRequestOperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    WorkRequestOperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(WorkRequestOperationType = exports.WorkRequestOperationType || (exports.WorkRequestOperationType = {}));
//# sourceMappingURL=work-request-operation-type.js.map