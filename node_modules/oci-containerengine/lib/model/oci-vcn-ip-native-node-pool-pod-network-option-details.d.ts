/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Network options specific to using the OCI VCN Native CNI
 */
export interface OciVcnIpNativeNodePoolPodNetworkOptionDetails extends model.NodePoolPodNetworkOptionDetails {
    /**
     * The max number of pods per node in the node pool. This value will be limited by the number of VNICs attachable to the node pool shape
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maxPodsPerNode"?: number;
    /**
     * The OCIDs of the Network Security Group(s) to associate pods for this node pool with. For more information about NSGs, see {@link NetworkSecurityGroup}.
     *
     */
    "podNsgIds"?: Array<string>;
    /**
     * The OCIDs of the subnets in which to place pods for this node pool. This can be one of the node pool subnet IDs
     *
     */
    "podSubnetIds": Array<string>;
    "cniType": string;
}
export declare namespace OciVcnIpNativeNodePoolPodNetworkOptionDetails {
    function getJsonObj(obj: OciVcnIpNativeNodePoolPodNetworkOptionDetails, isParentJsonObj?: boolean): object;
    const cniType = "OCI_VCN_IP_NATIVE";
    function getDeserializedJsonObj(obj: OciVcnIpNativeNodePoolPodNetworkOptionDetails, isParentJsonObj?: boolean): object;
}
