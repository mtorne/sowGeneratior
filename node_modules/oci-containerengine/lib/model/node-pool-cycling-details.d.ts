/**
 * Kubernetes Engine API
 * API for the Kubernetes Engine service (also known as the Container Engine for Kubernetes service). Use this API to build, deploy,
and manage cloud-native applications. For more information, see
[Overview of Kubernetes Engine](https://docs.oracle.com/iaas/Content/ContEng/Concepts/contengoverview.htm).

 * OpenAPI spec version: 20180222
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Node Pool Cycling Details
 */
export interface NodePoolCyclingDetails {
    /**
     * Maximum active nodes that would be terminated from nodepool during the cycling nodepool process.
     * OKE supports both integer and percentage input.
     * Defaults to 0, Ranges from 0 to Nodepool size or 0% to 100%
     *
     */
    "maximumUnavailable"?: string;
    /**
     * Maximum additional new compute instances that would be temporarily created and added to nodepool during the cycling nodepool process.
     * OKE supports both integer and percentage input.
     * Defaults to 1, Ranges from 0 to Nodepool size or 0% to 100%
     *
     */
    "maximumSurge"?: string;
    /**
     * If cycling operation should be performed on the nodes in the node pool.
     */
    "isNodeCyclingEnabled"?: boolean;
    /**
     * An ordered list of cycle modes that should be performed on the OKE nodes.
     *
     */
    "cycleModes"?: Array<model.CycleMode>;
}
export declare namespace NodePoolCyclingDetails {
    function getJsonObj(obj: NodePoolCyclingDetails): object;
    function getDeserializedJsonObj(obj: NodePoolCyclingDetails): object;
}
