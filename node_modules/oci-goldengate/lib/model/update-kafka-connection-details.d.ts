/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information to update a Kafka Connection.
 *
 */
export interface UpdateKafkaConnectionDetails extends model.UpdateConnectionDetails {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     *
     */
    "streamPoolId"?: string;
    /**
     * Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka:
     * list of KafkaBootstrapServer objects specified by host/port.
     * Used for establishing the initial connection to the Kafka cluster.
     * Example: {@code \"server1.example.com:9092,server2.example.com:9092\"}
     *
     */
    "bootstrapServers"?: Array<model.KafkaBootstrapServer>;
    /**
     * Security Type for Kafka.
     *
     */
    "securityProtocol"?: string;
    /**
     * The username Oracle GoldenGate uses to connect the associated system of the given technology.
     * This username must already exist and be available by the system/application to be connected to
     * and must conform to the case sensitivty requirments defined in it.
     *
     */
    "username"?: string;
    /**
     * The password Oracle GoldenGate uses to connect the associated system of the given technology.
     * It must conform to the specific security requirements including length, case sensitivity, and so on.
     * Deprecated: This field is deprecated and replaced by \"passwordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "password"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored.
     * The password Oracle GoldenGate uses to connect the associated system of the given technology.
     * It must conform to the specific security requirements including length, case sensitivity, and so on.
     * If secretId is used plaintext field must not be provided.
     * Note: When provided, 'password' field must not be provided.
     *
     */
    "passwordSecretId"?: string;
    /**
     * The base64 encoded content of the TrustStore file.
     * Deprecated: This field is deprecated and replaced by \"trustStoreSecretId\". This field will be removed after February 15 2026.
     *
     */
    "trustStore"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the TrustStore file is stored.
     * Note: When provided, 'trustStore' field must not be provided.
     *
     */
    "trustStoreSecretId"?: string;
    /**
     * The TrustStore password.
     * Deprecated: This field is deprecated and replaced by \"trustStorePasswordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "trustStorePassword"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka TrustStore password is stored.
     * Note: When provided, 'trustStorePassword' field must not be provided.
     *
     */
    "trustStorePasswordSecretId"?: string;
    /**
     * The base64 encoded content of the KeyStore file.
     * Deprecated: This field is deprecated and replaced by \"keyStoreSecretId\". This field will be removed after February 15 2026.
     *
     */
    "keyStore"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the KeyStore file is stored.
     * Note: When provided, 'keyStore' field must not be provided.
     *
     */
    "keyStoreSecretId"?: string;
    /**
     * The KeyStore password.
     * Deprecated: This field is deprecated and replaced by \"keyStorePasswordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "keyStorePassword"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka KeyStore password is stored.
     * Note: When provided, 'keyStorePassword' field must not be provided.
     *
     */
    "keyStorePasswordSecretId"?: string;
    /**
     * The password for the cert inside of the KeyStore.
     * In case it differs from the KeyStore password, it should be provided.
     * Deprecated: This field is deprecated and replaced by \"sslKeyPasswordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "sslKeyPassword"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the kafka Ssl Key password is stored.
     * Note: When provided, 'sslKeyPassword' field must not be provided.
     *
     */
    "sslKeyPasswordSecretId"?: string;
    /**
     * The base64 encoded content of the consumer.properties file.
     *
     */
    "consumerProperties"?: string;
    /**
     * The base64 encoded content of the producer.properties file.
     *
     */
    "producerProperties"?: string;
    "connectionType": string;
}
export declare namespace UpdateKafkaConnectionDetails {
    function getJsonObj(obj: UpdateKafkaConnectionDetails, isParentJsonObj?: boolean): object;
    const connectionType = "KAFKA";
    function getDeserializedJsonObj(obj: UpdateKafkaConnectionDetails, isParentJsonObj?: boolean): object;
}
