/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Represents the metadata of a Databricks Connection.
 *
 */
export interface DatabricksConnection extends model.Connection {
    /**
     * The Databricks technology type.
     */
    "technologyType": DatabricksConnection.TechnologyType;
    /**
     * Used authentication mechanism to access Databricks.
     * Required fields by authentication types:
     * - PERSONAL_ACCESS_TOKEN: username is always 'token', user must enter password
     * - OAUTH_M2M: user must enter clientId and clientSecret
     *
     */
    "authenticationType": DatabricksConnection.AuthenticationType;
    /**
     * Connection URL.
     * e.g.: 'jdbc:databricks://adb-33934.4.azuredatabricks.net:443/default;transportMode=http;ssl=1;httpPath=sql/protocolv1/o/3393########44/0##3-7-hlrb'
     *
     */
    "connectionUrl": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the password is stored.
     * Note: When provided, 'password' field must not be provided.
     *
     */
    "passwordSecretId"?: string;
    /**
     * OAuth client id, only applicable for authenticationType == OAUTH_M2M
     *
     */
    "clientId"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the client secret is stored.
     * Only applicable for authenticationType == OAUTH_M2M.
     * Note: When provided, 'clientSecret' field must not be provided.
     *
     */
    "clientSecretSecretId"?: string;
    /**
     * Optional. External storage credential name to access files on object storage such as ADLS Gen2, S3 or GCS.
     *
     */
    "storageCredentialName"?: string;
    "connectionType": string;
}
export declare namespace DatabricksConnection {
    enum TechnologyType {
        Databricks = "DATABRICKS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AuthenticationType {
        PersonalAccessToken = "PERSONAL_ACCESS_TOKEN",
        OauthM2M = "OAUTH_M2M",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DatabricksConnection, isParentJsonObj?: boolean): object;
    const connectionType = "DATABRICKS";
    function getDeserializedJsonObj(obj: DatabricksConnection, isParentJsonObj?: boolean): object;
}
