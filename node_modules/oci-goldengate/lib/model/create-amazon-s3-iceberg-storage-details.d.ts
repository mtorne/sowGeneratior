/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about a new Amazon S3 storage used in the Iceberg connection.
 *
 */
export interface CreateAmazonS3IcebergStorageDetails extends model.CreateIcebergStorageDetails {
    /**
     * The scheme of the storage.
     *
     */
    "schemeType": string;
    /**
     * The endpoint URL of the Amazon S3 storage service.
     * e.g.: 'https://s3.amazonaws.com'
     *
     */
    "endpoint"?: string;
    /**
     * Access key ID to access the Amazon S3 bucket.
     *
     */
    "accessKeyId": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the Secret Access Key is stored.
     *
     */
    "secretAccessKeySecretId": string;
    /**
     * The AMAZON region where the S3 bucket is hosted.
     * e.g.: 'us-east-2'
     *
     */
    "region": string;
    /**
     * S3 bucket where Iceberg stores metadata and data files.
     */
    "bucket": string;
    "storageType": string;
}
export declare namespace CreateAmazonS3IcebergStorageDetails {
    function getJsonObj(obj: CreateAmazonS3IcebergStorageDetails, isParentJsonObj?: boolean): object;
    const storageType = "AMAZON_S3";
    function getDeserializedJsonObj(obj: CreateAmazonS3IcebergStorageDetails, isParentJsonObj?: boolean): object;
}
