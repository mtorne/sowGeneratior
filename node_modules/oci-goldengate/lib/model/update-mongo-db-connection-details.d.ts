/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information to update a MongoDB Connection.
 *
 */
export interface UpdateMongoDbConnectionDetails extends model.UpdateConnectionDetails {
    /**
     * MongoDB connection string.
     * e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'
     *
     */
    "connectionString"?: string;
    /**
     * The username Oracle GoldenGate uses to connect to the database.
     * This username must already exist and be available by the database to be connected to.
     *
     */
    "username"?: string;
    /**
     * The password Oracle GoldenGate uses to connect the associated database.
     * Deprecated: This field is deprecated and replaced by \"passwordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "password"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password Oracle GoldenGate uses to connect the associated database.
     * Note: When provided, 'password' field must not be provided.
     *
     */
    "passwordSecretId"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
     *
     */
    "databaseId"?: string;
    /**
     * Security Type for MongoDB.
     */
    "securityProtocol"?: string;
    /**
     * Database Certificate - The base64 encoded content of a .pem file, containing the server public key (for 1 and 2-way SSL).
     * It is not included in GET responses if the {@code view=COMPACT} query parameter is specified.
     *
     */
    "tlsCaFile"?: string;
    /**
     * Client Certificate - The base64 encoded content of a .pem file, containing the client public key (for 2-way SSL).
     * Deprecated: This field is deprecated and replaced by \"tlsCertificateKeyFileSecretId\". This field will be removed after February 15 2026.
     *
     */
    "tlsCertificateKeyFile"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the certificate key file of the mtls connection.
     * - The content of a .pem file containing the client private key (for 2-way SSL).
     * Note: When provided, 'tlsCertificateKeyFile' field must not be provided.
     *
     */
    "tlsCertificateKeyFileSecretId"?: string;
    /**
     * Client Certificate key file password.
     * Deprecated: This field is deprecated and replaced by \"tlsCertificateKeyFilePasswordSecretId\". This field will be removed after February 15 2026.
     *
     */
    "tlsCertificateKeyFilePassword"?: string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret that stores the password of the tls certificate key file.
     * Note: When provided, 'tlsCertificateKeyFilePassword' field must not be provided.
     *
     */
    "tlsCertificateKeyFilePasswordSecretId"?: string;
    "connectionType": string;
}
export declare namespace UpdateMongoDbConnectionDetails {
    function getJsonObj(obj: UpdateMongoDbConnectionDetails, isParentJsonObj?: boolean): object;
    const connectionType = "MONGODB";
    function getDeserializedJsonObj(obj: UpdateMongoDbConnectionDetails, isParentJsonObj?: boolean): object;
}
