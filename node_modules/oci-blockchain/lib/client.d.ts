/**
 * Blockchain Platform Control Plane API
 * Blockchain Platform Control Plane API
 * OpenAPI spec version: 20191010
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { BlockchainPlatformWaiter } from "./blockchainplatform-waiter";
declare const Breaker: any;
export declare enum BlockchainPlatformApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class BlockchainPlatformClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": BlockchainPlatformWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new BlockchainPlatformWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): BlockchainPlatformWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): BlockchainPlatformWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Change Blockchain Platform Compartment
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeBlockchainPlatformCompartmentRequest
     * @return ChangeBlockchainPlatformCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ChangeBlockchainPlatformCompartment.ts.html |here} to see how to use ChangeBlockchainPlatformCompartment API.
     */
    changeBlockchainPlatformCompartment(changeBlockchainPlatformCompartmentRequest: requests.ChangeBlockchainPlatformCompartmentRequest): Promise<responses.ChangeBlockchainPlatformCompartmentResponse>;
    /**
     * Creates a new Blockchain Platform.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateBlockchainPlatformRequest
     * @return CreateBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/CreateBlockchainPlatform.ts.html |here} to see how to use CreateBlockchainPlatform API.
     */
    createBlockchainPlatform(createBlockchainPlatformRequest: requests.CreateBlockchainPlatformRequest): Promise<responses.CreateBlockchainPlatformResponse>;
    /**
     * Create Blockchain Platform Osn
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateOsnRequest
     * @return CreateOsnResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/CreateOsn.ts.html |here} to see how to use CreateOsn API.
     */
    createOsn(createOsnRequest: requests.CreateOsnRequest): Promise<responses.CreateOsnResponse>;
    /**
     * Create Blockchain Platform Peer
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreatePeerRequest
     * @return CreatePeerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/CreatePeer.ts.html |here} to see how to use CreatePeer API.
     */
    createPeer(createPeerRequest: requests.CreatePeerRequest): Promise<responses.CreatePeerResponse>;
    /**
     * Delete a particular of a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteBlockchainPlatformRequest
     * @return DeleteBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/DeleteBlockchainPlatform.ts.html |here} to see how to use DeleteBlockchainPlatform API.
     */
    deleteBlockchainPlatform(deleteBlockchainPlatformRequest: requests.DeleteBlockchainPlatformRequest): Promise<responses.DeleteBlockchainPlatformResponse>;
    /**
     * Delete a particular OSN of a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteOsnRequest
     * @return DeleteOsnResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/DeleteOsn.ts.html |here} to see how to use DeleteOsn API.
     */
    deleteOsn(deleteOsnRequest: requests.DeleteOsnRequest): Promise<responses.DeleteOsnResponse>;
    /**
     * Delete a particular peer of a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeletePeerRequest
     * @return DeletePeerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/DeletePeer.ts.html |here} to see how to use DeletePeer API.
     */
    deletePeer(deletePeerRequest: requests.DeletePeerRequest): Promise<responses.DeletePeerResponse>;
    /**
     * Attempts to cancel the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteWorkRequestRequest
     * @return DeleteWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/DeleteWorkRequest.ts.html |here} to see how to use DeleteWorkRequest API.
     */
    deleteWorkRequest(deleteWorkRequestRequest: requests.DeleteWorkRequestRequest): Promise<responses.DeleteWorkRequestResponse>;
    /**
     * Gets information about a Blockchain Platform identified by the specific id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetBlockchainPlatformRequest
     * @return GetBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/GetBlockchainPlatform.ts.html |here} to see how to use GetBlockchainPlatform API.
     */
    getBlockchainPlatform(getBlockchainPlatformRequest: requests.GetBlockchainPlatformRequest): Promise<responses.GetBlockchainPlatformResponse>;
    /**
     * Gets information about an OSN identified by the specific id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetOsnRequest
     * @return GetOsnResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/GetOsn.ts.html |here} to see how to use GetOsn API.
     */
    getOsn(getOsnRequest: requests.GetOsnRequest): Promise<responses.GetOsnResponse>;
    /**
     * Gets information about a peer identified by the specific id
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPeerRequest
     * @return GetPeerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/GetPeer.ts.html |here} to see how to use GetPeer API.
     */
    getPeer(getPeerRequest: requests.GetPeerRequest): Promise<responses.GetPeerResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * List Blockchain Platform Patches
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListBlockchainPlatformPatchesRequest
     * @return ListBlockchainPlatformPatchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListBlockchainPlatformPatches.ts.html |here} to see how to use ListBlockchainPlatformPatches API.
     */
    listBlockchainPlatformPatches(listBlockchainPlatformPatchesRequest: requests.ListBlockchainPlatformPatchesRequest): Promise<responses.ListBlockchainPlatformPatchesResponse>;
    /**
     * Returns a list Blockchain Platform Instances in a compartment
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListBlockchainPlatformsRequest
     * @return ListBlockchainPlatformsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListBlockchainPlatforms.ts.html |here} to see how to use ListBlockchainPlatforms API.
     */
    listBlockchainPlatforms(listBlockchainPlatformsRequest: requests.ListBlockchainPlatformsRequest): Promise<responses.ListBlockchainPlatformsResponse>;
    /**
     * List Blockchain Platform OSNs
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListOsnsRequest
     * @return ListOsnsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListOsns.ts.html |here} to see how to use ListOsns API.
     */
    listOsns(listOsnsRequest: requests.ListOsnsRequest): Promise<responses.ListOsnsResponse>;
    /**
     * List Blockchain Platform Peers
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPeersRequest
     * @return ListPeersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListPeers.ts.html |here} to see how to use ListPeers API.
     */
    listPeers(listPeersRequest: requests.ListPeersRequest): Promise<responses.ListPeersResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Preview Scale Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PreviewScaleBlockchainPlatformRequest
     * @return PreviewScaleBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/PreviewScaleBlockchainPlatform.ts.html |here} to see how to use PreviewScaleBlockchainPlatform API.
     */
    previewScaleBlockchainPlatform(previewScaleBlockchainPlatformRequest: requests.PreviewScaleBlockchainPlatformRequest): Promise<responses.PreviewScaleBlockchainPlatformResponse>;
    /**
     * Scale Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ScaleBlockchainPlatformRequest
     * @return ScaleBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/ScaleBlockchainPlatform.ts.html |here} to see how to use ScaleBlockchainPlatform API.
     */
    scaleBlockchainPlatform(scaleBlockchainPlatformRequest: requests.ScaleBlockchainPlatformRequest): Promise<responses.ScaleBlockchainPlatformResponse>;
    /**
     * Start a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StartBlockchainPlatformRequest
     * @return StartBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/StartBlockchainPlatform.ts.html |here} to see how to use StartBlockchainPlatform API.
     */
    startBlockchainPlatform(startBlockchainPlatformRequest: requests.StartBlockchainPlatformRequest): Promise<responses.StartBlockchainPlatformResponse>;
    /**
     * Stop a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param StopBlockchainPlatformRequest
     * @return StopBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/StopBlockchainPlatform.ts.html |here} to see how to use StopBlockchainPlatform API.
     */
    stopBlockchainPlatform(stopBlockchainPlatformRequest: requests.StopBlockchainPlatformRequest): Promise<responses.StopBlockchainPlatformResponse>;
    /**
     * Update a particular of a Blockchain Platform
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateBlockchainPlatformRequest
     * @return UpdateBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/UpdateBlockchainPlatform.ts.html |here} to see how to use UpdateBlockchainPlatform API.
     */
    updateBlockchainPlatform(updateBlockchainPlatformRequest: requests.UpdateBlockchainPlatformRequest): Promise<responses.UpdateBlockchainPlatformResponse>;
    /**
     * Update Blockchain Platform OSN
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateOsnRequest
     * @return UpdateOsnResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/UpdateOsn.ts.html |here} to see how to use UpdateOsn API.
     */
    updateOsn(updateOsnRequest: requests.UpdateOsnRequest): Promise<responses.UpdateOsnResponse>;
    /**
     * Update Blockchain Platform Peer
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdatePeerRequest
     * @return UpdatePeerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/UpdatePeer.ts.html |here} to see how to use UpdatePeer API.
     */
    updatePeer(updatePeerRequest: requests.UpdatePeerRequest): Promise<responses.UpdatePeerResponse>;
    /**
     * Upgrade a Blockchain Platform version
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpgradeBlockchainPlatformRequest
     * @return UpgradeBlockchainPlatformResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/blockchain/UpgradeBlockchainPlatform.ts.html |here} to see how to use UpgradeBlockchainPlatform API.
     */
    upgradeBlockchainPlatform(upgradeBlockchainPlatformRequest: requests.UpgradeBlockchainPlatformRequest): Promise<responses.UpgradeBlockchainPlatformResponse>;
}
export {};
