"use strict";
/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureAlgorithm = void 0;
/**
 * The algorithm used to sign the public key certificate.
 **/
var SignatureAlgorithm;
(function (SignatureAlgorithm) {
    SignatureAlgorithm["Sha256WithRsa"] = "SHA256_WITH_RSA";
    SignatureAlgorithm["Sha384WithRsa"] = "SHA384_WITH_RSA";
    SignatureAlgorithm["Sha512WithRsa"] = "SHA512_WITH_RSA";
    SignatureAlgorithm["Sha256WithEcdsa"] = "SHA256_WITH_ECDSA";
    SignatureAlgorithm["Sha384WithEcdsa"] = "SHA384_WITH_ECDSA";
    SignatureAlgorithm["Sha512WithEcdsa"] = "SHA512_WITH_ECDSA";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    SignatureAlgorithm["UnknownValue"] = "UNKNOWN_VALUE";
})(SignatureAlgorithm = exports.SignatureAlgorithm || (exports.SignatureAlgorithm = {}));
(function (SignatureAlgorithm) {
    function getJsonObj(obj) {
        return obj;
    }
    SignatureAlgorithm.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    SignatureAlgorithm.getDeserializedJsonObj = getDeserializedJsonObj;
})(SignatureAlgorithm = exports.SignatureAlgorithm || (exports.SignatureAlgorithm = {}));
//# sourceMappingURL=signature-algorithm.js.map