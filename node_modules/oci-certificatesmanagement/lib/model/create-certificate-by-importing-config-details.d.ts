/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of the configuration for creating a certificate based on the keys from an imported certificate.
 */
export interface CreateCertificateByImportingConfigDetails extends model.CreateCertificateConfigDetails {
    /**
     * The certificate chain (in PEM format) for the imported certificate.
     */
    "certChainPem": string;
    /**
     * The private key (in PEM format) for the imported certificate.
     */
    "privateKeyPem": string;
    /**
     * The certificate (in PEM format) for the imported certificate.
     */
    "certificatePem": string;
    /**
     * An optional passphrase for the private key.
     */
    "privateKeyPemPassphrase"?: string;
    "configType": string;
}
export declare namespace CreateCertificateByImportingConfigDetails {
    function getJsonObj(obj: CreateCertificateByImportingConfigDetails, isParentJsonObj?: boolean): object;
    const configType = "IMPORTED";
    function getDeserializedJsonObj(obj: CreateCertificateByImportingConfigDetails, isParentJsonObj?: boolean): object;
}
