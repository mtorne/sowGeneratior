/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The details of the CA bundle that you want to create.
 */
export interface CreateCaBundleDetails {
    /**
     * A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    "name": string;
    /**
     * A brief description of the CA bundle.
     */
    "description"?: string;
    /**
     * The OCID of the compartment for the CA bundle.
     */
    "compartmentId": string;
    /**
     * Certificates (in PEM format) to include in the CA bundle.
     */
    "caBundlePem": string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateCaBundleDetails {
    function getJsonObj(obj: CreateCaBundleDetails): object;
    function getDeserializedJsonObj(obj: CreateCaBundleDetails): object;
}
