"use strict";
/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureAlgorithm = exports.ScheduleCertificateVersionDeletionDetails = exports.ScheduleCertificateDeletionDetails = exports.ScheduleCertificateAuthorityVersionDeletionDetails = exports.ScheduleCertificateAuthorityDeletionDetails = exports.RevokeCertificateVersionDetails = exports.RevokeCertificateAuthorityVersionDetails = exports.RevocationStatus = exports.RevocationReason = exports.ObjectStorageBucketConfigDetails = exports.KeyAlgorithm = exports.CreateCertificateDetails = exports.CreateCertificateConfigDetails = exports.CreateCertificateAuthorityDetails = exports.CreateCertificateAuthorityConfigDetails = exports.CreateCaBundleDetails = exports.ChangeCertificateCompartmentDetails = exports.ChangeCertificateAuthorityCompartmentDetails = exports.ChangeCaBundleCompartmentDetails = exports.CertificateVersionSummary = exports.CertificateVersionCollection = exports.CertificateVersion = exports.CertificateSummary = exports.CertificateSubjectAlternativeName = exports.CertificateSubject = exports.CertificateRule = exports.CertificateRevocationListDetails = exports.CertificateProfileType = exports.CertificateLifecycleState = exports.CertificateConfigType = exports.CertificateCollection = exports.CertificateAuthorityVersionSummary = exports.CertificateAuthorityVersionCollection = exports.CertificateAuthorityVersion = exports.CertificateAuthoritySummary = exports.CertificateAuthorityRule = exports.CertificateAuthorityLifecycleState = exports.CertificateAuthorityConfigType = exports.CertificateAuthorityCollection = exports.CertificateAuthority = exports.Certificate = exports.CaBundleSummary = exports.CaBundleLifecycleState = exports.CaBundleCollection = exports.CaBundle = exports.AssociationType = exports.AssociationSummary = exports.AssociationLifecycleState = exports.AssociationCollection = exports.Association = void 0;
exports.UpdateSubordinateCaIssuedByInternalCaConfigDetails = exports.UpdateRootCaByGeneratingInternallyConfigDetails = exports.UpdateCertificateManagedExternallyIssuedByInternalCaConfigDetails = exports.UpdateCertificateIssuedByInternalCaConfigDetails = exports.UpdateCertificateByImportingConfigDetails = exports.CreateSubordinateCaIssuedByInternalCaConfigDetails = exports.CreateRootCaByGeneratingInternallyConfigDetails = exports.CreateCertificateManagedExternallyIssuedByInternalCaConfigDetails = exports.CreateCertificateIssuedByInternalCaConfigDetails = exports.CreateCertificateByImportingConfigDetails = exports.CertificateRenewalRule = exports.CertificateAuthorityIssuanceExpiryRule = exports.VersionStage = exports.Validity = exports.UpdateCertificateDetails = exports.UpdateCertificateConfigDetails = exports.UpdateCertificateAuthorityDetails = exports.UpdateCertificateAuthorityConfigDetails = exports.UpdateCaBundleDetails = void 0;
const Association = __importStar(require("./association"));
exports.Association = Association.Association;
const AssociationCollection = __importStar(require("./association-collection"));
exports.AssociationCollection = AssociationCollection.AssociationCollection;
const AssociationLifecycleState = __importStar(require("./association-lifecycle-state"));
exports.AssociationLifecycleState = AssociationLifecycleState.AssociationLifecycleState;
const AssociationSummary = __importStar(require("./association-summary"));
exports.AssociationSummary = AssociationSummary.AssociationSummary;
const AssociationType = __importStar(require("./association-type"));
exports.AssociationType = AssociationType.AssociationType;
const CaBundle = __importStar(require("./ca-bundle"));
exports.CaBundle = CaBundle.CaBundle;
const CaBundleCollection = __importStar(require("./ca-bundle-collection"));
exports.CaBundleCollection = CaBundleCollection.CaBundleCollection;
const CaBundleLifecycleState = __importStar(require("./ca-bundle-lifecycle-state"));
exports.CaBundleLifecycleState = CaBundleLifecycleState.CaBundleLifecycleState;
const CaBundleSummary = __importStar(require("./ca-bundle-summary"));
exports.CaBundleSummary = CaBundleSummary.CaBundleSummary;
const Certificate = __importStar(require("./certificate"));
exports.Certificate = Certificate.Certificate;
const CertificateAuthority = __importStar(require("./certificate-authority"));
exports.CertificateAuthority = CertificateAuthority.CertificateAuthority;
const CertificateAuthorityCollection = __importStar(require("./certificate-authority-collection"));
exports.CertificateAuthorityCollection = CertificateAuthorityCollection.CertificateAuthorityCollection;
const CertificateAuthorityConfigType = __importStar(require("./certificate-authority-config-type"));
exports.CertificateAuthorityConfigType = CertificateAuthorityConfigType.CertificateAuthorityConfigType;
const CertificateAuthorityLifecycleState = __importStar(require("./certificate-authority-lifecycle-state"));
exports.CertificateAuthorityLifecycleState = CertificateAuthorityLifecycleState.CertificateAuthorityLifecycleState;
const CertificateAuthorityRule = __importStar(require("./certificate-authority-rule"));
exports.CertificateAuthorityRule = CertificateAuthorityRule.CertificateAuthorityRule;
const CertificateAuthoritySummary = __importStar(require("./certificate-authority-summary"));
exports.CertificateAuthoritySummary = CertificateAuthoritySummary.CertificateAuthoritySummary;
const CertificateAuthorityVersion = __importStar(require("./certificate-authority-version"));
exports.CertificateAuthorityVersion = CertificateAuthorityVersion.CertificateAuthorityVersion;
const CertificateAuthorityVersionCollection = __importStar(require("./certificate-authority-version-collection"));
exports.CertificateAuthorityVersionCollection = CertificateAuthorityVersionCollection.CertificateAuthorityVersionCollection;
const CertificateAuthorityVersionSummary = __importStar(require("./certificate-authority-version-summary"));
exports.CertificateAuthorityVersionSummary = CertificateAuthorityVersionSummary.CertificateAuthorityVersionSummary;
const CertificateCollection = __importStar(require("./certificate-collection"));
exports.CertificateCollection = CertificateCollection.CertificateCollection;
const CertificateConfigType = __importStar(require("./certificate-config-type"));
exports.CertificateConfigType = CertificateConfigType.CertificateConfigType;
const CertificateLifecycleState = __importStar(require("./certificate-lifecycle-state"));
exports.CertificateLifecycleState = CertificateLifecycleState.CertificateLifecycleState;
const CertificateProfileType = __importStar(require("./certificate-profile-type"));
exports.CertificateProfileType = CertificateProfileType.CertificateProfileType;
const CertificateRevocationListDetails = __importStar(require("./certificate-revocation-list-details"));
exports.CertificateRevocationListDetails = CertificateRevocationListDetails.CertificateRevocationListDetails;
const CertificateRule = __importStar(require("./certificate-rule"));
exports.CertificateRule = CertificateRule.CertificateRule;
const CertificateSubject = __importStar(require("./certificate-subject"));
exports.CertificateSubject = CertificateSubject.CertificateSubject;
const CertificateSubjectAlternativeName = __importStar(require("./certificate-subject-alternative-name"));
exports.CertificateSubjectAlternativeName = CertificateSubjectAlternativeName.CertificateSubjectAlternativeName;
const CertificateSummary = __importStar(require("./certificate-summary"));
exports.CertificateSummary = CertificateSummary.CertificateSummary;
const CertificateVersion = __importStar(require("./certificate-version"));
exports.CertificateVersion = CertificateVersion.CertificateVersion;
const CertificateVersionCollection = __importStar(require("./certificate-version-collection"));
exports.CertificateVersionCollection = CertificateVersionCollection.CertificateVersionCollection;
const CertificateVersionSummary = __importStar(require("./certificate-version-summary"));
exports.CertificateVersionSummary = CertificateVersionSummary.CertificateVersionSummary;
const ChangeCaBundleCompartmentDetails = __importStar(require("./change-ca-bundle-compartment-details"));
exports.ChangeCaBundleCompartmentDetails = ChangeCaBundleCompartmentDetails.ChangeCaBundleCompartmentDetails;
const ChangeCertificateAuthorityCompartmentDetails = __importStar(require("./change-certificate-authority-compartment-details"));
exports.ChangeCertificateAuthorityCompartmentDetails = ChangeCertificateAuthorityCompartmentDetails.ChangeCertificateAuthorityCompartmentDetails;
const ChangeCertificateCompartmentDetails = __importStar(require("./change-certificate-compartment-details"));
exports.ChangeCertificateCompartmentDetails = ChangeCertificateCompartmentDetails.ChangeCertificateCompartmentDetails;
const CreateCaBundleDetails = __importStar(require("./create-ca-bundle-details"));
exports.CreateCaBundleDetails = CreateCaBundleDetails.CreateCaBundleDetails;
const CreateCertificateAuthorityConfigDetails = __importStar(require("./create-certificate-authority-config-details"));
exports.CreateCertificateAuthorityConfigDetails = CreateCertificateAuthorityConfigDetails.CreateCertificateAuthorityConfigDetails;
const CreateCertificateAuthorityDetails = __importStar(require("./create-certificate-authority-details"));
exports.CreateCertificateAuthorityDetails = CreateCertificateAuthorityDetails.CreateCertificateAuthorityDetails;
const CreateCertificateConfigDetails = __importStar(require("./create-certificate-config-details"));
exports.CreateCertificateConfigDetails = CreateCertificateConfigDetails.CreateCertificateConfigDetails;
const CreateCertificateDetails = __importStar(require("./create-certificate-details"));
exports.CreateCertificateDetails = CreateCertificateDetails.CreateCertificateDetails;
const KeyAlgorithm = __importStar(require("./key-algorithm"));
exports.KeyAlgorithm = KeyAlgorithm.KeyAlgorithm;
const ObjectStorageBucketConfigDetails = __importStar(require("./object-storage-bucket-config-details"));
exports.ObjectStorageBucketConfigDetails = ObjectStorageBucketConfigDetails.ObjectStorageBucketConfigDetails;
const RevocationReason = __importStar(require("./revocation-reason"));
exports.RevocationReason = RevocationReason.RevocationReason;
const RevocationStatus = __importStar(require("./revocation-status"));
exports.RevocationStatus = RevocationStatus.RevocationStatus;
const RevokeCertificateAuthorityVersionDetails = __importStar(require("./revoke-certificate-authority-version-details"));
exports.RevokeCertificateAuthorityVersionDetails = RevokeCertificateAuthorityVersionDetails.RevokeCertificateAuthorityVersionDetails;
const RevokeCertificateVersionDetails = __importStar(require("./revoke-certificate-version-details"));
exports.RevokeCertificateVersionDetails = RevokeCertificateVersionDetails.RevokeCertificateVersionDetails;
const ScheduleCertificateAuthorityDeletionDetails = __importStar(require("./schedule-certificate-authority-deletion-details"));
exports.ScheduleCertificateAuthorityDeletionDetails = ScheduleCertificateAuthorityDeletionDetails.ScheduleCertificateAuthorityDeletionDetails;
const ScheduleCertificateAuthorityVersionDeletionDetails = __importStar(require("./schedule-certificate-authority-version-deletion-details"));
exports.ScheduleCertificateAuthorityVersionDeletionDetails = ScheduleCertificateAuthorityVersionDeletionDetails.ScheduleCertificateAuthorityVersionDeletionDetails;
const ScheduleCertificateDeletionDetails = __importStar(require("./schedule-certificate-deletion-details"));
exports.ScheduleCertificateDeletionDetails = ScheduleCertificateDeletionDetails.ScheduleCertificateDeletionDetails;
const ScheduleCertificateVersionDeletionDetails = __importStar(require("./schedule-certificate-version-deletion-details"));
exports.ScheduleCertificateVersionDeletionDetails = ScheduleCertificateVersionDeletionDetails.ScheduleCertificateVersionDeletionDetails;
const SignatureAlgorithm = __importStar(require("./signature-algorithm"));
exports.SignatureAlgorithm = SignatureAlgorithm.SignatureAlgorithm;
const UpdateCaBundleDetails = __importStar(require("./update-ca-bundle-details"));
exports.UpdateCaBundleDetails = UpdateCaBundleDetails.UpdateCaBundleDetails;
const UpdateCertificateAuthorityConfigDetails = __importStar(require("./update-certificate-authority-config-details"));
exports.UpdateCertificateAuthorityConfigDetails = UpdateCertificateAuthorityConfigDetails.UpdateCertificateAuthorityConfigDetails;
const UpdateCertificateAuthorityDetails = __importStar(require("./update-certificate-authority-details"));
exports.UpdateCertificateAuthorityDetails = UpdateCertificateAuthorityDetails.UpdateCertificateAuthorityDetails;
const UpdateCertificateConfigDetails = __importStar(require("./update-certificate-config-details"));
exports.UpdateCertificateConfigDetails = UpdateCertificateConfigDetails.UpdateCertificateConfigDetails;
const UpdateCertificateDetails = __importStar(require("./update-certificate-details"));
exports.UpdateCertificateDetails = UpdateCertificateDetails.UpdateCertificateDetails;
const Validity = __importStar(require("./validity"));
exports.Validity = Validity.Validity;
const VersionStage = __importStar(require("./version-stage"));
exports.VersionStage = VersionStage.VersionStage;
const CertificateAuthorityIssuanceExpiryRule = __importStar(require("./certificate-authority-issuance-expiry-rule"));
exports.CertificateAuthorityIssuanceExpiryRule = CertificateAuthorityIssuanceExpiryRule.CertificateAuthorityIssuanceExpiryRule;
const CertificateRenewalRule = __importStar(require("./certificate-renewal-rule"));
exports.CertificateRenewalRule = CertificateRenewalRule.CertificateRenewalRule;
const CreateCertificateByImportingConfigDetails = __importStar(require("./create-certificate-by-importing-config-details"));
exports.CreateCertificateByImportingConfigDetails = CreateCertificateByImportingConfigDetails.CreateCertificateByImportingConfigDetails;
const CreateCertificateIssuedByInternalCaConfigDetails = __importStar(require("./create-certificate-issued-by-internal-ca-config-details"));
exports.CreateCertificateIssuedByInternalCaConfigDetails = CreateCertificateIssuedByInternalCaConfigDetails.CreateCertificateIssuedByInternalCaConfigDetails;
const CreateCertificateManagedExternallyIssuedByInternalCaConfigDetails = __importStar(require("./create-certificate-managed-externally-issued-by-internal-ca-config-details"));
exports.CreateCertificateManagedExternallyIssuedByInternalCaConfigDetails = CreateCertificateManagedExternallyIssuedByInternalCaConfigDetails.CreateCertificateManagedExternallyIssuedByInternalCaConfigDetails;
const CreateRootCaByGeneratingInternallyConfigDetails = __importStar(require("./create-root-ca-by-generating-internally-config-details"));
exports.CreateRootCaByGeneratingInternallyConfigDetails = CreateRootCaByGeneratingInternallyConfigDetails.CreateRootCaByGeneratingInternallyConfigDetails;
const CreateSubordinateCaIssuedByInternalCaConfigDetails = __importStar(require("./create-subordinate-ca-issued-by-internal-ca-config-details"));
exports.CreateSubordinateCaIssuedByInternalCaConfigDetails = CreateSubordinateCaIssuedByInternalCaConfigDetails.CreateSubordinateCaIssuedByInternalCaConfigDetails;
const UpdateCertificateByImportingConfigDetails = __importStar(require("./update-certificate-by-importing-config-details"));
exports.UpdateCertificateByImportingConfigDetails = UpdateCertificateByImportingConfigDetails.UpdateCertificateByImportingConfigDetails;
const UpdateCertificateIssuedByInternalCaConfigDetails = __importStar(require("./update-certificate-issued-by-internal-ca-config-details"));
exports.UpdateCertificateIssuedByInternalCaConfigDetails = UpdateCertificateIssuedByInternalCaConfigDetails.UpdateCertificateIssuedByInternalCaConfigDetails;
const UpdateCertificateManagedExternallyIssuedByInternalCaConfigDetails = __importStar(require("./update-certificate-managed-externally-issued-by-internal-ca-config-details"));
exports.UpdateCertificateManagedExternallyIssuedByInternalCaConfigDetails = UpdateCertificateManagedExternallyIssuedByInternalCaConfigDetails.UpdateCertificateManagedExternallyIssuedByInternalCaConfigDetails;
const UpdateRootCaByGeneratingInternallyConfigDetails = __importStar(require("./update-root-ca-by-generating-internally-config-details"));
exports.UpdateRootCaByGeneratingInternallyConfigDetails = UpdateRootCaByGeneratingInternallyConfigDetails.UpdateRootCaByGeneratingInternallyConfigDetails;
const UpdateSubordinateCaIssuedByInternalCaConfigDetails = __importStar(require("./update-subordinate-ca-issued-by-internal-ca-config-details"));
exports.UpdateSubordinateCaIssuedByInternalCaConfigDetails = UpdateSubordinateCaIssuedByInternalCaConfigDetails.UpdateSubordinateCaIssuedByInternalCaConfigDetails;
//# sourceMappingURL=index.js.map