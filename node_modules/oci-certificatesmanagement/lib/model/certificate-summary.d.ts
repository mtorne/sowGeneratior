/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of the certificate. This object does not contain the certificate contents.
 */
export interface CertificateSummary {
    /**
     * The OCID of the certificate.
     */
    "id": string;
    /**
     * The OCID of the certificate authority (CA) that issued the certificate.
     */
    "issuerCertificateAuthorityId"?: string;
    /**
     * A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    "name": string;
    /**
     * A brief description of the certificate.
     */
    "description"?: string;
    /**
     * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * Example: {@code 2019-04-03T21:10:29.600Z}
     *
     */
    "timeCreated": Date;
    /**
     * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * Example: {@code 2019-04-03T21:10:29.600Z}
     *
     */
    "timeOfDeletion"?: Date;
    /**
     * The current lifecycle state of the certificate.
     */
    "lifecycleState": model.CertificateLifecycleState;
    /**
     * The OCID of the compartment that contains the certificate.
     */
    "compartmentId": string;
    /**
     * An optional list of rules that control how the certificate is used and managed.
     */
    "certificateRules"?: Array<model.CertificateRule>;
    "currentVersionSummary"?: model.CertificateVersionSummary;
    "subject"?: model.CertificateSubject;
    /**
     * The origin of the certificate.
     */
    "configType": model.CertificateConfigType;
    /**
     * The algorithm used to create key pairs.
     */
    "keyAlgorithm"?: model.KeyAlgorithm;
    /**
     * The algorithm used to sign the public key certificate.
     */
    "signatureAlgorithm"?: model.SignatureAlgorithm;
    /**
     * The name of the profile used to create the certificate, which depends on the type of certificate you need.
     */
    "certificateProfileType"?: model.CertificateProfileType;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CertificateSummary {
    function getJsonObj(obj: CertificateSummary): object;
    function getDeserializedJsonObj(obj: CertificateSummary): object;
}
