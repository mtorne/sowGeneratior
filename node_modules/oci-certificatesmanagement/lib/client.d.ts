/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { CertificatesManagementWaiter } from "./certificatesmanagement-waiter";
declare const Breaker: any;
export declare enum CertificatesManagementApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class CertificatesManagementClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": CertificatesManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new CertificatesManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): CertificatesManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): CertificatesManagementWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Cancels the scheduled deletion of the specified certificate authority (CA).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelCertificateAuthorityDeletionRequest
     * @return CancelCertificateAuthorityDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CancelCertificateAuthorityDeletion.ts.html |here} to see how to use CancelCertificateAuthorityDeletion API.
     */
    cancelCertificateAuthorityDeletion(cancelCertificateAuthorityDeletionRequest: requests.CancelCertificateAuthorityDeletionRequest): Promise<responses.CancelCertificateAuthorityDeletionResponse>;
    /**
     * Cancels the scheduled deletion of the specified certificate authority (CA) version. Canceling
     * a scheduled deletion restores the CA version's lifecycle state to what
     * it was before its scheduled deletion.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelCertificateAuthorityVersionDeletionRequest
     * @return CancelCertificateAuthorityVersionDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CancelCertificateAuthorityVersionDeletion.ts.html |here} to see how to use CancelCertificateAuthorityVersionDeletion API.
     */
    cancelCertificateAuthorityVersionDeletion(cancelCertificateAuthorityVersionDeletionRequest: requests.CancelCertificateAuthorityVersionDeletionRequest): Promise<responses.CancelCertificateAuthorityVersionDeletionResponse>;
    /**
     * Cancels the pending deletion of the specified certificate. Canceling
     * a scheduled deletion restores the certificate's lifecycle state to what
     * it was before you scheduled the certificate for deletion.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelCertificateDeletionRequest
     * @return CancelCertificateDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CancelCertificateDeletion.ts.html |here} to see how to use CancelCertificateDeletion API.
     */
    cancelCertificateDeletion(cancelCertificateDeletionRequest: requests.CancelCertificateDeletionRequest): Promise<responses.CancelCertificateDeletionResponse>;
    /**
     * Cancels the scheduled deletion of the specified certificate version.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelCertificateVersionDeletionRequest
     * @return CancelCertificateVersionDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CancelCertificateVersionDeletion.ts.html |here} to see how to use CancelCertificateVersionDeletion API.
     */
    cancelCertificateVersionDeletion(cancelCertificateVersionDeletionRequest: requests.CancelCertificateVersionDeletionRequest): Promise<responses.CancelCertificateVersionDeletionResponse>;
    /**
       * Moves a CA bundle to a different compartment in the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, if-match is checked against the ETag values of the secret.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ChangeCaBundleCompartmentRequest
       * @return ChangeCaBundleCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ChangeCaBundleCompartment.ts.html |here} to see how to use ChangeCaBundleCompartment API.
       */
    changeCaBundleCompartment(changeCaBundleCompartmentRequest: requests.ChangeCaBundleCompartmentRequest): Promise<responses.ChangeCaBundleCompartmentResponse>;
    /**
       * Moves a certificate authority (CA) to a different compartment within the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, If-Match is checked against the ETag values of the source.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ChangeCertificateAuthorityCompartmentRequest
       * @return ChangeCertificateAuthorityCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ChangeCertificateAuthorityCompartment.ts.html |here} to see how to use ChangeCertificateAuthorityCompartment API.
       */
    changeCertificateAuthorityCompartment(changeCertificateAuthorityCompartmentRequest: requests.ChangeCertificateAuthorityCompartmentRequest): Promise<responses.ChangeCertificateAuthorityCompartmentResponse>;
    /**
       * Moves a certificate to a different compartment within the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, if-match is checked against the ETag values of the secret.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ChangeCertificateCompartmentRequest
       * @return ChangeCertificateCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ChangeCertificateCompartment.ts.html |here} to see how to use ChangeCertificateCompartment API.
       */
    changeCertificateCompartment(changeCertificateCompartmentRequest: requests.ChangeCertificateCompartmentRequest): Promise<responses.ChangeCertificateCompartmentResponse>;
    /**
     * Creates a new CA bundle according to the details of the request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCaBundleRequest
     * @return CreateCaBundleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CreateCaBundle.ts.html |here} to see how to use CreateCaBundle API.
     */
    createCaBundle(createCaBundleRequest: requests.CreateCaBundleRequest): Promise<responses.CreateCaBundleResponse>;
    /**
     * Creates a new certificate according to the details of the request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCertificateRequest
     * @return CreateCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CreateCertificate.ts.html |here} to see how to use CreateCertificate API.
     */
    createCertificate(createCertificateRequest: requests.CreateCertificateRequest): Promise<responses.CreateCertificateResponse>;
    /**
     * Creates a new certificate authority (CA) according to the details of the request.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCertificateAuthorityRequest
     * @return CreateCertificateAuthorityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/CreateCertificateAuthority.ts.html |here} to see how to use CreateCertificateAuthority API.
     */
    createCertificateAuthority(createCertificateAuthorityRequest: requests.CreateCertificateAuthorityRequest): Promise<responses.CreateCertificateAuthorityResponse>;
    /**
     * Deletes the specified CA bundle.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCaBundleRequest
     * @return DeleteCaBundleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/DeleteCaBundle.ts.html |here} to see how to use DeleteCaBundle API.
     */
    deleteCaBundle(deleteCaBundleRequest: requests.DeleteCaBundleRequest): Promise<responses.DeleteCaBundleResponse>;
    /**
     * Gets details about the specified association.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAssociationRequest
     * @return GetAssociationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetAssociation.ts.html |here} to see how to use GetAssociation API.
     */
    getAssociation(getAssociationRequest: requests.GetAssociationRequest): Promise<responses.GetAssociationResponse>;
    /**
     * Gets details about the specified CA bundle.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCaBundleRequest
     * @return GetCaBundleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetCaBundle.ts.html |here} to see how to use GetCaBundle API.
     */
    getCaBundle(getCaBundleRequest: requests.GetCaBundleRequest): Promise<responses.GetCaBundleResponse>;
    /**
     * Gets details about the specified certificate.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCertificateRequest
     * @return GetCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetCertificate.ts.html |here} to see how to use GetCertificate API.
     */
    getCertificate(getCertificateRequest: requests.GetCertificateRequest): Promise<responses.GetCertificateResponse>;
    /**
     * Gets details about the specified certificate authority (CA).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCertificateAuthorityRequest
     * @return GetCertificateAuthorityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetCertificateAuthority.ts.html |here} to see how to use GetCertificateAuthority API.
     */
    getCertificateAuthority(getCertificateAuthorityRequest: requests.GetCertificateAuthorityRequest): Promise<responses.GetCertificateAuthorityResponse>;
    /**
     * Gets details about the specified certificate authority (CA) version.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCertificateAuthorityVersionRequest
     * @return GetCertificateAuthorityVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetCertificateAuthorityVersion.ts.html |here} to see how to use GetCertificateAuthorityVersion API.
     */
    getCertificateAuthorityVersion(getCertificateAuthorityVersionRequest: requests.GetCertificateAuthorityVersionRequest): Promise<responses.GetCertificateAuthorityVersionResponse>;
    /**
     * Gets details about the specified version of a certificate.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCertificateVersionRequest
     * @return GetCertificateVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/GetCertificateVersion.ts.html |here} to see how to use GetCertificateVersion API.
     */
    getCertificateVersion(getCertificateVersionRequest: requests.GetCertificateVersionRequest): Promise<responses.GetCertificateVersionResponse>;
    /**
     * Lists all associations that match the query parameters.
     * Optionally, you can use the parameter `FilterByAssociationIdQueryParam` to limit the result set to a single item that matches the specified association.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAssociationsRequest
     * @return ListAssociationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListAssociations.ts.html |here} to see how to use ListAssociations API.
     */
    listAssociations(listAssociationsRequest: requests.ListAssociationsRequest): Promise<responses.ListAssociationsResponse>;
    /**
     * Lists all CA bundles that match the query parameters.
     * Optionally, you can use the parameter `FilterByCaBundleIdQueryParam` to limit the result set to a single item that matches the specified CA bundle.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCaBundlesRequest
     * @return ListCaBundlesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListCaBundles.ts.html |here} to see how to use ListCaBundles API.
     */
    listCaBundles(listCaBundlesRequest: requests.ListCaBundlesRequest): Promise<responses.ListCaBundlesResponse>;
    /**
     * Lists all certificate authorities (CAs) in the specified compartment.
     * Optionally, you can use the parameter `FilterByCertificateAuthorityIdQueryParam` to limit the results to a single item that matches the specified CA.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCertificateAuthoritiesRequest
     * @return ListCertificateAuthoritiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListCertificateAuthorities.ts.html |here} to see how to use ListCertificateAuthorities API.
     */
    listCertificateAuthorities(listCertificateAuthoritiesRequest: requests.ListCertificateAuthoritiesRequest): Promise<responses.ListCertificateAuthoritiesResponse>;
    /**
     * Lists all versions for the specified certificate authority (CA).
     * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCertificateAuthorityVersionsRequest
     * @return ListCertificateAuthorityVersionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListCertificateAuthorityVersions.ts.html |here} to see how to use ListCertificateAuthorityVersions API.
     */
    listCertificateAuthorityVersions(listCertificateAuthorityVersionsRequest: requests.ListCertificateAuthorityVersionsRequest): Promise<responses.ListCertificateAuthorityVersionsResponse>;
    /**
     * Lists all certificate versions for the specified certificate.
     * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the result set to a single item that matches the specified version number.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCertificateVersionsRequest
     * @return ListCertificateVersionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListCertificateVersions.ts.html |here} to see how to use ListCertificateVersions API.
     */
    listCertificateVersions(listCertificateVersionsRequest: requests.ListCertificateVersionsRequest): Promise<responses.ListCertificateVersionsResponse>;
    /**
     * Lists all certificates that match the query parameters.
     * Optionally, you can use the parameter `FilterByCertificateIdQueryParam` to limit the result set to a single item that matches the specified certificate.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCertificatesRequest
     * @return ListCertificatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ListCertificates.ts.html |here} to see how to use ListCertificates API.
     */
    listCertificates(listCertificatesRequest: requests.ListCertificatesRequest): Promise<responses.ListCertificatesResponse>;
    /**
     * Revokes a certificate authority (CA) version.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RevokeCertificateAuthorityVersionRequest
     * @return RevokeCertificateAuthorityVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/RevokeCertificateAuthorityVersion.ts.html |here} to see how to use RevokeCertificateAuthorityVersion API.
     */
    revokeCertificateAuthorityVersion(revokeCertificateAuthorityVersionRequest: requests.RevokeCertificateAuthorityVersionRequest): Promise<responses.RevokeCertificateAuthorityVersionResponse>;
    /**
     * Revokes the specified certificate version.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RevokeCertificateVersionRequest
     * @return RevokeCertificateVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/RevokeCertificateVersion.ts.html |here} to see how to use RevokeCertificateVersion API.
     */
    revokeCertificateVersion(revokeCertificateVersionRequest: requests.RevokeCertificateVersionRequest): Promise<responses.RevokeCertificateVersionResponse>;
    /**
     * Schedules the deletion of the specified certificate authority (CA). This sets the lifecycle state of the CA to `PENDING_DELETION` and then deletes it after the specified retention period ends. If needed, you can determine the status of the deletion by using `GetCertificateAuthority`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ScheduleCertificateAuthorityDeletionRequest
     * @return ScheduleCertificateAuthorityDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ScheduleCertificateAuthorityDeletion.ts.html |here} to see how to use ScheduleCertificateAuthorityDeletion API.
     */
    scheduleCertificateAuthorityDeletion(scheduleCertificateAuthorityDeletionRequest: requests.ScheduleCertificateAuthorityDeletionRequest): Promise<responses.ScheduleCertificateAuthorityDeletionResponse>;
    /**
     * Schedules the deletion of the specified certificate authority (CA) version.
     * This sets the lifecycle state of the CA version to `PENDING_DELETION`
     * and then deletes it after the specified retention period ends. If needed, you can determine the status of the deletion by using `GetCertificateAuthorityVersion`.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ScheduleCertificateAuthorityVersionDeletionRequest
     * @return ScheduleCertificateAuthorityVersionDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ScheduleCertificateAuthorityVersionDeletion.ts.html |here} to see how to use ScheduleCertificateAuthorityVersionDeletion API.
     */
    scheduleCertificateAuthorityVersionDeletion(scheduleCertificateAuthorityVersionDeletionRequest: requests.ScheduleCertificateAuthorityVersionDeletionRequest): Promise<responses.ScheduleCertificateAuthorityVersionDeletionResponse>;
    /**
     * Schedules the deletion of the specified certificate. This sets the lifecycle state of the certificate
     * to `PENDING_DELETION` and then deletes it after the specified retention period ends.
     * You can subsequently use `GetCertificate` to determine the current deletion status.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ScheduleCertificateDeletionRequest
     * @return ScheduleCertificateDeletionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ScheduleCertificateDeletion.ts.html |here} to see how to use ScheduleCertificateDeletion API.
     */
    scheduleCertificateDeletion(scheduleCertificateDeletionRequest: requests.ScheduleCertificateDeletionRequest): Promise<responses.ScheduleCertificateDeletionResponse>;
    /**
       * Schedules the deletion of the specified certificate version. This sets the lifecycle state of the certificate version to `PENDING_DELETION` and then deletes it after the specified retention period ends. You can only
  * delete a certificate version if the certificate version rotation state is marked as `DEPRECATED`.
  * <p>
  You can subsequently use `GetCertificateVersion` to determine the current certificate version deletion status.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ScheduleCertificateVersionDeletionRequest
       * @return ScheduleCertificateVersionDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/ScheduleCertificateVersionDeletion.ts.html |here} to see how to use ScheduleCertificateVersionDeletion API.
       */
    scheduleCertificateVersionDeletion(scheduleCertificateVersionDeletionRequest: requests.ScheduleCertificateVersionDeletionRequest): Promise<responses.ScheduleCertificateVersionDeletionResponse>;
    /**
     * Updates the properties of a CA bundle.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCaBundleRequest
     * @return UpdateCaBundleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/UpdateCaBundle.ts.html |here} to see how to use UpdateCaBundle API.
     */
    updateCaBundle(updateCaBundleRequest: requests.UpdateCaBundleRequest): Promise<responses.UpdateCaBundleResponse>;
    /**
     * Updates the properties of a certificate.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCertificateRequest
     * @return UpdateCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/UpdateCertificate.ts.html |here} to see how to use UpdateCertificate API.
     */
    updateCertificate(updateCertificateRequest: requests.UpdateCertificateRequest): Promise<responses.UpdateCertificateResponse>;
    /**
     * Updates the properties of the specified certificate authority (CA).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCertificateAuthorityRequest
     * @return UpdateCertificateAuthorityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/certificatesmanagement/UpdateCertificateAuthority.ts.html |here} to see how to use UpdateCertificateAuthority API.
     */
    updateCertificateAuthority(updateCertificateAuthorityRequest: requests.UpdateCertificateAuthorityRequest): Promise<responses.UpdateCertificateAuthorityResponse>;
}
export {};
