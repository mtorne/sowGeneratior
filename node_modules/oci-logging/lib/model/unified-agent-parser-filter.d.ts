/**
 * Logging Management API
 * Use the Logging Management API to create, read, list, update, move and delete
log groups, log objects, log saved searches, and agent configurations.

For more information, see [Logging Overview](https://docs.oracle.com/iaas/Content/Logging/Concepts/loggingoverview.htm).

 * OpenAPI spec version: 20200531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Logging parser filter object.
 * Ref: https://docs.fluentd.org/filter/parser
 *
 */
export interface UnifiedAgentParserFilter extends model.UnifiedAgentLoggingFilter {
    "parser": model.UnifiedAgentMultilineGrokParser | model.UnifiedJSONParser | model.UnifiedAgentGrokParser | model.UnifiedAgentNoneParser | model.UnifiedAgentSyslogParser | model.UnifiedAgentOpenmetricsParser | model.UnifiedAgentAuditdParser | model.UnifiedAgentApache2Parser | model.UnifiedAgentRegexParser | model.UnifiedAgentMultilineParser | model.UnifiedAgentTsvParser | model.UnifiedAgentCriParser | model.UnifiedAgentApacheErrorParser | model.UnifiedAgentMsgpackParser | model.UnifiedAgentCsvParser;
    /**
     * The field name in the record to parse.
     */
    "keyName": string;
    /**
     * If true, keep the original event time in the parsed result.
     */
    "reserveTime"?: boolean;
    /**
     * If true, keep the original key-value pair in the parsed result.
     */
    "reserveData"?: boolean;
    /**
     * If true, remove the keyName field when parsing is succeeded.
     */
    "removeKeyNameField"?: boolean;
    /**
     * If true, the invalid string is replaced with safe characters and is re-parsed.
     */
    "replaceInvalidSequence"?: boolean;
    /**
     * Store the parsed values with the specified key name prefix.
     */
    "injectKeyPrefix"?: string;
    /**
     * Store the parsed values as a hash value in a field.
     */
    "hashValueField"?: string;
    /**
     * If true, emit invalid record to @ERROR label. Invalid cases are: 1) key does not exist; 2) the format
     * does not match; or 3) an unexpected error. You can rescue unexpected format logs in the @ERROR lable.
     * If you want to ignore these errors, set this to false.
     *
     */
    "emitInvalidRecordToError"?: boolean;
    "filterType": string;
}
export declare namespace UnifiedAgentParserFilter {
    function getJsonObj(obj: UnifiedAgentParserFilter, isParentJsonObj?: boolean): object;
    const filterType = "PARSER_FILTER";
    function getDeserializedJsonObj(obj: UnifiedAgentParserFilter, isParentJsonObj?: boolean): object;
}
