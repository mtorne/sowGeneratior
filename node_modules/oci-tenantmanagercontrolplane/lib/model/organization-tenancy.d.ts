/**
 * Organizations API
 * Use the Organizations API to consolidate multiple OCI tenancies into an organization, and centrally manage your tenancies and organization resources. For more information, see [Organization Management Overview](https://docs.oracle.com/iaas/Content/General/Concepts/organization_management_overview.htm).
 * OpenAPI spec version: 20230401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about the organization tenancy.
 */
export interface OrganizationTenancy {
    /**
     * OCID of the tenancy.
     */
    "tenancyId": string;
    /**
     * Name of the tenancy.
     */
    "name"?: string;
    /**
     * Lifecycle state of the organization tenancy.
     */
    "lifecycleState"?: model.OrganizationTenancyLifecycleState;
    /**
     * Role of the organization tenancy.
     */
    "role"?: model.OrganizationTenancyRole;
    /**
     * Date and time when the tenancy joined the organization.
     */
    "timeJoined"?: Date;
    /**
     * Date and time when the tenancy left the organization.
     */
    "timeLeft"?: Date;
    /**
     * Parameter to indicate the tenancy is approved for transfer to another organization.
     */
    "isApprovedForTransfer"?: boolean;
    /**
     * The governance status of the tenancy.
     */
    "governanceStatus": model.GovernanceStatus;
}
export declare namespace OrganizationTenancy {
    function getJsonObj(obj: OrganizationTenancy): object;
    function getDeserializedJsonObj(obj: OrganizationTenancy): object;
}
