"use strict";
/**
 * Organizations API
 * Use the Organizations API to consolidate multiple OCI tenancies into an organization, and centrally manage your tenancies and organization resources. For more information, see [Organization Management Overview](https://docs.oracle.com/iaas/Content/General/Concepts/organization_management_overview.htm).
 * OpenAPI spec version: 20230401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationType = void 0;
/**
 * Possible operation types.
 **/
var OperationType;
(function (OperationType) {
    OperationType["CreateSenderInvitation"] = "CREATE_SENDER_INVITATION";
    OperationType["AcceptRecipientInvitation"] = "ACCEPT_RECIPIENT_INVITATION";
    OperationType["CancelSenderInvitation"] = "CANCEL_SENDER_INVITATION";
    OperationType["CompleteOrderActivation"] = "COMPLETE_ORDER_ACTIVATION";
    OperationType["ActivateOrderExistingTenancy"] = "ACTIVATE_ORDER_EXISTING_TENANCY";
    OperationType["RegisterDomain"] = "REGISTER_DOMAIN";
    OperationType["ReleaseDomain"] = "RELEASE_DOMAIN";
    OperationType["CreateChildTenancy"] = "CREATE_CHILD_TENANCY";
    OperationType["AssignDefaultSubscription"] = "ASSIGN_DEFAULT_SUBSCRIPTION";
    OperationType["ManualLinkCreation"] = "MANUAL_LINK_CREATION";
    OperationType["TerminateOrganizationTenancy"] = "TERMINATE_ORGANIZATION_TENANCY";
    OperationType["UpdateSaasCapability"] = "UPDATE_SAAS_CAPABILITY";
    OperationType["SoftTerminateTenancy"] = "SOFT_TERMINATE_TENANCY";
    OperationType["HardTerminateTenancy"] = "HARD_TERMINATE_TENANCY";
    OperationType["RestoreTenancy"] = "RESTORE_TENANCY";
    OperationType["LogTenancyTerminationRequest"] = "LOG_TENANCY_TERMINATION_REQUEST";
    OperationType["StandaloneTenancyTerminationRequest"] = "STANDALONE_TENANCY_TERMINATION_REQUEST";
    OperationType["SelfOptIn"] = "SELF_OPT_IN";
    OperationType["SelfOptOut"] = "SELF_OPT_OUT";
    OperationType["OrderPayloadsBackfillEtl"] = "ORDER_PAYLOADS_BACKFILL_ETL";
    OperationType["PublishToTopic"] = "PUBLISH_TO_TOPIC";
    OperationType["TerminateLink"] = "TERMINATE_LINK";
    OperationType["TransferSubscription"] = "TRANSFER_SUBSCRIPTION";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    OperationType["UnknownValue"] = "UNKNOWN_VALUE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
(function (OperationType) {
    function getJsonObj(obj) {
        return obj;
    }
    OperationType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    OperationType.getDeserializedJsonObj = getDeserializedJsonObj;
})(OperationType = exports.OperationType || (exports.OperationType = {}));
//# sourceMappingURL=operation-type.js.map