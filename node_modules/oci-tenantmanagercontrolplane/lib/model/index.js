"use strict";
/**
 * Organizations API
 * Use the Organizations API to consolidate multiple OCI tenancies into an organization, and centrally manage your tenancies and organization resources. For more information, see [Organization Management Overview](https://docs.oracle.com/iaas/Content/General/Concepts/organization_management_overview.htm).
 * OpenAPI spec version: 20230401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SenderInvitationCollection = exports.SenderInvitation = exports.ReviveWorkflowInstanceDetails = exports.RecipientInvitationSummary = exports.RecipientInvitationStatus = exports.RecipientInvitationCollection = exports.RecipientInvitation = exports.Promotion = exports.OrganizationTenancySummary = exports.OrganizationTenancyRole = exports.OrganizationTenancyLifecycleState = exports.OrganizationTenancyCollection = exports.OrganizationTenancy = exports.OrganizationSummary = exports.OrganizationCollection = exports.Organization = exports.Order = exports.OperationType = exports.OperationStatus = exports.LinkSummary = exports.LinkCollection = exports.Link = exports.LifecycleState = exports.InvitationSubject = exports.GovernanceStatus = exports.EntityVersion = exports.DomainSummary = exports.DomainGovernanceSummary = exports.DomainGovernanceCollection = exports.DomainGovernance = exports.DomainCollection = exports.Domain = exports.CreateSubscriptionMappingDetails = exports.CreateSenderInvitationDetails = exports.CreateDomainGovernanceDetails = exports.CreateDomainDetails = exports.CreateChildTenancyDetails = exports.ClassicSubscriptionManagedBy = exports.ClassicSubscriptionLifecycleState = exports.BillingModel = exports.AvailableRegionSummary = exports.AvailableRegionCollection = exports.AssignedSubscriptionSummary = exports.AssignedSubscriptionLineItemSummary = exports.AssignedSubscriptionLineItemCollection = exports.AssignedSubscriptionCollection = exports.AssignedSubscription = exports.AdditionalAssignedRegionCollection = exports.ActivateOrderDetails = exports.ActionType = void 0;
exports.CloudSubscriptionSummary = exports.CloudSubscription = exports.CloudAssignedSubscriptionSummary = exports.CloudAssignedSubscription = exports.ClassicSubscriptionSummary = exports.ClassicSubscription = exports.ClassicAssignedSubscriptionSummary = exports.ClassicAssignedSubscription = exports.WorkRequestSummary = exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.UpdateSenderInvitationDetails = exports.UpdateRecipientInvitationDetails = exports.UpdateOrganizationDetails = exports.UpdateDomainGovernanceDetails = exports.UpdateDomainDetails = exports.SubscriptionSummary = exports.SubscriptionSku = exports.SubscriptionMappingSummary = exports.SubscriptionMappingCollection = exports.SubscriptionMapping = exports.SubscriptionLineItemSummary = exports.SubscriptionLineItemCollection = exports.SubscriptionLifecycleState = exports.SubscriptionInfo = exports.SubscriptionCollection = exports.Subscription = exports.SortOrder = exports.Sku = exports.SenderInvitationSummary = exports.SenderInvitationStatus = void 0;
const ActionType = __importStar(require("./action-type"));
exports.ActionType = ActionType.ActionType;
const ActivateOrderDetails = __importStar(require("./activate-order-details"));
exports.ActivateOrderDetails = ActivateOrderDetails.ActivateOrderDetails;
const AdditionalAssignedRegionCollection = __importStar(require("./additional-assigned-region-collection"));
exports.AdditionalAssignedRegionCollection = AdditionalAssignedRegionCollection.AdditionalAssignedRegionCollection;
const AssignedSubscription = __importStar(require("./assigned-subscription"));
exports.AssignedSubscription = AssignedSubscription.AssignedSubscription;
const AssignedSubscriptionCollection = __importStar(require("./assigned-subscription-collection"));
exports.AssignedSubscriptionCollection = AssignedSubscriptionCollection.AssignedSubscriptionCollection;
const AssignedSubscriptionLineItemCollection = __importStar(require("./assigned-subscription-line-item-collection"));
exports.AssignedSubscriptionLineItemCollection = AssignedSubscriptionLineItemCollection.AssignedSubscriptionLineItemCollection;
const AssignedSubscriptionLineItemSummary = __importStar(require("./assigned-subscription-line-item-summary"));
exports.AssignedSubscriptionLineItemSummary = AssignedSubscriptionLineItemSummary.AssignedSubscriptionLineItemSummary;
const AssignedSubscriptionSummary = __importStar(require("./assigned-subscription-summary"));
exports.AssignedSubscriptionSummary = AssignedSubscriptionSummary.AssignedSubscriptionSummary;
const AvailableRegionCollection = __importStar(require("./available-region-collection"));
exports.AvailableRegionCollection = AvailableRegionCollection.AvailableRegionCollection;
const AvailableRegionSummary = __importStar(require("./available-region-summary"));
exports.AvailableRegionSummary = AvailableRegionSummary.AvailableRegionSummary;
const BillingModel = __importStar(require("./billing-model"));
exports.BillingModel = BillingModel.BillingModel;
const ClassicSubscriptionLifecycleState = __importStar(require("./classic-subscription-lifecycle-state"));
exports.ClassicSubscriptionLifecycleState = ClassicSubscriptionLifecycleState.ClassicSubscriptionLifecycleState;
const ClassicSubscriptionManagedBy = __importStar(require("./classic-subscription-managed-by"));
exports.ClassicSubscriptionManagedBy = ClassicSubscriptionManagedBy.ClassicSubscriptionManagedBy;
const CreateChildTenancyDetails = __importStar(require("./create-child-tenancy-details"));
exports.CreateChildTenancyDetails = CreateChildTenancyDetails.CreateChildTenancyDetails;
const CreateDomainDetails = __importStar(require("./create-domain-details"));
exports.CreateDomainDetails = CreateDomainDetails.CreateDomainDetails;
const CreateDomainGovernanceDetails = __importStar(require("./create-domain-governance-details"));
exports.CreateDomainGovernanceDetails = CreateDomainGovernanceDetails.CreateDomainGovernanceDetails;
const CreateSenderInvitationDetails = __importStar(require("./create-sender-invitation-details"));
exports.CreateSenderInvitationDetails = CreateSenderInvitationDetails.CreateSenderInvitationDetails;
const CreateSubscriptionMappingDetails = __importStar(require("./create-subscription-mapping-details"));
exports.CreateSubscriptionMappingDetails = CreateSubscriptionMappingDetails.CreateSubscriptionMappingDetails;
const Domain = __importStar(require("./domain"));
exports.Domain = Domain.Domain;
const DomainCollection = __importStar(require("./domain-collection"));
exports.DomainCollection = DomainCollection.DomainCollection;
const DomainGovernance = __importStar(require("./domain-governance"));
exports.DomainGovernance = DomainGovernance.DomainGovernance;
const DomainGovernanceCollection = __importStar(require("./domain-governance-collection"));
exports.DomainGovernanceCollection = DomainGovernanceCollection.DomainGovernanceCollection;
const DomainGovernanceSummary = __importStar(require("./domain-governance-summary"));
exports.DomainGovernanceSummary = DomainGovernanceSummary.DomainGovernanceSummary;
const DomainSummary = __importStar(require("./domain-summary"));
exports.DomainSummary = DomainSummary.DomainSummary;
const EntityVersion = __importStar(require("./entity-version"));
exports.EntityVersion = EntityVersion.EntityVersion;
const GovernanceStatus = __importStar(require("./governance-status"));
exports.GovernanceStatus = GovernanceStatus.GovernanceStatus;
const InvitationSubject = __importStar(require("./invitation-subject"));
exports.InvitationSubject = InvitationSubject.InvitationSubject;
const LifecycleState = __importStar(require("./lifecycle-state"));
exports.LifecycleState = LifecycleState.LifecycleState;
const Link = __importStar(require("./link"));
exports.Link = Link.Link;
const LinkCollection = __importStar(require("./link-collection"));
exports.LinkCollection = LinkCollection.LinkCollection;
const LinkSummary = __importStar(require("./link-summary"));
exports.LinkSummary = LinkSummary.LinkSummary;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationType = __importStar(require("./operation-type"));
exports.OperationType = OperationType.OperationType;
const Order = __importStar(require("./order"));
exports.Order = Order.Order;
const Organization = __importStar(require("./organization"));
exports.Organization = Organization.Organization;
const OrganizationCollection = __importStar(require("./organization-collection"));
exports.OrganizationCollection = OrganizationCollection.OrganizationCollection;
const OrganizationSummary = __importStar(require("./organization-summary"));
exports.OrganizationSummary = OrganizationSummary.OrganizationSummary;
const OrganizationTenancy = __importStar(require("./organization-tenancy"));
exports.OrganizationTenancy = OrganizationTenancy.OrganizationTenancy;
const OrganizationTenancyCollection = __importStar(require("./organization-tenancy-collection"));
exports.OrganizationTenancyCollection = OrganizationTenancyCollection.OrganizationTenancyCollection;
const OrganizationTenancyLifecycleState = __importStar(require("./organization-tenancy-lifecycle-state"));
exports.OrganizationTenancyLifecycleState = OrganizationTenancyLifecycleState.OrganizationTenancyLifecycleState;
const OrganizationTenancyRole = __importStar(require("./organization-tenancy-role"));
exports.OrganizationTenancyRole = OrganizationTenancyRole.OrganizationTenancyRole;
const OrganizationTenancySummary = __importStar(require("./organization-tenancy-summary"));
exports.OrganizationTenancySummary = OrganizationTenancySummary.OrganizationTenancySummary;
const Promotion = __importStar(require("./promotion"));
exports.Promotion = Promotion.Promotion;
const RecipientInvitation = __importStar(require("./recipient-invitation"));
exports.RecipientInvitation = RecipientInvitation.RecipientInvitation;
const RecipientInvitationCollection = __importStar(require("./recipient-invitation-collection"));
exports.RecipientInvitationCollection = RecipientInvitationCollection.RecipientInvitationCollection;
const RecipientInvitationStatus = __importStar(require("./recipient-invitation-status"));
exports.RecipientInvitationStatus = RecipientInvitationStatus.RecipientInvitationStatus;
const RecipientInvitationSummary = __importStar(require("./recipient-invitation-summary"));
exports.RecipientInvitationSummary = RecipientInvitationSummary.RecipientInvitationSummary;
const ReviveWorkflowInstanceDetails = __importStar(require("./revive-workflow-instance-details"));
exports.ReviveWorkflowInstanceDetails = ReviveWorkflowInstanceDetails.ReviveWorkflowInstanceDetails;
const SenderInvitation = __importStar(require("./sender-invitation"));
exports.SenderInvitation = SenderInvitation.SenderInvitation;
const SenderInvitationCollection = __importStar(require("./sender-invitation-collection"));
exports.SenderInvitationCollection = SenderInvitationCollection.SenderInvitationCollection;
const SenderInvitationStatus = __importStar(require("./sender-invitation-status"));
exports.SenderInvitationStatus = SenderInvitationStatus.SenderInvitationStatus;
const SenderInvitationSummary = __importStar(require("./sender-invitation-summary"));
exports.SenderInvitationSummary = SenderInvitationSummary.SenderInvitationSummary;
const Sku = __importStar(require("./sku"));
exports.Sku = Sku.Sku;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const Subscription = __importStar(require("./subscription"));
exports.Subscription = Subscription.Subscription;
const SubscriptionCollection = __importStar(require("./subscription-collection"));
exports.SubscriptionCollection = SubscriptionCollection.SubscriptionCollection;
const SubscriptionInfo = __importStar(require("./subscription-info"));
exports.SubscriptionInfo = SubscriptionInfo.SubscriptionInfo;
const SubscriptionLifecycleState = __importStar(require("./subscription-lifecycle-state"));
exports.SubscriptionLifecycleState = SubscriptionLifecycleState.SubscriptionLifecycleState;
const SubscriptionLineItemCollection = __importStar(require("./subscription-line-item-collection"));
exports.SubscriptionLineItemCollection = SubscriptionLineItemCollection.SubscriptionLineItemCollection;
const SubscriptionLineItemSummary = __importStar(require("./subscription-line-item-summary"));
exports.SubscriptionLineItemSummary = SubscriptionLineItemSummary.SubscriptionLineItemSummary;
const SubscriptionMapping = __importStar(require("./subscription-mapping"));
exports.SubscriptionMapping = SubscriptionMapping.SubscriptionMapping;
const SubscriptionMappingCollection = __importStar(require("./subscription-mapping-collection"));
exports.SubscriptionMappingCollection = SubscriptionMappingCollection.SubscriptionMappingCollection;
const SubscriptionMappingSummary = __importStar(require("./subscription-mapping-summary"));
exports.SubscriptionMappingSummary = SubscriptionMappingSummary.SubscriptionMappingSummary;
const SubscriptionSku = __importStar(require("./subscription-sku"));
exports.SubscriptionSku = SubscriptionSku.SubscriptionSku;
const SubscriptionSummary = __importStar(require("./subscription-summary"));
exports.SubscriptionSummary = SubscriptionSummary.SubscriptionSummary;
const UpdateDomainDetails = __importStar(require("./update-domain-details"));
exports.UpdateDomainDetails = UpdateDomainDetails.UpdateDomainDetails;
const UpdateDomainGovernanceDetails = __importStar(require("./update-domain-governance-details"));
exports.UpdateDomainGovernanceDetails = UpdateDomainGovernanceDetails.UpdateDomainGovernanceDetails;
const UpdateOrganizationDetails = __importStar(require("./update-organization-details"));
exports.UpdateOrganizationDetails = UpdateOrganizationDetails.UpdateOrganizationDetails;
const UpdateRecipientInvitationDetails = __importStar(require("./update-recipient-invitation-details"));
exports.UpdateRecipientInvitationDetails = UpdateRecipientInvitationDetails.UpdateRecipientInvitationDetails;
const UpdateSenderInvitationDetails = __importStar(require("./update-sender-invitation-details"));
exports.UpdateSenderInvitationDetails = UpdateSenderInvitationDetails.UpdateSenderInvitationDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const ClassicAssignedSubscription = __importStar(require("./classic-assigned-subscription"));
exports.ClassicAssignedSubscription = ClassicAssignedSubscription.ClassicAssignedSubscription;
const ClassicAssignedSubscriptionSummary = __importStar(require("./classic-assigned-subscription-summary"));
exports.ClassicAssignedSubscriptionSummary = ClassicAssignedSubscriptionSummary.ClassicAssignedSubscriptionSummary;
const ClassicSubscription = __importStar(require("./classic-subscription"));
exports.ClassicSubscription = ClassicSubscription.ClassicSubscription;
const ClassicSubscriptionSummary = __importStar(require("./classic-subscription-summary"));
exports.ClassicSubscriptionSummary = ClassicSubscriptionSummary.ClassicSubscriptionSummary;
const CloudAssignedSubscription = __importStar(require("./cloud-assigned-subscription"));
exports.CloudAssignedSubscription = CloudAssignedSubscription.CloudAssignedSubscription;
const CloudAssignedSubscriptionSummary = __importStar(require("./cloud-assigned-subscription-summary"));
exports.CloudAssignedSubscriptionSummary = CloudAssignedSubscriptionSummary.CloudAssignedSubscriptionSummary;
const CloudSubscription = __importStar(require("./cloud-subscription"));
exports.CloudSubscription = CloudSubscription.CloudSubscription;
const CloudSubscriptionSummary = __importStar(require("./cloud-subscription-summary"));
exports.CloudSubscriptionSummary = CloudSubscriptionSummary.CloudSubscriptionSummary;
//# sourceMappingURL=index.js.map