/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](https://docs.oracle.com/iaas/cloud-guard/home.htm) and [Security Zones](https://docs.oracle.com/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { CloudGuardWaiter } from "./cloudguard-waiter";
declare const Breaker: any;
export declare enum CloudGuardApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class CloudGuardClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": CloudGuardWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new CloudGuardWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): CloudGuardWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): CloudGuardWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Adds a compartment to an existing security zone (SecurityZone resource), identified by
     * securityZoneId. Specify parameters in an AddCompartmentDetails resource that you pass.
     * If you previously removed a subcompartment from a security zone, you can add it back to the
     * same security zone. The security zone ensures that resources in the subcompartment comply with
     * the security zone's policies.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AddCompartmentRequest
     * @return AddCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/AddCompartment.ts.html |here} to see how to use AddCompartment API.
     */
    addCompartment(addCompartmentRequest: requests.AddCompartmentRequest): Promise<responses.AddCompartmentResponse>;
    /**
     * Cancels a work request identified by workRequestId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Moves a data source (DataSource resource), identified by parameters
     * passed in a ChangeDataSourceCompartmentDetails resource, from the current
     * compartment to another.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeDataSourceCompartmentRequest
     * @return ChangeDataSourceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeDataSourceCompartment.ts.html |here} to see how to use ChangeDataSourceCompartment API.
     */
    changeDataSourceCompartment(changeDataSourceCompartmentRequest: requests.ChangeDataSourceCompartmentRequest): Promise<responses.ChangeDataSourceCompartmentResponse>;
    /**
     * Moves the detector recipe (DetectorRecipe resource),
     * identified by detectorRecipeId, from the current compartment to
     * another compartment. When provided, If-Match is checked against
     * etag values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeDetectorRecipeCompartmentRequest
     * @return ChangeDetectorRecipeCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeDetectorRecipeCompartment.ts.html |here} to see how to use ChangeDetectorRecipeCompartment API.
     */
    changeDetectorRecipeCompartment(changeDetectorRecipeCompartmentRequest: requests.ChangeDetectorRecipeCompartmentRequest): Promise<responses.ChangeDetectorRecipeCompartmentResponse>;
    /**
     * Moves the managed list (ManagedList resource), identified by managedListId, from the current compartment to another compartment.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeManagedListCompartmentRequest
     * @return ChangeManagedListCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeManagedListCompartment.ts.html |here} to see how to use ChangeManagedListCompartment API.
     */
    changeManagedListCompartment(changeManagedListCompartmentRequest: requests.ChangeManagedListCompartmentRequest): Promise<responses.ChangeManagedListCompartmentResponse>;
    /**
     * Moves the responder recipe (ResponderRecipe resource), identified by responderRecipeId
     * in a ChangeResponderRecipeCompartmentDetails resource, from the current compartment to another compartment.
     * When provided, if-match is checked against etag values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeResponderRecipeCompartmentRequest
     * @return ChangeResponderRecipeCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeResponderRecipeCompartment.ts.html |here} to see how to use ChangeResponderRecipeCompartment API.
     */
    changeResponderRecipeCompartment(changeResponderRecipeCompartmentRequest: requests.ChangeResponderRecipeCompartmentRequest): Promise<responses.ChangeResponderRecipeCompartmentResponse>;
    /**
     * Moves the SavedQuery resource into a different compartment. When provided, If-Match is checked against etag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSavedQueryCompartmentRequest
     * @return ChangeSavedQueryCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeSavedQueryCompartment.ts.html |here} to see how to use ChangeSavedQueryCompartment API.
     */
    changeSavedQueryCompartment(changeSavedQueryCompartmentRequest: requests.ChangeSavedQueryCompartmentRequest): Promise<responses.ChangeSavedQueryCompartmentResponse>;
    /**
     * Moves the security recipe (SecurityRecipe resource), identified by securityRecipeId,
     * from the current compartment to another compartment. When provided, `if-match` is checked
     * against `etag` values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSecurityRecipeCompartmentRequest
     * @return ChangeSecurityRecipeCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeSecurityRecipeCompartment.ts.html |here} to see how to use ChangeSecurityRecipeCompartment API.
     */
    changeSecurityRecipeCompartment(changeSecurityRecipeCompartmentRequest: requests.ChangeSecurityRecipeCompartmentRequest): Promise<responses.ChangeSecurityRecipeCompartmentResponse>;
    /**
     * Moves a security zone, identified by securityZoneId, to a different compartment.
     * Pass parameters through a ChangeSecurityZoneCompartmentDetails resource.
     * When provided, `if-match` is checked against `etag` values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeSecurityZoneCompartmentRequest
     * @return ChangeSecurityZoneCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ChangeSecurityZoneCompartment.ts.html |here} to see how to use ChangeSecurityZoneCompartment API.
     */
    changeSecurityZoneCompartment(changeSecurityZoneCompartmentRequest: requests.ChangeSecurityZoneCompartmentRequest): Promise<responses.ChangeSecurityZoneCompartmentResponse>;
    /**
     * Creates a AdhocQuery resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateAdhocQueryRequest
     * @return CreateAdhocQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateAdhocQuery.ts.html |here} to see how to use CreateAdhocQuery API.
     */
    createAdhocQuery(createAdhocQueryRequest: requests.CreateAdhocQueryRequest): Promise<responses.CreateAdhocQueryResponse>;
    /**
     * Creates a new DataMaskRule resource definition.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDataMaskRuleRequest
     * @return CreateDataMaskRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateDataMaskRule.ts.html |here} to see how to use CreateDataMaskRule API.
     */
    createDataMaskRule(createDataMaskRuleRequest: requests.CreateDataMaskRuleRequest): Promise<responses.CreateDataMaskRuleResponse>;
    /**
     * Creates a data source (DataSource resource), using parameters passed
     * through a CreateDataSourceDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDataSourceRequest
     * @return CreateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateDataSource.ts.html |here} to see how to use CreateDataSource API.
     */
    createDataSource(createDataSourceRequest: requests.CreateDataSourceRequest): Promise<responses.CreateDataSourceResponse>;
    /**
     * Creates a new DetectorRecipe resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDetectorRecipeRequest
     * @return CreateDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateDetectorRecipe.ts.html |here} to see how to use CreateDetectorRecipe API.
     */
    createDetectorRecipe(createDetectorRecipeRequest: requests.CreateDetectorRecipeRequest): Promise<responses.CreateDetectorRecipeResponse>;
    /**
     * Creates a detector rule.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDetectorRecipeDetectorRuleRequest
     * @return CreateDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateDetectorRecipeDetectorRule.ts.html |here} to see how to use CreateDetectorRecipeDetectorRule API.
     */
    createDetectorRecipeDetectorRule(createDetectorRecipeDetectorRuleRequest: requests.CreateDetectorRecipeDetectorRuleRequest): Promise<responses.CreateDetectorRecipeDetectorRuleResponse>;
    /**
     * Creates a new ManagedList resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateManagedListRequest
     * @return CreateManagedListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateManagedList.ts.html |here} to see how to use CreateManagedList API.
     */
    createManagedList(createManagedListRequest: requests.CreateManagedListRequest): Promise<responses.CreateManagedListResponse>;
    /**
     * Creates a responder recipe (ResponderRecipe resource), from values passed in a
     * CreateResponderRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateResponderRecipeRequest
     * @return CreateResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateResponderRecipe.ts.html |here} to see how to use CreateResponderRecipe API.
     */
    createResponderRecipe(createResponderRecipeRequest: requests.CreateResponderRecipeRequest): Promise<responses.CreateResponderRecipeResponse>;
    /**
     * Creates a SavedQuery resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSavedQueryRequest
     * @return CreateSavedQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateSavedQuery.ts.html |here} to see how to use CreateSavedQuery API.
     */
    createSavedQuery(createSavedQueryRequest: requests.CreateSavedQueryRequest): Promise<responses.CreateSavedQueryResponse>;
    /**
     * Creates a security zone recipe (SecurityRecipe resource), using parameters
     * passed in a CreateSecurityRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSecurityRecipeRequest
     * @return CreateSecurityRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateSecurityRecipe.ts.html |here} to see how to use CreateSecurityRecipe API.
     */
    createSecurityRecipe(createSecurityRecipeRequest: requests.CreateSecurityRecipeRequest): Promise<responses.CreateSecurityRecipeResponse>;
    /**
     * Creates a security zone (SecurityZone resource) for a compartment. Pass parameters
     * through a CreateSecurityZoneDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSecurityZoneRequest
     * @return CreateSecurityZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateSecurityZone.ts.html |here} to see how to use CreateSecurityZone API.
     */
    createSecurityZone(createSecurityZoneRequest: requests.CreateSecurityZoneRequest): Promise<responses.CreateSecurityZoneResponse>;
    /**
     * Creates a target (Target resource), using parameters passed in a CreateTargetDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateTargetRequest
     * @return CreateTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateTarget.ts.html |here} to see how to use CreateTarget API.
     */
    createTarget(createTargetRequest: requests.CreateTargetRequest): Promise<responses.CreateTargetResponse>;
    /**
     * Attaches a DetectorRecipe to a target (Target resource) identified by targetId,
     * using parameters passed in a TargetAttachTargetDetectorRecipeDetails resource.
     * Attach a DetectorRecipe with the Target
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateTargetDetectorRecipeRequest
     * @return CreateTargetDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateTargetDetectorRecipe.ts.html |here} to see how to use CreateTargetDetectorRecipe API.
     */
    createTargetDetectorRecipe(createTargetDetectorRecipeRequest: requests.CreateTargetDetectorRecipeRequest): Promise<responses.CreateTargetDetectorRecipeResponse>;
    /**
     * Attaches a responder recipe to a target.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateTargetResponderRecipeRequest
     * @return CreateTargetResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateTargetResponderRecipe.ts.html |here} to see how to use CreateTargetResponderRecipe API.
     */
    createTargetResponderRecipe(createTargetResponderRecipeRequest: requests.CreateTargetResponderRecipeRequest): Promise<responses.CreateTargetResponderRecipeResponse>;
    /**
     * Creates and registers a WLP agent for an
     * on-premise resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateWlpAgentRequest
     * @return CreateWlpAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/CreateWlpAgent.ts.html |here} to see how to use CreateWlpAgent API.
     */
    createWlpAgent(createWlpAgentRequest: requests.CreateWlpAgentRequest): Promise<responses.CreateWlpAgentResponse>;
    /**
     * Deletes a AdhocQuery resource identified by adhocQueryId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteAdhocQueryRequest
     * @return DeleteAdhocQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteAdhocQuery.ts.html |here} to see how to use DeleteAdhocQuery API.
     */
    deleteAdhocQuery(deleteAdhocQueryRequest: requests.DeleteAdhocQueryRequest): Promise<responses.DeleteAdhocQueryResponse>;
    /**
     * Deletes a DataMaskRule resource, identified by dataMaskRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDataMaskRuleRequest
     * @return DeleteDataMaskRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteDataMaskRule.ts.html |here} to see how to use DeleteDataMaskRule API.
     */
    deleteDataMaskRule(deleteDataMaskRuleRequest: requests.DeleteDataMaskRuleRequest): Promise<responses.DeleteDataMaskRuleResponse>;
    /**
     * Deletes a data source (DataSource resource) identified by dataSourceId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDataSourceRequest
     * @return DeleteDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteDataSource.ts.html |here} to see how to use DeleteDataSource API.
     */
    deleteDataSource(deleteDataSourceRequest: requests.DeleteDataSourceRequest): Promise<responses.DeleteDataSourceResponse>;
    /**
     * Deletes a detector recipe (DetectorRecipe resource) identified by detectorRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDetectorRecipeRequest
     * @return DeleteDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteDetectorRecipe.ts.html |here} to see how to use DeleteDetectorRecipe API.
     */
    deleteDetectorRecipe(deleteDetectorRecipeRequest: requests.DeleteDetectorRecipeRequest): Promise<responses.DeleteDetectorRecipeResponse>;
    /**
     * Deletes the DetectorRecipeDetectorRule resource identified by detectorRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDetectorRecipeDetectorRuleRequest
     * @return DeleteDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteDetectorRecipeDetectorRule.ts.html |here} to see how to use DeleteDetectorRecipeDetectorRule API.
     */
    deleteDetectorRecipeDetectorRule(deleteDetectorRecipeDetectorRuleRequest: requests.DeleteDetectorRecipeDetectorRuleRequest): Promise<responses.DeleteDetectorRecipeDetectorRuleResponse>;
    /**
     * Deletes the DetectorRecipeDetectorRuleDataSource resource by identifier.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDetectorRecipeDetectorRuleDataSourceRequest
     * @return DeleteDetectorRecipeDetectorRuleDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteDetectorRecipeDetectorRuleDataSource.ts.html |here} to see how to use DeleteDetectorRecipeDetectorRuleDataSource API.
     */
    deleteDetectorRecipeDetectorRuleDataSource(deleteDetectorRecipeDetectorRuleDataSourceRequest: requests.DeleteDetectorRecipeDetectorRuleDataSourceRequest): Promise<responses.DeleteDetectorRecipeDetectorRuleDataSourceResponse>;
    /**
     * Deletes a managed list identified by managedListId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteManagedListRequest
     * @return DeleteManagedListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteManagedList.ts.html |here} to see how to use DeleteManagedList API.
     */
    deleteManagedList(deleteManagedListRequest: requests.DeleteManagedListRequest): Promise<responses.DeleteManagedListResponse>;
    /**
     * Deletes a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteResponderRecipeRequest
     * @return DeleteResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteResponderRecipe.ts.html |here} to see how to use DeleteResponderRecipe API.
     */
    deleteResponderRecipe(deleteResponderRecipeRequest: requests.DeleteResponderRecipeRequest): Promise<responses.DeleteResponderRecipeResponse>;
    /**
     * Deletes a SavedQuery resource identified by savedQueryId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSavedQueryRequest
     * @return DeleteSavedQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteSavedQuery.ts.html |here} to see how to use DeleteSavedQuery API.
     */
    deleteSavedQuery(deleteSavedQueryRequest: requests.DeleteSavedQueryRequest): Promise<responses.DeleteSavedQueryResponse>;
    /**
     * Deletes a security zone recipe, identified by securityRecipeId. The recipe can't be associated with an existing security zone.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSecurityRecipeRequest
     * @return DeleteSecurityRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteSecurityRecipe.ts.html |here} to see how to use DeleteSecurityRecipe API.
     */
    deleteSecurityRecipe(deleteSecurityRecipeRequest: requests.DeleteSecurityRecipeRequest): Promise<responses.DeleteSecurityRecipeResponse>;
    /**
     * Deletes a security zone, identified by securityZoneId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSecurityZoneRequest
     * @return DeleteSecurityZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteSecurityZone.ts.html |here} to see how to use DeleteSecurityZone API.
     */
    deleteSecurityZone(deleteSecurityZoneRequest: requests.DeleteSecurityZoneRequest): Promise<responses.DeleteSecurityZoneResponse>;
    /**
     * Deletes a target (Target resource) identified by targetId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteTargetRequest
     * @return DeleteTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteTarget.ts.html |here} to see how to use DeleteTarget API.
     */
    deleteTarget(deleteTargetRequest: requests.DeleteTargetRequest): Promise<responses.DeleteTargetResponse>;
    /**
     * Deletes the target detector recipe (TargetDetectorRecipe resource) identified by
     * targetDetectorRecipeId, from a target (Target resource) identified by targetId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteTargetDetectorRecipeRequest
     * @return DeleteTargetDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteTargetDetectorRecipe.ts.html |here} to see how to use DeleteTargetDetectorRecipe API.
     */
    deleteTargetDetectorRecipe(deleteTargetDetectorRecipeRequest: requests.DeleteTargetDetectorRecipeRequest): Promise<responses.DeleteTargetDetectorRecipeResponse>;
    /**
     * Detaches a target responder recipe (TargetResponderRecipe resource)
     * identified by targetResponderRecipeId, from a target (Target resource)
     * identified by targetId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteTargetResponderRecipeRequest
     * @return DeleteTargetResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteTargetResponderRecipe.ts.html |here} to see how to use DeleteTargetResponderRecipe API.
     */
    deleteTargetResponderRecipe(deleteTargetResponderRecipeRequest: requests.DeleteTargetResponderRecipeRequest): Promise<responses.DeleteTargetResponderRecipeResponse>;
    /**
     * Deletes and unregisters the WLP agent for an on-premise resource.
     * x-obmcs-splat:
     * routing:
     *   strategy: route-to-any-ad
     * serviceList: [ 'cloudguard-cp-SPLAT_ENV' ]
     * resources:
     *   wlpAgent:
     *     serviceResourceName: WlpAgent
     *     targetCompartmentId: downstream.getOr404('cloudguard-cp-SPLAT_ENV', 'GetWlpAgent', request.resourceId).compartmentId
     *     actionKind: delete
     *     resourceOcid: request.resourceId
     *     reconciliationCanStartAfterSecs: 30
     *     permissions: [ \"WLP_AGENT_DELETE\" ]
     * authorization:
     *   mode: automated
     *   check: resources['wlpAgent'].grantedPermissions.contains('WLP_AGENT_DELETE')
     *   allowCrossTenancy: true
     * tagStore:
     *   mode: automated
     * maximumAttemptCount: 3
     * throttling:
     *   perUserLimit:
     *     rpsLimit: 15
     *   perTenantLimit:
     *     rpsLimit: 30
     * quotas:
     *   mode: automated
     * search:
     *   mode: backfilling
     *   operationResourceName: wlpAgent
     * lock:
     *   mode: test
     *   operationResourceName: wlpAgent
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteWlpAgentRequest
     * @return DeleteWlpAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/DeleteWlpAgent.ts.html |here} to see how to use DeleteWlpAgent API.
     */
    deleteWlpAgent(deleteWlpAgentRequest: requests.DeleteWlpAgentRequest): Promise<responses.DeleteWlpAgentResponse>;
    /**
     * Executes the responder execution. When provided, if-match is checked
     * against etag values of the resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ExecuteResponderExecutionRequest
     * @return ExecuteResponderExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ExecuteResponderExecution.ts.html |here} to see how to use ExecuteResponderExecution API.
     */
    executeResponderExecution(executeResponderExecutionRequest: requests.ExecuteResponderExecutionRequest): Promise<responses.ExecuteResponderExecutionResponse>;
    /**
     * Returns an adhoc query identified by adhocQueryId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAdhocQueryRequest
     * @return GetAdhocQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetAdhocQuery.ts.html |here} to see how to use GetAdhocQuery API.
     */
    getAdhocQuery(getAdhocQueryRequest: requests.GetAdhocQueryRequest): Promise<responses.GetAdhocQueryResponse>;
    /**
     * Downloads the results for a given adhoc ID (from includes results from all monitoring regions).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAdhocQueryResultContentRequest
     * @return GetAdhocQueryResultContentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetAdhocQueryResultContent.ts.html |here} to see how to use GetAdhocQueryResultContent API.
     */
    getAdhocQueryResultContent(getAdhocQueryResultContentRequest: requests.GetAdhocQueryResultContentRequest): Promise<responses.GetAdhocQueryResultContentResponse>;
    /**
     * Returns a ConditionMetatDataType resource with its details.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetConditionMetadataTypeRequest
     * @return GetConditionMetadataTypeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetConditionMetadataType.ts.html |here} to see how to use GetConditionMetadataType API.
     */
    getConditionMetadataType(getConditionMetadataTypeRequest: requests.GetConditionMetadataTypeRequest): Promise<responses.GetConditionMetadataTypeResponse>;
    /**
     * Returns the configuration details for a Cloud Guard tenancy,
     * identified by root compartment OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetConfigurationRequest
     * @return GetConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetConfiguration.ts.html |here} to see how to use GetConfiguration API.
     */
    getConfiguration(getConfigurationRequest: requests.GetConfigurationRequest): Promise<responses.GetConfigurationResponse>;
    /**
     * Returns a DataMaskRule resource, identified by dataMaskRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDataMaskRuleRequest
     * @return GetDataMaskRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDataMaskRule.ts.html |here} to see how to use GetDataMaskRule API.
     */
    getDataMaskRule(getDataMaskRuleRequest: requests.GetDataMaskRuleRequest): Promise<responses.GetDataMaskRuleResponse>;
    /**
     * Returns a data source (DataSource resource) identified by dataSourceId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDataSourceRequest
     * @return GetDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDataSource.ts.html |here} to see how to use GetDataSource API.
     */
    getDataSource(getDataSourceRequest: requests.GetDataSourceRequest): Promise<responses.GetDataSourceResponse>;
    /**
     * Returns a Detector resource, identified by detectorId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDetectorRequest
     * @return GetDetectorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDetector.ts.html |here} to see how to use GetDetector API.
     */
    getDetector(getDetectorRequest: requests.GetDetectorRequest): Promise<responses.GetDetectorResponse>;
    /**
     * Returns a detector recipe (DetectorRecipe resource) identified by detectorRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDetectorRecipeRequest
     * @return GetDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDetectorRecipe.ts.html |here} to see how to use GetDetectorRecipe API.
     */
    getDetectorRecipe(getDetectorRecipeRequest: requests.GetDetectorRecipeRequest): Promise<responses.GetDetectorRecipeResponse>;
    /**
     * Returns a detector rule (DetectorRule resource) identified by detectorRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDetectorRecipeDetectorRuleRequest
     * @return GetDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDetectorRecipeDetectorRule.ts.html |here} to see how to use GetDetectorRecipeDetectorRule API.
     */
    getDetectorRecipeDetectorRule(getDetectorRecipeDetectorRuleRequest: requests.GetDetectorRecipeDetectorRuleRequest): Promise<responses.GetDetectorRecipeDetectorRuleResponse>;
    /**
     * Returns a detector rule (DetectorRule resource) identified by detectorRuleId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDetectorRuleRequest
     * @return GetDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetDetectorRule.ts.html |here} to see how to use GetDetectorRule API.
     */
    getDetectorRule(getDetectorRuleRequest: requests.GetDetectorRuleRequest): Promise<responses.GetDetectorRuleResponse>;
    /**
     * Returns a managed list identified by managedListId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetManagedListRequest
     * @return GetManagedListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetManagedList.ts.html |here} to see how to use GetManagedList API.
     */
    getManagedList(getManagedListRequest: requests.GetManagedListRequest): Promise<responses.GetManagedListResponse>;
    /**
     * Returns the Problem resource identified by problemId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetProblemRequest
     * @return GetProblemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetProblem.ts.html |here} to see how to use GetProblem API.
     */
    getProblem(getProblemRequest: requests.GetProblemRequest): Promise<responses.GetProblemResponse>;
    /**
     * Returns a resource identified by resourceId
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResourceRequest
     * @return GetResourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResource.ts.html |here} to see how to use GetResource API.
     */
    getResource(getResourceRequest: requests.GetResourceRequest): Promise<responses.GetResourceResponse>;
    /**
     * Returns details for a resource profile, identified by resourceProfileId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResourceProfileRequest
     * @return GetResourceProfileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResourceProfile.ts.html |here} to see how to use GetResourceProfile API.
     */
    getResourceProfile(getResourceProfileRequest: requests.GetResourceProfileRequest): Promise<responses.GetResourceProfileResponse>;
    /**
     * Returns the vulnerability details associated with the cveId where resource is an instance
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResourceVulnerabilityRequest
     * @return GetResourceVulnerabilityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResourceVulnerability.ts.html |here} to see how to use GetResourceVulnerability API.
     */
    getResourceVulnerability(getResourceVulnerabilityRequest: requests.GetResourceVulnerabilityRequest): Promise<responses.GetResourceVulnerabilityResponse>;
    /**
     * Returns a responder execution identified by responderExecutionId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResponderExecutionRequest
     * @return GetResponderExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResponderExecution.ts.html |here} to see how to use GetResponderExecution API.
     */
    getResponderExecution(getResponderExecutionRequest: requests.GetResponderExecutionRequest): Promise<responses.GetResponderExecutionResponse>;
    /**
     * Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResponderRecipeRequest
     * @return GetResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResponderRecipe.ts.html |here} to see how to use GetResponderRecipe API.
     */
    getResponderRecipe(getResponderRecipeRequest: requests.GetResponderRecipeRequest): Promise<responses.GetResponderRecipeResponse>;
    /**
     * Returns a responder rule (ResponderRule resource) identified by responderRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResponderRecipeResponderRuleRequest
     * @return GetResponderRecipeResponderRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResponderRecipeResponderRule.ts.html |here} to see how to use GetResponderRecipeResponderRule API.
     */
    getResponderRecipeResponderRule(getResponderRecipeResponderRuleRequest: requests.GetResponderRecipeResponderRuleRequest): Promise<responses.GetResponderRecipeResponderRuleResponse>;
    /**
     * Returns a responder rule (ResponderRule resource) identified by resonderRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetResponderRuleRequest
     * @return GetResponderRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetResponderRule.ts.html |here} to see how to use GetResponderRule API.
     */
    getResponderRule(getResponderRuleRequest: requests.GetResponderRuleRequest): Promise<responses.GetResponderRuleResponse>;
    /**
     * Returns a SavedQuery resource identified by savedQueryId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSavedQueryRequest
     * @return GetSavedQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetSavedQuery.ts.html |here} to see how to use GetSavedQuery API.
     */
    getSavedQuery(getSavedQueryRequest: requests.GetSavedQueryRequest): Promise<responses.GetSavedQueryResponse>;
    /**
     * Returns a security zone policy (SecurityPolicy resource), identified by its unique ID
     * (securityPolicyId). When a policy is enabled in a security zone, then any action in
     * the zone that attempts to violate that policy is blocked.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSecurityPolicyRequest
     * @return GetSecurityPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetSecurityPolicy.ts.html |here} to see how to use GetSecurityPolicy API.
     */
    getSecurityPolicy(getSecurityPolicyRequest: requests.GetSecurityPolicyRequest): Promise<responses.GetSecurityPolicyResponse>;
    /**
     * Returns a security zone recipe (SecurityRecipe resource) identified by securityRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSecurityRecipeRequest
     * @return GetSecurityRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetSecurityRecipe.ts.html |here} to see how to use GetSecurityRecipe API.
     */
    getSecurityRecipe(getSecurityRecipeRequest: requests.GetSecurityRecipeRequest): Promise<responses.GetSecurityRecipeResponse>;
    /**
     * Returns a security zone (SecurityZone resource) identified by securityZoneId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSecurityZoneRequest
     * @return GetSecurityZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetSecurityZone.ts.html |here} to see how to use GetSecurityZone API.
     */
    getSecurityZone(getSecurityZoneRequest: requests.GetSecurityZoneRequest): Promise<responses.GetSecurityZoneResponse>;
    /**
     * Returns a single sighting (Sighting resource) identified by sightingId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSightingRequest
     * @return GetSightingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetSighting.ts.html |here} to see how to use GetSighting API.
     */
    getSighting(getSightingRequest: requests.GetSightingRequest): Promise<responses.GetSightingResponse>;
    /**
     * Returns a target (Target resource) identified by targetId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTargetRequest
     * @return GetTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetTarget.ts.html |here} to see how to use GetTarget API.
     */
    getTarget(getTargetRequest: requests.GetTargetRequest): Promise<responses.GetTargetResponse>;
    /**
     * Returns a target detector recipe (TargetDetectorRecipe resource) identified by targetDetectorRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTargetDetectorRecipeRequest
     * @return GetTargetDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetTargetDetectorRecipe.ts.html |here} to see how to use GetTargetDetectorRecipe API.
     */
    getTargetDetectorRecipe(getTargetDetectorRecipeRequest: requests.GetTargetDetectorRecipeRequest): Promise<responses.GetTargetDetectorRecipeResponse>;
    /**
     * Returns DetectorRule resource by identified by targetDetectorRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTargetDetectorRecipeDetectorRuleRequest
     * @return GetTargetDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetTargetDetectorRecipeDetectorRule.ts.html |here} to see how to use GetTargetDetectorRecipeDetectorRule API.
     */
    getTargetDetectorRecipeDetectorRule(getTargetDetectorRecipeDetectorRuleRequest: requests.GetTargetDetectorRecipeDetectorRuleRequest): Promise<responses.GetTargetDetectorRecipeDetectorRuleResponse>;
    /**
     * Returns a target responder recipe (TargetResponderRecipe) identified by
     * targetResponderRecipeId for a target (Target resource) identified by targetId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTargetResponderRecipeRequest
     * @return GetTargetResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetTargetResponderRecipe.ts.html |here} to see how to use GetTargetResponderRecipe API.
     */
    getTargetResponderRecipe(getTargetResponderRecipeRequest: requests.GetTargetResponderRecipeRequest): Promise<responses.GetTargetResponderRecipeResponse>;
    /**
     * Returns a responder rule (ResponderRule resource) identified by
     * responderRuleId, from a target responder recipe (TargetResponderRecipe resource)
     * identified by targetResponderRecipeId, attached to a target (Target resource)
     * identified by targetId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetTargetResponderRecipeResponderRuleRequest
     * @return GetTargetResponderRecipeResponderRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetTargetResponderRecipeResponderRule.ts.html |here} to see how to use GetTargetResponderRecipeResponderRule API.
     */
    getTargetResponderRecipeResponderRule(getTargetResponderRecipeResponderRuleRequest: requests.GetTargetResponderRecipeResponderRuleRequest): Promise<responses.GetTargetResponderRecipeResponderRuleResponse>;
    /**
     * Returns a WlpAgent resource for an on-premise resource identified by wlpAgentId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWlpAgentRequest
     * @return GetWlpAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetWlpAgent.ts.html |here} to see how to use GetWlpAgent API.
     */
    getWlpAgent(getWlpAgentRequest: requests.GetWlpAgentRequest): Promise<responses.GetWlpAgentResponse>;
    /**
     * Returns details for a work request (WorkRequest resource) identified by workRequestId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
       * Returns a list of all adhoc queries (AdhocQuery resources) for a compartment
  * identified by compartmentId. List is returned in a AdhocQueryCollection resource
  * with page of AdhocQuerySummary resources.
  * <p>
  The ListAdhocQueries operation returns only the adhoc queries in 'compartmentId' passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListAdhocQueries on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListAdhocQueriesRequest
       * @return ListAdhocQueriesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListAdhocQueries.ts.html |here} to see how to use ListAdhocQueries API.
       */
    listAdhocQueries(listAdhocQueriesRequest: requests.ListAdhocQueriesRequest): Promise<responses.ListAdhocQueriesResponse>;
    /**
     * Lists the results for a given adhoc ID (from includes results from all monitoring regions).
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAdhocQueryResultsRequest
     * @return ListAdhocQueryResultsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListAdhocQueryResults.ts.html |here} to see how to use ListAdhocQueryResults API.
     */
    listAdhocQueryResults(listAdhocQueryResultsRequest: requests.ListAdhocQueryResultsRequest): Promise<responses.ListAdhocQueryResultsResponse>;
    /**
     * Returns a list of ConditionMetadataType resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListConditionMetadataTypesRequest
     * @return ListConditionMetadataTypesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListConditionMetadataTypes.ts.html |here} to see how to use ListConditionMetadataTypes API.
     */
    listConditionMetadataTypes(listConditionMetadataTypesRequest: requests.ListConditionMetadataTypesRequest): Promise<responses.ListConditionMetadataTypesResponse>;
    /**
     * Returns a list of all DataMaskRule resources in the specified compartmentId (OCID) and its subcompartments.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDataMaskRulesRequest
     * @return ListDataMaskRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDataMaskRules.ts.html |here} to see how to use ListDataMaskRules API.
     */
    listDataMaskRules(listDataMaskRulesRequest: requests.ListDataMaskRulesRequest): Promise<responses.ListDataMaskRulesResponse>;
    /**
     * Returns a list of data source events
     * (DataSourceEventCollection  resource) from the data source
     * (DataSource resource) identified by dataSourceId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDataSourceEventsRequest
     * @return ListDataSourceEventsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDataSourceEvents.ts.html |here} to see how to use ListDataSourceEvents API.
     */
    listDataSourceEvents(listDataSourceEventsRequest: requests.ListDataSourceEventsRequest): Promise<responses.ListDataSourceEventsResponse>;
    /**
       * Returns a list of all data sources (DataSource resources) for a compartment
  * identified by compartmentId. List is returned in a DataSourceCollection resource
  * with page of DataSourceSummary resources.
  * <p>
  The ListAdhocQueries operation returns only the adhoc queries in 'compartmentId' passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListAdhocQueries on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListDataSourcesRequest
       * @return ListDataSourcesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDataSources.ts.html |here} to see how to use ListDataSources API.
       */
    listDataSources(listDataSourcesRequest: requests.ListDataSourcesRequest): Promise<responses.ListDataSourcesResponse>;
    /**
     * Returns a list of detector rules (DetectorRule resources) for a detector recipe (DetectorRecipe resource), identified by detectorRecipeId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDetectorRecipeDetectorRulesRequest
     * @return ListDetectorRecipeDetectorRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDetectorRecipeDetectorRules.ts.html |here} to see how to use ListDetectorRecipeDetectorRules API.
     */
    listDetectorRecipeDetectorRules(listDetectorRecipeDetectorRulesRequest: requests.ListDetectorRecipeDetectorRulesRequest): Promise<responses.ListDetectorRecipeDetectorRulesResponse>;
    /**
       * Returns a list of all detector recipes (DetectorRecipe resources) in a compartment, identified by compartmentId.
  * <p>
  The ListDetectorRecipes operation returns only the detector recipes in `compartmentId` passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListDetectorRecipes on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListDetectorRecipesRequest
       * @return ListDetectorRecipesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDetectorRecipes.ts.html |here} to see how to use ListDetectorRecipes API.
       */
    listDetectorRecipes(listDetectorRecipesRequest: requests.ListDetectorRecipesRequest): Promise<responses.ListDetectorRecipesResponse>;
    /**
     * Returns a list of detector rules for the DetectorRecipe resource identified by detectorId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDetectorRulesRequest
     * @return ListDetectorRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDetectorRules.ts.html |here} to see how to use ListDetectorRules API.
     */
    listDetectorRules(listDetectorRulesRequest: requests.ListDetectorRulesRequest): Promise<responses.ListDetectorRulesResponse>;
    /**
     * Returns a detector catalog (DetectorCollection resource) with a list of DetectorSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDetectorsRequest
     * @return ListDetectorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListDetectors.ts.html |here} to see how to use ListDetectors API.
     */
    listDetectors(listDetectorsRequest: requests.ListDetectorsRequest): Promise<responses.ListDetectorsResponse>;
    /**
     * Returns a list of impacted resources for a problem identified by problemId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListImpactedResourcesRequest
     * @return ListImpactedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListImpactedResources.ts.html |here} to see how to use ListImpactedResources API.
     */
    listImpactedResources(listImpactedResourcesRequest: requests.ListImpactedResourcesRequest): Promise<responses.ListImpactedResourcesResponse>;
    /**
     * Returns all managed list types (listType parameter) that Cloud Guard supports.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListManagedListTypesRequest
     * @return ListManagedListTypesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListManagedListTypes.ts.html |here} to see how to use ListManagedListTypes API.
     */
    listManagedListTypes(listManagedListTypesRequest: requests.ListManagedListTypesRequest): Promise<responses.ListManagedListTypesResponse>;
    /**
       * Returns a list of all ManagedList resources in a compartment, identified by compartmentId.
  * The ListManagedLists operation returns only the managed lists in `compartmentId` passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return ManagedLists in only
  * those compartments for which the requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListManagedLists on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListManagedListsRequest
       * @return ListManagedListsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListManagedLists.ts.html |here} to see how to use ListManagedLists API.
       */
    listManagedLists(listManagedListsRequest: requests.ListManagedListsRequest): Promise<responses.ListManagedListsResponse>;
    /**
     * Returns the list of global policy statements (policy attributes) needed to fully enable Cloud Guard.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPoliciesRequest
     * @return ListPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListPolicies.ts.html |here} to see how to use ListPolicies API.
     */
    listPolicies(listPoliciesRequest: requests.ListPoliciesRequest): Promise<responses.ListPoliciesResponse>;
    /**
     * Returns a list of endpoints associated with a problem, identified by problemId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProblemEndpointsRequest
     * @return ListProblemEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListProblemEndpoints.ts.html |here} to see how to use ListProblemEndpoints API.
     */
    listProblemEndpoints(listProblemEndpointsRequest: requests.ListProblemEndpointsRequest): Promise<responses.ListProblemEndpointsResponse>;
    /**
     * Returns a list of entities for a problem.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProblemEntitiesRequest
     * @return ListProblemEntitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListProblemEntities.ts.html |here} to see how to use ListProblemEntities API.
     */
    listProblemEntities(listProblemEntitiesRequest: requests.ListProblemEntitiesRequest): Promise<responses.ListProblemEntitiesResponse>;
    /**
     * Returns a list of actions taken on a problem.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListProblemHistoriesRequest
     * @return ListProblemHistoriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListProblemHistories.ts.html |here} to see how to use ListProblemHistories API.
     */
    listProblemHistories(listProblemHistoriesRequest: requests.ListProblemHistoriesRequest): Promise<responses.ListProblemHistoriesResponse>;
    /**
       * Returns a list of all Problems identified by Cloud Guard which are currently in the database and meet the filtering criteria.
  * <p>
  The ListProblems operation returns only the problems in `compartmentId` passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListProblems on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListProblemsRequest
       * @return ListProblemsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListProblems.ts.html |here} to see how to use ListProblems API.
       */
    listProblems(listProblemsRequest: requests.ListProblemsRequest): Promise<responses.ListProblemsResponse>;
    /**
     * Returns a list of recommendations (RecommendationSummaryCollection resource with a page of
     * RecommendationSummary resources) for a specified compartment OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListRecommendationsRequest
     * @return ListRecommendationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListRecommendations.ts.html |here} to see how to use ListRecommendations API.
     */
    listRecommendations(listRecommendationsRequest: requests.ListRecommendationsRequest): Promise<responses.ListRecommendationsResponse>;
    /**
     * Returns the list of open ports associated with the resourceId where resource is an instance
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResourcePortsRequest
     * @return ListResourcePortsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourcePorts.ts.html |here} to see how to use ListResourcePorts API.
     */
    listResourcePorts(listResourcePortsRequest: requests.ListResourcePortsRequest): Promise<responses.ListResourcePortsResponse>;
    /**
     * Returns a list of endpoints (ResourceProfileEndpointCollection resource with a page of
     * ResourceProfileEndpointSummary resources) for a resource profile identified by resourceProfileId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResourceProfileEndpointsRequest
     * @return ListResourceProfileEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourceProfileEndpoints.ts.html |here} to see how to use ListResourceProfileEndpoints API.
     */
    listResourceProfileEndpoints(listResourceProfileEndpointsRequest: requests.ListResourceProfileEndpointsRequest): Promise<responses.ListResourceProfileEndpointsResponse>;
    /**
     * Returns a list of impacted resources (ResourceProfileImpactedResourceCollection resource
     * with a page of ResourceProfileImpactedResourceSummary resources) for a resource profile
     * identified by resourceProfileId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResourceProfileImpactedResourcesRequest
     * @return ListResourceProfileImpactedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourceProfileImpactedResources.ts.html |here} to see how to use ListResourceProfileImpactedResources API.
     */
    listResourceProfileImpactedResources(listResourceProfileImpactedResourcesRequest: requests.ListResourceProfileImpactedResourcesRequest): Promise<responses.ListResourceProfileImpactedResourcesResponse>;
    /**
       * Returns a list of all resource profile summaries (ResourceProfileCollection resource with a page of
  * ResourceProfileSummary resources) for a compartment, identified by compartmentId and filtered as specified.
  * <p>
  The ListResourceProfiles operation returns only the resource profiles in `compartmentId` passed.
  * The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListResourceProfiles on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListResourceProfilesRequest
       * @return ListResourceProfilesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourceProfiles.ts.html |here} to see how to use ListResourceProfiles API.
       */
    listResourceProfiles(listResourceProfilesRequest: requests.ListResourceProfilesRequest): Promise<responses.ListResourceProfilesResponse>;
    /**
     * Returns a single ResourceTypeCollection resource, containing a list of resource types,
     * identified by parameters specified.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResourceTypesRequest
     * @return ListResourceTypesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourceTypes.ts.html |here} to see how to use ListResourceTypes API.
     */
    listResourceTypes(listResourceTypesRequest: requests.ListResourceTypesRequest): Promise<responses.ListResourceTypesResponse>;
    /**
     * Returns the list of vulnerabilities associated with the resourceId where resource is an instance
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResourceVulnerabilitiesRequest
     * @return ListResourceVulnerabilitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResourceVulnerabilities.ts.html |here} to see how to use ListResourceVulnerabilities API.
     */
    listResourceVulnerabilities(listResourceVulnerabilitiesRequest: requests.ListResourceVulnerabilitiesRequest): Promise<responses.ListResourceVulnerabilitiesResponse>;
    /**
       * Returns a list of all resources in a compartment
  * <p>
  The ListResources operation returns only the resources in `compartmentId` passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListResources on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListResourcesRequest
       * @return ListResourcesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResources.ts.html |here} to see how to use ListResources API.
       */
    listResources(listResourcesRequest: requests.ListResourcesRequest): Promise<responses.ListResourcesResponse>;
    /**
     * Returns a list of responder activities for a problem, identified by problemId, in a
     * ResponderActivityCollection resource, with a page of ResponderActivitySummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResponderActivitiesRequest
     * @return ListResponderActivitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResponderActivities.ts.html |here} to see how to use ListResponderActivities API.
     */
    listResponderActivities(listResponderActivitiesRequest: requests.ListResponderActivitiesRequest): Promise<responses.ListResponderActivitiesResponse>;
    /**
     * Returns a list of responder executions. A responder execution is an entity that tracks
     * the collective execution of multiple responder rule executions for a given problem.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResponderExecutionsRequest
     * @return ListResponderExecutionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResponderExecutions.ts.html |here} to see how to use ListResponderExecutions API.
     */
    listResponderExecutions(listResponderExecutionsRequest: requests.ListResponderExecutionsRequest): Promise<responses.ListResponderExecutionsResponse>;
    /**
     * Returns a list of responder rules (ResponderRule resources in a
     * responderRecipeResponderRuleCollection resource, with page of ResponderRuleSummary resources),
     * for a responder recipe (ResponderRecipe resource), identified by responderRecipeId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResponderRecipeResponderRulesRequest
     * @return ListResponderRecipeResponderRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResponderRecipeResponderRules.ts.html |here} to see how to use ListResponderRecipeResponderRules API.
     */
    listResponderRecipeResponderRules(listResponderRecipeResponderRulesRequest: requests.ListResponderRecipeResponderRulesRequest): Promise<responses.ListResponderRecipeResponderRulesResponse>;
    /**
       * Returns a list (ResponderRecipeCollection resource, with a page of ResponderRecipeSummary resources)
  * of all responder recipes (RespponderRecipe resources) in a compartment, identified by compartmentId.
  * The ListResponderRecipe operation returns only the targets in `compartmentId` passed.
  * The list does not include any subcompartments of the compartmentId passed.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListResponderRecipe on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListResponderRecipesRequest
       * @return ListResponderRecipesResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResponderRecipes.ts.html |here} to see how to use ListResponderRecipes API.
       */
    listResponderRecipes(listResponderRecipesRequest: requests.ListResponderRecipesRequest): Promise<responses.ListResponderRecipesResponse>;
    /**
     * Returns a list of responder rules for the ResponderRecipe resource
     * identified by responderId. The list is contained in a ResponderRuleCollection
     * resource with a page of ResponderRuleSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListResponderRulesRequest
     * @return ListResponderRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListResponderRules.ts.html |here} to see how to use ListResponderRules API.
     */
    listResponderRules(listResponderRulesRequest: requests.ListResponderRulesRequest): Promise<responses.ListResponderRulesResponse>;
    /**
     * Returns a list of saved queries run in a tenancy.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSavedQueriesRequest
     * @return ListSavedQueriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSavedQueries.ts.html |here} to see how to use ListSavedQueries API.
     */
    listSavedQueries(listSavedQueriesRequest: requests.ListSavedQueriesRequest): Promise<responses.ListSavedQueriesResponse>;
    /**
     * Returns a list of security zone policies (SecurityPolicySummary resources),
     * identified by compartmentId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSecurityPoliciesRequest
     * @return ListSecurityPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSecurityPolicies.ts.html |here} to see how to use ListSecurityPolicies API.
     */
    listSecurityPolicies(listSecurityPoliciesRequest: requests.ListSecurityPoliciesRequest): Promise<responses.ListSecurityPoliciesResponse>;
    /**
     * Returns a list of security zone recipes (SecurityRecipeSummary resources) in a
     * compartment, identified by compartmentId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSecurityRecipesRequest
     * @return ListSecurityRecipesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSecurityRecipes.ts.html |here} to see how to use ListSecurityRecipes API.
     */
    listSecurityRecipes(listSecurityRecipesRequest: requests.ListSecurityRecipesRequest): Promise<responses.ListSecurityRecipesResponse>;
    /**
     * Returns a list of security zones (SecurityZone resources) in a compartment identified by
     * compartmentId. List is contained in a page of SecurityZoneSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSecurityZonesRequest
     * @return ListSecurityZonesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSecurityZones.ts.html |here} to see how to use ListSecurityZones API.
     */
    listSecurityZones(listSecurityZonesRequest: requests.ListSecurityZonesRequest): Promise<responses.ListSecurityZonesResponse>;
    /**
     * Returns sighting endpoints details in a
     * SightingEndpointsCollection resource
     * with a page of SightingEndpointSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSightingEndpointsRequest
     * @return ListSightingEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSightingEndpoints.ts.html |here} to see how to use ListSightingEndpoints API.
     */
    listSightingEndpoints(listSightingEndpointsRequest: requests.ListSightingEndpointsRequest): Promise<responses.ListSightingEndpointsResponse>;
    /**
     * Returns a list of impacted resources for a sighting, identified by sightingId, in a
     * SightingImpactedResourceCollection resource with a page of SightingImpactedResourceSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSightingImpactedResourcesRequest
     * @return ListSightingImpactedResourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSightingImpactedResources.ts.html |here} to see how to use ListSightingImpactedResources API.
     */
    listSightingImpactedResources(listSightingImpactedResourcesRequest: requests.ListSightingImpactedResourcesRequest): Promise<responses.ListSightingImpactedResourcesResponse>;
    /**
       * For the parameters passed, returns a list of sightings
  * (SightingCollection resource) with a page of SightingSummary resources.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListSightings on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListSightingsRequest
       * @return ListSightingsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListSightings.ts.html |here} to see how to use ListSightings API.
       */
    listSightings(listSightingsRequest: requests.ListSightingsRequest): Promise<responses.ListSightingsResponse>;
    /**
     * Returns a list of TacticSummary resources for a compartment, identified by compartmentId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTacticsRequest
     * @return ListTacticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTactics.ts.html |here} to see how to use ListTactics API.
     */
    listTactics(listTacticsRequest: requests.ListTacticsRequest): Promise<responses.ListTacticsResponse>;
    /**
     * Returns a list of DetectorRule associated with DetectorRecipe within a Target.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTargetDetectorRecipeDetectorRulesRequest
     * @return ListTargetDetectorRecipeDetectorRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTargetDetectorRecipeDetectorRules.ts.html |here} to see how to use ListTargetDetectorRecipeDetectorRules API.
     */
    listTargetDetectorRecipeDetectorRules(listTargetDetectorRecipeDetectorRulesRequest: requests.ListTargetDetectorRecipeDetectorRulesRequest): Promise<responses.ListTargetDetectorRecipeDetectorRulesResponse>;
    /**
     * Returns a list of all target detector recipes (TargetDetectorRecipe resources)
     * associated with a target (Target resource), identified by targetId. The list is contained
     * in a TargetDetectorRecipeCollection resource with page of TargetDetectorRecipeSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTargetDetectorRecipesRequest
     * @return ListTargetDetectorRecipesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTargetDetectorRecipes.ts.html |here} to see how to use ListTargetDetectorRecipes API.
     */
    listTargetDetectorRecipes(listTargetDetectorRecipesRequest: requests.ListTargetDetectorRecipesRequest): Promise<responses.ListTargetDetectorRecipesResponse>;
    /**
     * Returns a list of responder rules (ResponderRule resources) associated with a
     * responder recipe (ResponderRecipe resource) attached to a Target.
     * List is returned in a TargetResponderRecipeResponderRuleCollection resource
     * with page of TargetResponderRecipeResponderRuleSummary resources.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTargetResponderRecipeResponderRulesRequest
     * @return ListTargetResponderRecipeResponderRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTargetResponderRecipeResponderRules.ts.html |here} to see how to use ListTargetResponderRecipeResponderRules API.
     */
    listTargetResponderRecipeResponderRules(listTargetResponderRecipeResponderRulesRequest: requests.ListTargetResponderRecipeResponderRulesRequest): Promise<responses.ListTargetResponderRecipeResponderRulesResponse>;
    /**
     * Returns a list of summary information for all responder recipes
     * (TargetResponderRecipeCollection resource, with a page of TargetResponderRecipeSummary resources)
     * attached to a target identified by targetId, located in a compartment identified by compartmentId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTargetResponderRecipesRequest
     * @return ListTargetResponderRecipesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTargetResponderRecipes.ts.html |here} to see how to use ListTargetResponderRecipes API.
     */
    listTargetResponderRecipes(listTargetResponderRecipesRequest: requests.ListTargetResponderRecipesRequest): Promise<responses.ListTargetResponderRecipesResponse>;
    /**
       * Returns a list of targets (TargetCollection resource with page of TargetSummary
  * resources) for the target identified by compartmentId. By default, only the target
  * associated with the compartment is returned. Setting compartmentIdInSubtree to true
  * returns the entire hierarchy of targets in subcompartments.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform ListTargets on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all targets in compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param ListTargetsRequest
       * @return ListTargetsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTargets.ts.html |here} to see how to use ListTargets API.
       */
    listTargets(listTargetsRequest: requests.ListTargetsRequest): Promise<responses.ListTargetsResponse>;
    /**
     * Returns a list of techniques associated with detector rules.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListTechniquesRequest
     * @return ListTechniquesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListTechniques.ts.html |here} to see how to use ListTechniques API.
     */
    listTechniques(listTechniquesRequest: requests.ListTechniquesRequest): Promise<responses.ListTechniquesResponse>;
    /**
     * Returns a list of WLP agents in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWlpAgentsRequest
     * @return ListWlpAgentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListWlpAgents.ts.html |here} to see how to use ListWlpAgents API.
     */
    listWlpAgents(listWlpAgentsRequest: requests.ListWlpAgentsRequest): Promise<responses.ListWlpAgentsResponse>;
    /**
     * Returns a list of errors for a work request
     * identified by workRequestId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a paginated list (WorkRequestLogEntryCollection resource)
     * of log entries for a request, identified by workRequestId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Returns a list of work requests (WorkRequestSummaryCollection resource),
     * in a compartment identified by compartmentId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Removes a compartment from a security zone (SecurityZone resource), identified by securityZoneId.
     * Pass compartmentId of compartment to remove through a RemoveCompartmentDetails resource. When you remove a
     * subcompartment from a security zone, it no longer enforces security zone policies on the resources in the
     * subcompartment. You can't remove the primary compartment that was used to create the security zone.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RemoveCompartmentRequest
     * @return RemoveCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RemoveCompartment.ts.html |here} to see how to use RemoveCompartment API.
     */
    removeCompartment(removeCompartmentRequest: requests.RemoveCompartmentRequest): Promise<responses.RemoveCompartmentResponse>;
    /**
     * Returns a page of RiskScoreAggregation resources for a compartment,
     * identified by compartmentId.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestRiskScoresRequest
     * @return RequestRiskScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestRiskScores.ts.html |here} to see how to use RequestRiskScores API.
     */
    requestRiskScores(requestRiskScoresRequest: requests.RequestRiskScoresRequest): Promise<responses.RequestRiskScoresResponse>;
    /**
     * Returns a page of SecurityScoreTrendAggregation resources. These measure the number
     * of resources examined across all regions and compare it with the number of problems detected.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSecurityScoreSummarizedTrendRequest
     * @return RequestSecurityScoreSummarizedTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSecurityScoreSummarizedTrend.ts.html |here} to see how to use RequestSecurityScoreSummarizedTrend API.
     */
    requestSecurityScoreSummarizedTrend(requestSecurityScoreSummarizedTrendRequest: requests.RequestSecurityScoreSummarizedTrendRequest): Promise<responses.RequestSecurityScoreSummarizedTrendResponse>;
    /**
     * Returns a page of SecurityScoreAggregation resources. These measure the number
     * of resources examined across all regions and compare it with the number of problems detected.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSecurityScoresRequest
     * @return RequestSecurityScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSecurityScores.ts.html |here} to see how to use RequestSecurityScores API.
     */
    requestSecurityScores(requestSecurityScoresRequest: requests.RequestSecurityScoresRequest): Promise<responses.RequestSecurityScoresResponse>;
    /**
       * Returns the summary of problems generated by OCI Activity Detector rules, identified by parameters specified.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform summarize API on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  * <p>
  The compartmentId to be passed with `accessLevel` and `compartmentIdInSubtree` params has to be the root
  * compartment id (tenant-id) only.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param RequestSummarizedActivityProblemsRequest
       * @return RequestSummarizedActivityProblemsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedActivityProblems.ts.html |here} to see how to use RequestSummarizedActivityProblems API.
       */
    requestSummarizedActivityProblems(requestSummarizedActivityProblemsRequest: requests.RequestSummarizedActivityProblemsRequest): Promise<responses.RequestSummarizedActivityProblemsResponse>;
    /**
       * Returns the number of problems matching the key-value pairs in dimensionMap.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform summarize API on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param RequestSummarizedProblemsRequest
       * @return RequestSummarizedProblemsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedProblems.ts.html |here} to see how to use RequestSummarizedProblems API.
       */
    requestSummarizedProblems(requestSummarizedProblemsRequest: requests.RequestSummarizedProblemsRequest): Promise<responses.RequestSummarizedProblemsResponse>;
    /**
       * Returns the number of responder executions, identified by parameters specified, in a page of
  * ResponderExecutionAggregation resources.
  * <p>
  Setting accessLevel to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions,
  * directly or indirectly (permissions can be on a resource in a subcompartment). \u201CNot Authorized\u201D is returned
  * if user doesn't have access to at least one of the child compartments. When accessLevel is set to RESTRICTED,
  * permissions are checked and no partial results are displayed. This is valid only when compartmentIdInSubtree is set to true.
  * <p>
  Setting accessLevel to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions, directly or
  * indirectly (permissions can be on a resource in a subcompartment). \u201CNot Authorized\u201D is returned if user doesn't have
  * access to at least one of the child compartments. When accessLevel is set to RESTRICTED, permissions are checked
  * and no partial results are displayed. This is valid only when compartmentIdInSubtree is set to true.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param RequestSummarizedResponderExecutionsRequest
       * @return RequestSummarizedResponderExecutionsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedResponderExecutions.ts.html |here} to see how to use RequestSummarizedResponderExecutions API.
       */
    requestSummarizedResponderExecutions(requestSummarizedResponderExecutionsRequest: requests.RequestSummarizedResponderExecutionsRequest): Promise<responses.RequestSummarizedResponderExecutionsResponse>;
    /**
     * DEPRECATED
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedRiskScoresRequest
     * @return RequestSummarizedRiskScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedRiskScores.ts.html |here} to see how to use RequestSummarizedRiskScores API.
     */
    requestSummarizedRiskScores(requestSummarizedRiskScoresRequest: requests.RequestSummarizedRiskScoresRequest): Promise<responses.RequestSummarizedRiskScoresResponse>;
    /**
     * DEPRECATED
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedSecurityScoresRequest
     * @return RequestSummarizedSecurityScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedSecurityScores.ts.html |here} to see how to use RequestSummarizedSecurityScores API.
     */
    requestSummarizedSecurityScores(requestSummarizedSecurityScoresRequest: requests.RequestSummarizedSecurityScoresRequest): Promise<responses.RequestSummarizedSecurityScoresResponse>;
    /**
     * Returns a list of resource profile risk score aggregation summaries
     * (ResourceProfileRiskScoreAggregationSummaryCollection resource with a page of
     * ResourceProfileRiskScoreAggregationSummary resources) for a specified compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedTopTrendResourceProfileRiskScoresRequest
     * @return RequestSummarizedTopTrendResourceProfileRiskScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedTopTrendResourceProfileRiskScores.ts.html |here} to see how to use RequestSummarizedTopTrendResourceProfileRiskScores API.
     */
    requestSummarizedTopTrendResourceProfileRiskScores(requestSummarizedTopTrendResourceProfileRiskScoresRequest: requests.RequestSummarizedTopTrendResourceProfileRiskScoresRequest): Promise<responses.RequestSummarizedTopTrendResourceProfileRiskScoresResponse>;
    /**
       * Returns a ProblemTrendAggregationCollection resource for a compartment, identified by compartmentId, for the specified time period. The ProblemTrendAggregationCollection resource contains a list of ProblemTrendAggregation resources.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform summarize API on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param RequestSummarizedTrendProblemsRequest
       * @return RequestSummarizedTrendProblemsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedTrendProblems.ts.html |here} to see how to use RequestSummarizedTrendProblems API.
       */
    requestSummarizedTrendProblems(requestSummarizedTrendProblemsRequest: requests.RequestSummarizedTrendProblemsRequest): Promise<responses.RequestSummarizedTrendProblemsResponse>;
    /**
     * Returns a summary of risk score trends in a  ResourceRiskScoreAggregationCollection resource,
     * with a page of ResourceRiskScoreAggregation resources, filtered by parameters that you specify
     * in a RequestSummarizedTrendResourceRiskScoresDetailsresource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedTrendResourceRiskScoresRequest
     * @return RequestSummarizedTrendResourceRiskScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedTrendResourceRiskScores.ts.html |here} to see how to use RequestSummarizedTrendResourceRiskScores API.
     */
    requestSummarizedTrendResourceRiskScores(requestSummarizedTrendResourceRiskScoresRequest: requests.RequestSummarizedTrendResourceRiskScoresRequest): Promise<responses.RequestSummarizedTrendResourceRiskScoresResponse>;
    /**
       * Returns the number of remediations performed by Responders, for a given time period.
  * <p>
  The parameter `accessLevel` specifies whether to return only those compartments for which the
  * requestor has INSPECT permissions on at least one resource directly
  * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
  * Principal doesn't have access to even one of the child compartments. This is valid only when
  * `compartmentIdInSubtree` is set to `true`.
  * <p>
  The parameter `compartmentIdInSubtree` applies when you perform summarize API on the
  * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
  *
       * This operation does not retry by default if the user has not defined a retry configuration.
       * @param RequestSummarizedTrendResponderExecutionsRequest
       * @return RequestSummarizedTrendResponderExecutionsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedTrendResponderExecutions.ts.html |here} to see how to use RequestSummarizedTrendResponderExecutions API.
       */
    requestSummarizedTrendResponderExecutions(requestSummarizedTrendResponderExecutionsRequest: requests.RequestSummarizedTrendResponderExecutionsRequest): Promise<responses.RequestSummarizedTrendResponderExecutionsResponse>;
    /**
     * DEPRECATED
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedTrendSecurityScoresRequest
     * @return RequestSummarizedTrendSecurityScoresResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/RequestSummarizedTrendSecurityScores.ts.html |here} to see how to use RequestSummarizedTrendSecurityScores API.
     */
    requestSummarizedTrendSecurityScores(requestSummarizedTrendSecurityScoresRequest: requests.RequestSummarizedTrendSecurityScoresRequest): Promise<responses.RequestSummarizedTrendSecurityScoresResponse>;
    /**
     * Skips the execution for a bulk of responder executions.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SkipBulkResponderExecutionRequest
     * @return SkipBulkResponderExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/SkipBulkResponderExecution.ts.html |here} to see how to use SkipBulkResponderExecution API.
     */
    skipBulkResponderExecution(skipBulkResponderExecutionRequest: requests.SkipBulkResponderExecutionRequest): Promise<responses.SkipBulkResponderExecutionResponse>;
    /**
     * Skips the execution of the responder execution. When provided, If-Match is checked against etag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SkipResponderExecutionRequest
     * @return SkipResponderExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/SkipResponderExecution.ts.html |here} to see how to use SkipResponderExecution API.
     */
    skipResponderExecution(skipResponderExecutionRequest: requests.SkipResponderExecutionRequest): Promise<responses.SkipResponderExecutionResponse>;
    /**
     * Sends the problem identified by problemId to the responder engine, to be processed by rule
     * that\u2019s identified by responderRuleId, in the TriggerResponderDetails resource that\u2019s passed.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param TriggerResponderRequest
     * @return TriggerResponderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/TriggerResponder.ts.html |here} to see how to use TriggerResponder API.
     */
    triggerResponder(triggerResponderRequest: requests.TriggerResponderRequest): Promise<responses.TriggerResponderResponse>;
    /**
     * Changes the status for all problems listed in the problemIds array, passed through the UpdateBulkProblemStatusDetails resource, from the current status to the status set in UpdateBulkProblemStatusDetails.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateBulkProblemStatusRequest
     * @return UpdateBulkProblemStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateBulkProblemStatus.ts.html |here} to see how to use UpdateBulkProblemStatus API.
     */
    updateBulkProblemStatus(updateBulkProblemStatusRequest: requests.UpdateBulkProblemStatusRequest): Promise<responses.UpdateBulkProblemStatusResponse>;
    /**
     * Updates configuration details for a Cloud Guard tenancy, identified by root compartment OCID.
     * The reporting region cannot be updated once created.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateConfigurationRequest
     * @return UpdateConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateConfiguration.ts.html |here} to see how to use UpdateConfiguration API.
     */
    updateConfiguration(updateConfigurationRequest: requests.UpdateConfigurationRequest): Promise<responses.UpdateConfigurationResponse>;
    /**
     * Updates a data mask rule (DataMaskRule resource) identified by dataMaskRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDataMaskRuleRequest
     * @return UpdateDataMaskRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateDataMaskRule.ts.html |here} to see how to use UpdateDataMaskRule API.
     */
    updateDataMaskRule(updateDataMaskRuleRequest: requests.UpdateDataMaskRuleRequest): Promise<responses.UpdateDataMaskRuleResponse>;
    /**
     * Updates a data source (DataSource resource) identified by dataSourceId,
     * using values passed in an UpdateDataSourceDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDataSourceRequest
     * @return UpdateDataSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateDataSource.ts.html |here} to see how to use UpdateDataSource API.
     */
    updateDataSource(updateDataSourceRequest: requests.UpdateDataSourceRequest): Promise<responses.UpdateDataSourceResponse>;
    /**
     * Updates a detector recipe (DetectorRecipe resource) identified by detectorRecipeId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDetectorRecipeRequest
     * @return UpdateDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateDetectorRecipe.ts.html |here} to see how to use UpdateDetectorRecipe API.
     */
    updateDetectorRecipe(updateDetectorRecipeRequest: requests.UpdateDetectorRecipeRequest): Promise<responses.UpdateDetectorRecipeResponse>;
    /**
     * Updates a detector rule (DetectorRule resource) identified by detectorRuleId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateDetectorRecipeDetectorRuleRequest
     * @return UpdateDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateDetectorRecipeDetectorRule.ts.html |here} to see how to use UpdateDetectorRecipeDetectorRule API.
     */
    updateDetectorRecipeDetectorRule(updateDetectorRecipeDetectorRuleRequest: requests.UpdateDetectorRecipeDetectorRuleRequest): Promise<responses.UpdateDetectorRecipeDetectorRuleResponse>;
    /**
     * Updates a ManagedList resource, identified by managedList.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateManagedListRequest
     * @return UpdateManagedListResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateManagedList.ts.html |here} to see how to use UpdateManagedList API.
     */
    updateManagedList(updateManagedListRequest: requests.UpdateManagedListRequest): Promise<responses.UpdateManagedListResponse>;
    /**
     * Changes the current status of the problem, identified by problemId, to the status specified in the UpdateProblemStatusDetails resource that you pass.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateProblemStatusRequest
     * @return UpdateProblemStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateProblemStatus.ts.html |here} to see how to use UpdateProblemStatus API.
     */
    updateProblemStatus(updateProblemStatusRequest: requests.UpdateProblemStatusRequest): Promise<responses.UpdateProblemStatusResponse>;
    /**
     * Updates a responder recipe (ResponderRecipe resource) identified by
     * responderRecipeId, passed in an UpdateResponderRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateResponderRecipeRequest
     * @return UpdateResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateResponderRecipe.ts.html |here} to see how to use UpdateResponderRecipe API.
     */
    updateResponderRecipe(updateResponderRecipeRequest: requests.UpdateResponderRecipeRequest): Promise<responses.UpdateResponderRecipeResponse>;
    /**
     * Updates a responder rule (ResponderRule resource) identified by responderRuleId,
     * passed in a UpdateResponderRecipeResponderRuleDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateResponderRecipeResponderRuleRequest
     * @return UpdateResponderRecipeResponderRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateResponderRecipeResponderRule.ts.html |here} to see how to use UpdateResponderRecipeResponderRule API.
     */
    updateResponderRecipeResponderRule(updateResponderRecipeResponderRuleRequest: requests.UpdateResponderRecipeResponderRuleRequest): Promise<responses.UpdateResponderRecipeResponderRuleResponse>;
    /**
     * Updates a saved query identified by savedQueryId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateSavedQueryRequest
     * @return UpdateSavedQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateSavedQuery.ts.html |here} to see how to use UpdateSavedQuery API.
     */
    updateSavedQuery(updateSavedQueryRequest: requests.UpdateSavedQueryRequest): Promise<responses.UpdateSavedQueryResponse>;
    /**
     * Updates a security zone recipe (SecurityRecipe resource), identified by securityRecipeId,
     * using parameters passed in an UpdateSecurityRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateSecurityRecipeRequest
     * @return UpdateSecurityRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateSecurityRecipe.ts.html |here} to see how to use UpdateSecurityRecipe API.
     */
    updateSecurityRecipe(updateSecurityRecipeRequest: requests.UpdateSecurityRecipeRequest): Promise<responses.UpdateSecurityRecipeResponse>;
    /**
     * Updates a security zone (SecurityZone resource) identified by securityZoneId.
     * Pass parameters through an UpdateSecurityZoneDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateSecurityZoneRequest
     * @return UpdateSecurityZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateSecurityZone.ts.html |here} to see how to use UpdateSecurityZone API.
     */
    updateSecurityZone(updateSecurityZoneRequest: requests.UpdateSecurityZoneRequest): Promise<responses.UpdateSecurityZoneResponse>;
    /**
     * Updates a target (Target resource) identified by targetId, using parameters
     * passed in an UpdateTargetDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTargetRequest
     * @return UpdateTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateTarget.ts.html |here} to see how to use UpdateTarget API.
     */
    updateTarget(updateTargetRequest: requests.UpdateTargetRequest): Promise<responses.UpdateTargetResponse>;
    /**
     * Updates a target detector recipe (TargtetDetectorRecipe resource) identified by
     * targetDetectorRecipeId, using parameters passed in an UpdateTargetDetectorRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTargetDetectorRecipeRequest
     * @return UpdateTargetDetectorRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateTargetDetectorRecipe.ts.html |here} to see how to use UpdateTargetDetectorRecipe API.
     */
    updateTargetDetectorRecipe(updateTargetDetectorRecipeRequest: requests.UpdateTargetDetectorRecipeRequest): Promise<responses.UpdateTargetDetectorRecipeResponse>;
    /**
     * Updates the DetectorRule resource identified by targetDetectorRecipeId
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTargetDetectorRecipeDetectorRuleRequest
     * @return UpdateTargetDetectorRecipeDetectorRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateTargetDetectorRecipeDetectorRule.ts.html |here} to see how to use UpdateTargetDetectorRecipeDetectorRule API.
     */
    updateTargetDetectorRecipeDetectorRule(updateTargetDetectorRecipeDetectorRuleRequest: requests.UpdateTargetDetectorRecipeDetectorRuleRequest): Promise<responses.UpdateTargetDetectorRecipeDetectorRuleResponse>;
    /**
     * Updates the target responder recipe (TargetResponderRecipe resource)
     * identified by targetResponderRecipeId, attached to a target identified
     * by targetId. Pass parameters for the update through an
     * UpdateTargetResponderRecipeDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTargetResponderRecipeRequest
     * @return UpdateTargetResponderRecipeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateTargetResponderRecipe.ts.html |here} to see how to use UpdateTargetResponderRecipe API.
     */
    updateTargetResponderRecipe(updateTargetResponderRecipeRequest: requests.UpdateTargetResponderRecipeRequest): Promise<responses.UpdateTargetResponderRecipeResponse>;
    /**
     * Updates a responder rule (ResponderRule resource) identified by
     * responderRuleId, for a target responder recipe (TargetResponderRecipe resource)
     * identified by targetResponderRecipeId, for a target (Target resource)
     * identified by targetId. Parameters for the update are passed through an
     * UpdateTargetResponderRecipeResponderRuleDetails resource.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateTargetResponderRecipeResponderRuleRequest
     * @return UpdateTargetResponderRecipeResponderRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateTargetResponderRecipeResponderRule.ts.html |here} to see how to use UpdateTargetResponderRecipeResponderRule API.
     */
    updateTargetResponderRecipeResponderRule(updateTargetResponderRecipeResponderRuleRequest: requests.UpdateTargetResponderRecipeResponderRuleRequest): Promise<responses.UpdateTargetResponderRecipeResponderRuleResponse>;
    /**
     * Updates and renews the certificate for an on-premise WLP agent identified by wlpAgentId.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateWlpAgentRequest
     * @return UpdateWlpAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/cloudguard/UpdateWlpAgent.ts.html |here} to see how to use UpdateWlpAgent API.
     */
    updateWlpAgent(updateWlpAgentRequest: requests.UpdateWlpAgentRequest): Promise<responses.UpdateWlpAgentResponse>;
}
export {};
