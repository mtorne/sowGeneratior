"use strict";
/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](https://docs.oracle.com/iaas/cloud-guard/home.htm) and [Security Zones](https://docs.oracle.com/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudGuardWaiter = void 0;
const models = __importStar(require("./model"));
const oci_common_1 = require("oci-common");
class CloudGuardWaiter {
    constructor(client, config) {
        this.client = client;
        this.config = config;
    }
    /**
     * Waits forAdhocQuery till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAdhocQueryResponse | null (null in case of 404 response)
     */
    forAdhocQuery(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAdhocQuery(request), response => targetStates.includes(response.adhocQuery.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDataMaskRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDataMaskRuleResponse | null (null in case of 404 response)
     */
    forDataMaskRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDataMaskRule(request), response => targetStates.includes(response.dataMaskRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDataSource till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDataSourceResponse | null (null in case of 404 response)
     */
    forDataSource(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDataSource(request), response => targetStates.includes(response.dataSource.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDetector till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDetectorResponse | null (null in case of 404 response)
     */
    forDetector(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDetector(request), response => targetStates.includes(response.detector.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDetectorRecipe till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDetectorRecipeResponse | null (null in case of 404 response)
     */
    forDetectorRecipe(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDetectorRecipe(request), response => targetStates.includes(response.detectorRecipe.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDetectorRecipeDetectorRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDetectorRecipeDetectorRuleResponse | null (null in case of 404 response)
     */
    forDetectorRecipeDetectorRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDetectorRecipeDetectorRule(request), response => targetStates.includes(response.detectorRecipeDetectorRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDetectorRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDetectorRuleResponse | null (null in case of 404 response)
     */
    forDetectorRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDetectorRule(request), response => targetStates.includes(response.detectorRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forManagedList till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetManagedListResponse | null (null in case of 404 response)
     */
    forManagedList(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getManagedList(request), response => targetStates.includes(response.managedList.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forProblem till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetProblemResponse
     */
    forProblem(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getProblem(request), response => targetStates.includes(response.problem.lifecycleState));
        });
    }
    /**
     * Waits forResponderRecipe till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetResponderRecipeResponse | null (null in case of 404 response)
     */
    forResponderRecipe(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getResponderRecipe(request), response => targetStates.includes(response.responderRecipe.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forResponderRecipeResponderRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetResponderRecipeResponderRuleResponse | null (null in case of 404 response)
     */
    forResponderRecipeResponderRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getResponderRecipeResponderRule(request), response => targetStates.includes(response.responderRecipeResponderRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forResponderRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetResponderRuleResponse | null (null in case of 404 response)
     */
    forResponderRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getResponderRule(request), response => targetStates.includes(response.responderRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forSavedQuery till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSavedQueryResponse | null (null in case of 404 response)
     */
    forSavedQuery(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSavedQuery(request), response => targetStates.includes(response.savedQuery.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forSecurityPolicy till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSecurityPolicyResponse | null (null in case of 404 response)
     */
    forSecurityPolicy(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSecurityPolicy(request), response => targetStates.includes(response.securityPolicy.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forSecurityRecipe till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSecurityRecipeResponse | null (null in case of 404 response)
     */
    forSecurityRecipe(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSecurityRecipe(request), response => targetStates.includes(response.securityRecipe.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forSecurityZone till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSecurityZoneResponse | null (null in case of 404 response)
     */
    forSecurityZone(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSecurityZone(request), response => targetStates.includes(response.securityZone.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forTarget till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetResponse | null (null in case of 404 response)
     */
    forTarget(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTarget(request), response => targetStates.includes(response.target.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forTargetDetectorRecipe till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetDetectorRecipeResponse | null (null in case of 404 response)
     */
    forTargetDetectorRecipe(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTargetDetectorRecipe(request), response => targetStates.includes(response.targetDetectorRecipe.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forTargetDetectorRecipeDetectorRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetDetectorRecipeDetectorRuleResponse | null (null in case of 404 response)
     */
    forTargetDetectorRecipeDetectorRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTargetDetectorRecipeDetectorRule(request), response => targetStates.includes(response.targetDetectorRecipeDetectorRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forTargetResponderRecipeResponderRule till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetResponderRecipeResponderRuleResponse | null (null in case of 404 response)
     */
    forTargetResponderRecipeResponderRule(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTargetResponderRecipeResponderRule(request), response => targetStates.includes(response.targetResponderRecipeResponderRule.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forWorkRequest
     *
     * @param request the request to send
     * @return response returns GetWorkRequestResponse
     */
    forWorkRequest(request) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getWorkRequest(request), response => (response.workRequest.timeFinished ? true : false));
        });
    }
}
exports.CloudGuardWaiter = CloudGuardWaiter;
//# sourceMappingURL=cloudguard-waiter.js.map