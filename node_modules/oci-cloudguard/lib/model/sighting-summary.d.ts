/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](https://docs.oracle.com/iaas/cloud-guard/home.htm) and [Security Zones](https://docs.oracle.com/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Sighting summary definition.
 */
export interface SightingSummary {
    /**
     * Unique identifier for sighting
     */
    "id": string;
    /**
     * Compartment OCID where the impacted resource is created
     */
    "compartmentId": string;
    /**
     * Problem ID associated with sighting
     */
    "problemId"?: string;
    /**
     * Unique identifier for principal actor
     */
    "actorPrincipalId"?: string;
    /**
     * Name of principal actor
     */
    "actorPrincipalName"?: string;
    /**
     * Type of principal actor
     */
    "actorPrincipalType"?: string;
    /**
     * Unique identifier of the detector rule that was triggered
     */
    "detectorRuleId": string;
    /**
     * Classification status of the sighting
     */
    "classificationStatus": model.ClassificationStatus;
    /**
     * Type of sighting
     */
    "sightingType": string;
    /**
     * Display name of the sighting type
     */
    "sightingTypeDisplayName": string;
    /**
     * Name of the MITRE ATT@CK framework tactic
     */
    "tacticName": string;
    /**
     * Name of the MITRE ATT@CK framework technique
     */
    "techniqueName": string;
    /**
     * Score for the sighting Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sightingScore": number;
    /**
     * Severity of the sighting
     */
    "severity": model.Severity;
    /**
     * Confidence level that the sighting is not a false positive
     */
    "confidence": model.Confidence;
    /**
     * Time the activities were first detected. Format defined by RFC3339.
     */
    "timeFirstDetected": Date;
    /**
     * Time the activities were last detected. Format defined by RFC3339.
     */
    "timeLastDetected": Date;
    /**
     * Time the activities were first performed. Format defined by RFC3339.
     */
    "timeFirstOccurred"?: Date;
    /**
     * Time the activities were last performed. Format defined by RFC3339.
     */
    "timeLastOccurred"?: Date;
    /**
     * List of regions involved in the sighting
     */
    "regions": Array<string>;
}
export declare namespace SightingSummary {
    function getJsonObj(obj: SightingSummary): object;
    function getDeserializedJsonObj(obj: SightingSummary): object;
}
