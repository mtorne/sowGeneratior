/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](https://docs.oracle.com/iaas/cloud-guard/home.htm) and [Security Zones](https://docs.oracle.com/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary information for a detector recipe.
 */
export interface DetectorRecipeSummary {
    /**
     * OCID for detector recipe
     */
    "id": string;
    /**
     * Display name for detector recipe
     */
    "displayName": string;
    /**
     * Detector recipe description
     */
    "description"?: string;
    /**
     * Compartment OCID of detector recipe
     */
    "compartmentId": string;
    /**
     * Recipe OCID of the source recipe to be cloned
     */
    "sourceDetectorRecipeId"?: string;
    /**
     * Owner of the detector recipe
     */
    "owner": model.OwnerType;
    /**
     * Recipe type ( STANDARD, ENTERPRISE )
     */
    "detectorRecipeType"?: model.DetectorRecipeEnum;
    /**
     * Type of detector
     */
    "detector": model.DetectorEnum;
    /**
     * List of detector rules for the detector type
     */
    "detectorRules"?: Array<model.DetectorRecipeDetectorRule>;
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    "timeCreated"?: Date;
    /**
     * The date and time the detector recipe was last updated. Format defined by RFC3339.
     */
    "timeUpdated"?: Date;
    /**
     * The current lifecycle state of the resource
     */
    "lifecycleState"?: model.LifecycleState;
    /**
     * The number of days for which source data is retained Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sourceDataRetention"?: number;
    /**
      * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
  * Example: {@code {\"bar-key\": \"value\"}}
  * <p>
  Avoid entering confidential information.
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * System tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * System tags can be viewed by users, but can only be created by the system.
  * <p>
  Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
  *
      */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace DetectorRecipeSummary {
    function getJsonObj(obj: DetectorRecipeSummary): object;
    function getDeserializedJsonObj(obj: DetectorRecipeSummary): object;
}
