/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](https://docs.oracle.com/iaas/cloud-guard/home.htm) and [Security Zones](https://docs.oracle.com/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Detailed information for a data source (DataSource resource).
 */
export interface DataSource {
    /**
     * OCID for the data source
     */
    "id": string;
    /**
     * Display name of the data source
     */
    "displayName": string;
    /**
     * Possible type of dataSourceFeed Provider(LoggingQuery)
     */
    "dataSourceFeedProvider": model.DataSourceFeedProvider;
    /**
     * Compartment OCID of data source
     */
    "compartmentId": string;
    "dataSourceDetails"?: model.ScheduledQueryDataSourceObjDetails | model.LoggingQueryDataSourceDetails;
    /**
     * The date and time the Data source was created. Format defined by RFC3339.
     */
    "timeCreated"?: Date;
    /**
     * The date and time the data source was updated. Format defined by RFC3339.
     */
    "timeUpdated"?: Date;
    /**
     * Enablement status of the data source
     */
    "status"?: model.DataSourceStatus;
    /**
     * Information about the detector recipe and rule attached
     */
    "dataSourceDetectorMappingInfo"?: Array<model.DataSourceMappingInfo>;
    /**
     * Information about the region and status of query replication
     */
    "regionStatusDetail"?: Array<model.RegionStatusDetail>;
    /**
     * The current lifecycle state of the resource.
     */
    "lifecycleState"?: model.LifecycleState;
    /**
     * Locks associated with this resource.
     */
    "locks"?: Array<model.ResourceLock>;
    /**
      * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
  * Example: {@code {\"bar-key\": \"value\"}}
  * <p>
  Avoid entering confidential information.
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
      * System tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * System tags can be viewed by users, but can only be created by the system.
  * <p>
  Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
  *
      */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace DataSource {
    function getJsonObj(obj: DataSource): object;
    function getDeserializedJsonObj(obj: DataSource): object;
}
