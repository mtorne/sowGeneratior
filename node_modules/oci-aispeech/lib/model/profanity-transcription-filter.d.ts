/**
 * Speech API
 * The OCI Speech Service harnesses the power of spoken language by allowing developers to easily convert file-based data containing human speech into highly accurate text transcriptions.
 * OpenAPI spec version: 20220101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Profanity transcription filter to recognize profane words.
 */
export interface ProfanityTranscriptionFilter extends model.TranscriptionFilter {
    /**
     * - {@code MASK}: Will mask detected profanity in transcription.
     * - {@code REMOVE}: Will replace profane word with * in transcription.
     * - {@code TAG}: Will tag profane word as profanity but will show actual word.
     *
     */
    "mode": ProfanityTranscriptionFilter.Mode;
    "type": string;
}
export declare namespace ProfanityTranscriptionFilter {
    enum Mode {
        Mask = "MASK",
        Remove = "REMOVE",
        Tag = "TAG",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ProfanityTranscriptionFilter, isParentJsonObj?: boolean): object;
    const type = "PROFANITY";
    function getDeserializedJsonObj(obj: ProfanityTranscriptionFilter, isParentJsonObj?: boolean): object;
}
