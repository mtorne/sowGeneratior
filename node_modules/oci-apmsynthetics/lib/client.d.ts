/**
 * APM Availability Monitoring API
 * Use the APM Availability Monitoring API to query Scripts, Monitors, Dedicated Vantage Points and On-Premise Vantage Points resources. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).
 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
declare const Breaker: any;
export declare enum ApmSyntheticApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ApmSyntheticClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Gets aggregated network data for given executions.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param AggregateNetworkDataRequest
     * @return AggregateNetworkDataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/AggregateNetworkData.ts.html |here} to see how to use AggregateNetworkData API.
     */
    aggregateNetworkData(aggregateNetworkDataRequest: requests.AggregateNetworkDataRequest): Promise<responses.AggregateNetworkDataResponse>;
    /**
     * Registers a new dedicated vantage point.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateDedicatedVantagePointRequest
     * @return CreateDedicatedVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/CreateDedicatedVantagePoint.ts.html |here} to see how to use CreateDedicatedVantagePoint API.
     */
    createDedicatedVantagePoint(createDedicatedVantagePointRequest: requests.CreateDedicatedVantagePointRequest): Promise<responses.CreateDedicatedVantagePointResponse>;
    /**
     * Creates a new monitor.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateMonitorRequest
     * @return CreateMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/CreateMonitor.ts.html |here} to see how to use CreateMonitor API.
     */
    createMonitor(createMonitorRequest: requests.CreateMonitorRequest): Promise<responses.CreateMonitorResponse>;
    /**
     * Registers a new On-premise vantage point.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateOnPremiseVantagePointRequest
     * @return CreateOnPremiseVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/CreateOnPremiseVantagePoint.ts.html |here} to see how to use CreateOnPremiseVantagePoint API.
     */
    createOnPremiseVantagePoint(createOnPremiseVantagePointRequest: requests.CreateOnPremiseVantagePointRequest): Promise<responses.CreateOnPremiseVantagePointResponse>;
    /**
     * Creates a new script.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateScriptRequest
     * @return CreateScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/CreateScript.ts.html |here} to see how to use CreateScript API.
     */
    createScript(createScriptRequest: requests.CreateScriptRequest): Promise<responses.CreateScriptResponse>;
    /**
     * Registers a new worker.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateWorkerRequest
     * @return CreateWorkerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/CreateWorker.ts.html |here} to see how to use CreateWorker API.
     */
    createWorker(createWorkerRequest: requests.CreateWorkerRequest): Promise<responses.CreateWorkerResponse>;
    /**
     * Deregisters the specified dedicated vantage point.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteDedicatedVantagePointRequest
     * @return DeleteDedicatedVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/DeleteDedicatedVantagePoint.ts.html |here} to see how to use DeleteDedicatedVantagePoint API.
     */
    deleteDedicatedVantagePoint(deleteDedicatedVantagePointRequest: requests.DeleteDedicatedVantagePointRequest): Promise<responses.DeleteDedicatedVantagePointResponse>;
    /**
     * Deletes the specified monitor.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteMonitorRequest
     * @return DeleteMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/DeleteMonitor.ts.html |here} to see how to use DeleteMonitor API.
     */
    deleteMonitor(deleteMonitorRequest: requests.DeleteMonitorRequest): Promise<responses.DeleteMonitorResponse>;
    /**
     * Deregisters the specified On-premise vantage point.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteOnPremiseVantagePointRequest
     * @return DeleteOnPremiseVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/DeleteOnPremiseVantagePoint.ts.html |here} to see how to use DeleteOnPremiseVantagePoint API.
     */
    deleteOnPremiseVantagePoint(deleteOnPremiseVantagePointRequest: requests.DeleteOnPremiseVantagePointRequest): Promise<responses.DeleteOnPremiseVantagePointResponse>;
    /**
     * Deletes the specified script.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteScriptRequest
     * @return DeleteScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/DeleteScript.ts.html |here} to see how to use DeleteScript API.
     */
    deleteScript(deleteScriptRequest: requests.DeleteScriptRequest): Promise<responses.DeleteScriptResponse>;
    /**
     * Deregisters the specified worker.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteWorkerRequest
     * @return DeleteWorkerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/DeleteWorker.ts.html |here} to see how to use DeleteWorker API.
     */
    deleteWorker(deleteWorkerRequest: requests.DeleteWorkerRequest): Promise<responses.DeleteWorkerResponse>;
    /**
     * Gets the details of the dedicated vantage point identified by the OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetDedicatedVantagePointRequest
     * @return GetDedicatedVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetDedicatedVantagePoint.ts.html |here} to see how to use GetDedicatedVantagePoint API.
     */
    getDedicatedVantagePoint(getDedicatedVantagePointRequest: requests.GetDedicatedVantagePointRequest): Promise<responses.GetDedicatedVantagePointResponse>;
    /**
     * Gets the configuration of the monitor identified by the OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitorRequest
     * @return GetMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetMonitor.ts.html |here} to see how to use GetMonitor API.
     */
    getMonitor(getMonitorRequest: requests.GetMonitorRequest): Promise<responses.GetMonitorResponse>;
    /**
     * Gets the results for a specific execution of a monitor identified by OCID. The results are in a HAR file, Screenshot, Console Log, Network details, Diagnostics or Script Content.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetMonitorResultRequest
     * @return GetMonitorResultResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetMonitorResult.ts.html |here} to see how to use GetMonitorResult API.
     */
    getMonitorResult(getMonitorResultRequest: requests.GetMonitorResultRequest): Promise<responses.GetMonitorResultResponse>;
    /**
     * Gets the details of the On-premise vantage point identified by the OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetOnPremiseVantagePointRequest
     * @return GetOnPremiseVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetOnPremiseVantagePoint.ts.html |here} to see how to use GetOnPremiseVantagePoint API.
     */
    getOnPremiseVantagePoint(getOnPremiseVantagePointRequest: requests.GetOnPremiseVantagePointRequest): Promise<responses.GetOnPremiseVantagePointResponse>;
    /**
     * Gets the configuration of the script identified by the OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetScriptRequest
     * @return GetScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetScript.ts.html |here} to see how to use GetScript API.
     */
    getScript(getScriptRequest: requests.GetScriptRequest): Promise<responses.GetScriptResponse>;
    /**
     * Gets the details of the worker identified by the OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkerRequest
     * @return GetWorkerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/GetWorker.ts.html |here} to see how to use GetWorker API.
     */
    getWorker(getWorkerRequest: requests.GetWorkerRequest): Promise<responses.GetWorkerResponse>;
    /**
     * Returns a list of dedicated vantage points.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListDedicatedVantagePointsRequest
     * @return ListDedicatedVantagePointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListDedicatedVantagePoints.ts.html |here} to see how to use ListDedicatedVantagePoints API.
     */
    listDedicatedVantagePoints(listDedicatedVantagePointsRequest: requests.ListDedicatedVantagePointsRequest): Promise<responses.ListDedicatedVantagePointsResponse>;
    /**
     * Returns a list of monitors.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListMonitorsRequest
     * @return ListMonitorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListMonitors.ts.html |here} to see how to use ListMonitors API.
     */
    listMonitors(listMonitorsRequest: requests.ListMonitorsRequest): Promise<responses.ListMonitorsResponse>;
    /**
     * Returns a list of On-premise vantage points.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListOnPremiseVantagePointsRequest
     * @return ListOnPremiseVantagePointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListOnPremiseVantagePoints.ts.html |here} to see how to use ListOnPremiseVantagePoints API.
     */
    listOnPremiseVantagePoints(listOnPremiseVantagePointsRequest: requests.ListOnPremiseVantagePointsRequest): Promise<responses.ListOnPremiseVantagePointsResponse>;
    /**
     * Returns a list of public vantage points.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListPublicVantagePointsRequest
     * @return ListPublicVantagePointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListPublicVantagePoints.ts.html |here} to see how to use ListPublicVantagePoints API.
     */
    listPublicVantagePoints(listPublicVantagePointsRequest: requests.ListPublicVantagePointsRequest): Promise<responses.ListPublicVantagePointsResponse>;
    /**
     * Returns a list of scripts.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListScriptsRequest
     * @return ListScriptsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListScripts.ts.html |here} to see how to use ListScripts API.
     */
    listScripts(listScriptsRequest: requests.ListScriptsRequest): Promise<responses.ListScriptsResponse>;
    /**
     * Returns a list of workers.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkersRequest
     * @return ListWorkersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/ListWorkers.ts.html |here} to see how to use ListWorkers API.
     */
    listWorkers(listWorkersRequest: requests.ListWorkersRequest): Promise<responses.ListWorkersResponse>;
    /**
     * Updates the dedicated vantage point.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateDedicatedVantagePointRequest
     * @return UpdateDedicatedVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/UpdateDedicatedVantagePoint.ts.html |here} to see how to use UpdateDedicatedVantagePoint API.
     */
    updateDedicatedVantagePoint(updateDedicatedVantagePointRequest: requests.UpdateDedicatedVantagePointRequest): Promise<responses.UpdateDedicatedVantagePointResponse>;
    /**
     * Updates the monitor.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateMonitorRequest
     * @return UpdateMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/UpdateMonitor.ts.html |here} to see how to use UpdateMonitor API.
     */
    updateMonitor(updateMonitorRequest: requests.UpdateMonitorRequest): Promise<responses.UpdateMonitorResponse>;
    /**
     * Updates the On-premise vantage point.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateOnPremiseVantagePointRequest
     * @return UpdateOnPremiseVantagePointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/UpdateOnPremiseVantagePoint.ts.html |here} to see how to use UpdateOnPremiseVantagePoint API.
     */
    updateOnPremiseVantagePoint(updateOnPremiseVantagePointRequest: requests.UpdateOnPremiseVantagePointRequest): Promise<responses.UpdateOnPremiseVantagePointResponse>;
    /**
     * Updates the script.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateScriptRequest
     * @return UpdateScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/UpdateScript.ts.html |here} to see how to use UpdateScript API.
     */
    updateScript(updateScriptRequest: requests.UpdateScriptRequest): Promise<responses.UpdateScriptResponse>;
    /**
     * Updates the worker.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateWorkerRequest
     * @return UpdateWorkerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/apmsynthetics/UpdateWorker.ts.html |here} to see how to use UpdateWorker API.
     */
    updateWorker(updateWorkerRequest: requests.UpdateWorkerRequest): Promise<responses.UpdateWorkerResponse>;
}
export {};
