/**
 * File Storage API
 * Use the File Storage service API to manage file systems, mount targets, and snapshots.
For more information, see [Overview of File Storage](https://docs.oracle.com/iaas/Content/File/Concepts/filestorageoverview.htm).

 * OpenAPI spec version: 20171215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A rule that can restrict the logical space that a user or group can consume in a file system.
 *
 */
export interface QuotaRule {
    /**
     * The identifier of the quota rule. It is the base64 encoded string of the tuple <principalId, principalType, isHardQuota>.
     */
    "id": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
     */
    "fileSystemId": string;
    /**
     * The type of the owner of this quota rule and usage.
     *
     */
    "principalType"?: QuotaRule.PrincipalType;
    /**
     * An identifier for the user or the group associated with quota rule and usage. UNIX-like operating systems use this integer value to
     * identify a user or group to manage access control.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "principalId"?: number;
    /**
     * Whether the quota rule will be enforced.
     * If {@code isHardQuota} is true, the quota rule is enforced so that the write is blocked if usage
     * exceeds the hard quota limit.
     * If {@code isHardQuota} is false, writes succeed even if usage exceeds the soft quota limit, but the quota rule is violated.
     *
     */
    "isHardQuota": boolean;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.
     * Avoid entering confidential information.
     * Example: {@code UserXYZ's quota}
     *
     */
    "displayName": string;
    /**
     * The value of the quota rule in gigabytes.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "quotaLimitInGigabytes": number;
    /**
      * The date and time the quota rule was created, expressed in
  * [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeCreated": Date;
    /**
      * The date and time the quota rule was last updated, expressed in
  * [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.
  * <p>
  Example: {@code 2016-08-25T21:10:29.600Z}
  *
      */
    "timeUpdated": Date;
}
export declare namespace QuotaRule {
    enum PrincipalType {
        FileSystemLevel = "FILE_SYSTEM_LEVEL",
        DefaultGroup = "DEFAULT_GROUP",
        DefaultUser = "DEFAULT_USER",
        IndividualGroup = "INDIVIDUAL_GROUP",
        IndividualUser = "INDIVIDUAL_USER",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: QuotaRule): object;
    function getDeserializedJsonObj(obj: QuotaRule): object;
}
