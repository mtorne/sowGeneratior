"use strict";
/**
 * File Storage API
 * Use the File Storage service API to manage file systems, mount targets, and snapshots.
For more information, see [Overview of File Storage](https://docs.oracle.com/iaas/Content/File/Concepts/filestorageoverview.htm).

 * OpenAPI spec version: 20171215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotSchedule = void 0;
var SnapshotSchedule;
(function (SnapshotSchedule) {
    let Period;
    (function (Period) {
        Period["Hourly"] = "HOURLY";
        Period["Daily"] = "DAILY";
        Period["Weekly"] = "WEEKLY";
        Period["Monthly"] = "MONTHLY";
        Period["Yearly"] = "YEARLY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Period["UnknownValue"] = "UNKNOWN_VALUE";
    })(Period = SnapshotSchedule.Period || (SnapshotSchedule.Period = {}));
    let TimeZone;
    (function (TimeZone) {
        TimeZone["Utc"] = "UTC";
        TimeZone["RegionalDataCenterTime"] = "REGIONAL_DATA_CENTER_TIME";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TimeZone["UnknownValue"] = "UNKNOWN_VALUE";
    })(TimeZone = SnapshotSchedule.TimeZone || (SnapshotSchedule.TimeZone = {}));
    let DayOfWeek;
    (function (DayOfWeek) {
        DayOfWeek["Monday"] = "MONDAY";
        DayOfWeek["Tuesday"] = "TUESDAY";
        DayOfWeek["Wednesday"] = "WEDNESDAY";
        DayOfWeek["Thursday"] = "THURSDAY";
        DayOfWeek["Friday"] = "FRIDAY";
        DayOfWeek["Saturday"] = "SATURDAY";
        DayOfWeek["Sunday"] = "SUNDAY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DayOfWeek["UnknownValue"] = "UNKNOWN_VALUE";
    })(DayOfWeek = SnapshotSchedule.DayOfWeek || (SnapshotSchedule.DayOfWeek = {}));
    let Month;
    (function (Month) {
        Month["January"] = "JANUARY";
        Month["February"] = "FEBRUARY";
        Month["March"] = "MARCH";
        Month["April"] = "APRIL";
        Month["May"] = "MAY";
        Month["June"] = "JUNE";
        Month["July"] = "JULY";
        Month["August"] = "AUGUST";
        Month["September"] = "SEPTEMBER";
        Month["October"] = "OCTOBER";
        Month["November"] = "NOVEMBER";
        Month["December"] = "DECEMBER";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Month["UnknownValue"] = "UNKNOWN_VALUE";
    })(Month = SnapshotSchedule.Month || (SnapshotSchedule.Month = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    SnapshotSchedule.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    SnapshotSchedule.getDeserializedJsonObj = getDeserializedJsonObj;
})(SnapshotSchedule = exports.SnapshotSchedule || (exports.SnapshotSchedule = {}));
//# sourceMappingURL=snapshot-schedule.js.map