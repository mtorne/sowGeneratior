"use strict";
/**
 * Access Governance APIs
 * Use the Oracle Access Governance API to create, view, and manage GovernanceInstances.
 * OpenAPI spec version: 20220518
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateSenderConfig = exports.UpdateGovernanceInstanceDetails = exports.UpdateGovernanceInstanceConfigurationDetails = exports.SortOrder = exports.SenderConfig = exports.LicenseType = exports.InstanceLifecycleState = exports.GovernanceInstanceSummary = exports.GovernanceInstanceConfiguration = exports.GovernanceInstanceCollection = exports.GovernanceInstance = exports.CreateGovernanceInstanceDetails = exports.ChangeGovernanceInstanceCompartmentDetails = void 0;
const ChangeGovernanceInstanceCompartmentDetails = __importStar(require("./change-governance-instance-compartment-details"));
exports.ChangeGovernanceInstanceCompartmentDetails = ChangeGovernanceInstanceCompartmentDetails.ChangeGovernanceInstanceCompartmentDetails;
const CreateGovernanceInstanceDetails = __importStar(require("./create-governance-instance-details"));
exports.CreateGovernanceInstanceDetails = CreateGovernanceInstanceDetails.CreateGovernanceInstanceDetails;
const GovernanceInstance = __importStar(require("./governance-instance"));
exports.GovernanceInstance = GovernanceInstance.GovernanceInstance;
const GovernanceInstanceCollection = __importStar(require("./governance-instance-collection"));
exports.GovernanceInstanceCollection = GovernanceInstanceCollection.GovernanceInstanceCollection;
const GovernanceInstanceConfiguration = __importStar(require("./governance-instance-configuration"));
exports.GovernanceInstanceConfiguration = GovernanceInstanceConfiguration.GovernanceInstanceConfiguration;
const GovernanceInstanceSummary = __importStar(require("./governance-instance-summary"));
exports.GovernanceInstanceSummary = GovernanceInstanceSummary.GovernanceInstanceSummary;
const InstanceLifecycleState = __importStar(require("./instance-lifecycle-state"));
exports.InstanceLifecycleState = InstanceLifecycleState.InstanceLifecycleState;
const LicenseType = __importStar(require("./license-type"));
exports.LicenseType = LicenseType.LicenseType;
const SenderConfig = __importStar(require("./sender-config"));
exports.SenderConfig = SenderConfig.SenderConfig;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const UpdateGovernanceInstanceConfigurationDetails = __importStar(require("./update-governance-instance-configuration-details"));
exports.UpdateGovernanceInstanceConfigurationDetails = UpdateGovernanceInstanceConfigurationDetails.UpdateGovernanceInstanceConfigurationDetails;
const UpdateGovernanceInstanceDetails = __importStar(require("./update-governance-instance-details"));
exports.UpdateGovernanceInstanceDetails = UpdateGovernanceInstanceDetails.UpdateGovernanceInstanceDetails;
const UpdateSenderConfig = __importStar(require("./update-sender-config"));
exports.UpdateSenderConfig = UpdateSenderConfig.UpdateSenderConfig;
//# sourceMappingURL=index.js.map