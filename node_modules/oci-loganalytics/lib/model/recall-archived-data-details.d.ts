/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * This is the input used to recall archived data
 *
 */
export interface RecallArchivedDataDetails {
    /**
     * This is the compartment OCID for permission checking
     */
    "compartmentId": string;
    /**
     * This is the end of the time interval
     */
    "timeDataEnded": Date;
    /**
     * This is the start of the time interval
     */
    "timeDataStarted": Date;
    /**
     * This is the type of the log data to be recalled
     */
    "dataType"?: model.StorageDataType;
    /**
     * This is a list of comma-separated log sets that recalled data belongs to.
     */
    "logSets"?: string;
    /**
     * This is the query that identifies the recalled data.
     */
    "query"?: string;
    /**
     * This is the purpose of the recall
     */
    "purpose"?: string;
    /**
     * This indicates if only new data has to be recalled in this recall request
     */
    "isRecallNewDataOnly"?: boolean;
    /**
     * This indicates if user checked system recommended time range
     */
    "isUseRecommendedDataSet"?: boolean;
    /**
     * This is the id for the recalled data collection to be used only for recall new data.
     * If specified, only this collection will be eligible for IsRecallNewDataOnly
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "collectionId"?: number;
}
export declare namespace RecallArchivedDataDetails {
    function getJsonObj(obj: RecallArchivedDataDetails): object;
    function getDeserializedJsonObj(obj: RecallArchivedDataDetails): object;
}
