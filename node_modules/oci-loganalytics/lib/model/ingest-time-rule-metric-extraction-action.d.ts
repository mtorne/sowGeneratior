/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of metric to post to OCI Monitoring if ingest time rule condition(s) are satisfied.
 *
 */
export interface IngestTimeRuleMetricExtractionAction extends model.IngestTimeRuleAction {
    /**
     * The compartment OCID (/iaas/Content/General/Concepts/identifiers.htm) of the extracted metric.
     *
     */
    "compartmentId": string;
    /**
     * The namespace of the extracted metric.
     * A valid value starts with an alphabetical character and includes only
     * alphanumeric characters and underscores (_).
     *
     */
    "namespace": string;
    /**
     * The metric name of the extracted metric.
     * A valid value starts with an alphabetical character and includes only
     * alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).
     *
     */
    "metricName": string;
    /**
     * The resourceGroup of the extracted metric.
     * A valid value starts with an alphabetical character and includes only
     * alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).
     *
     */
    "resourceGroup"?: string;
    /**
     * Additional dimensions to publish for the extracted metric.
     * A valid list contains the source field names whose values are to be published as dimensions.
     * The source name itself is specified using a special macro SOURCE_NAME
     *
     */
    "dimensions"?: Array<string>;
    "type": string;
}
export declare namespace IngestTimeRuleMetricExtractionAction {
    function getJsonObj(obj: IngestTimeRuleMetricExtractionAction, isParentJsonObj?: boolean): object;
    const type = "METRIC_EXTRACTION";
    function getDeserializedJsonObj(obj: IngestTimeRuleMetricExtractionAction, isParentJsonObj?: boolean): object;
}
