/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * This is the information about data recalled
 */
export interface RecalledInfo {
    /**
     * This is the status of the recall
     */
    "status": model.RecallStatus;
    /**
     * This is the purpose of the recall
     */
    "purpose": string;
    /**
     * This is the query associated with the recall
     */
    "queryString": string;
    /**
     * This is the list of logsets associated with the recall
     */
    "logSets": string;
    /**
     * This is the id for the recalled data collection Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "collectionId": number;
    /**
     * This is the recalled date start time
     */
    "timeRecalledDataStarted": Date;
    /**
     * This is the recalled data end time
     */
    "timeRecalledDataEnded": Date;
}
export declare namespace RecalledInfo {
    function getJsonObj(obj: RecalledInfo): object;
    function getDeserializedJsonObj(obj: RecalledInfo): object;
}
