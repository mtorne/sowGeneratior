/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A parser that depends on or uses the resource such as a field or another parser.
 */
export interface DependentParser {
    /**
     * The parser name.
     */
    "parserName"?: string;
    /**
     * The parser display name.
     */
    "parserDisplayName"?: string;
    /**
     * The parser unique identifier. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "parserId"?: number;
    /**
     * The system flag.  A value of false denotes a custom, or user
     * defined object.  A value of true denotes a built in object.
     *
     */
    "isSystem"?: boolean;
    /**
     * The parser type
     */
    "parserType"?: DependentParser.ParserType;
    /**
     * The list of dependencies of the parser.
     */
    "dependencies"?: Array<model.Dependency>;
}
export declare namespace DependentParser {
    enum ParserType {
        Xml = "XML",
        Json = "JSON",
        Regex = "REGEX",
        Odl = "ODL",
        Delimited = "DELIMITED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DependentParser): object;
    function getDeserializedJsonObj(obj: DependentParser): object;
}
