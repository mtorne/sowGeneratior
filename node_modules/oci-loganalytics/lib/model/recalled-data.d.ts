/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * This is the information about recalled data
 */
export interface RecalledData {
    /**
     * This is the end of the time range of the related data
     */
    "timeDataEnded": Date;
    /**
     * This is the start of the time range of the related data
     */
    "timeDataStarted": Date;
    /**
     * This is the time when the first recall operation was started for this RecalledData
     */
    "timeStarted": Date;
    /**
     * This is the status of the recall
     */
    "status": RecalledData.Status;
    /**
     * This is the number of recall operations for this recall.  Note one RecalledData can be merged from the results
     * of several recall operations if the time duration of the results of the recall operations overlap.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "recallCount": number;
    /**
     * This is the size in bytes Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "storageUsageInBytes": number;
    /**
     * This is the size of the archival data not recalled yet within the specified time range Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "notRecalledDataInBytes": number;
    /**
     * This is the purpose of the recall
     */
    "purpose": string;
    /**
     * This is the query associated with the recall
     */
    "queryString": string;
    /**
     * This is the list of logsets associated with the recall
     */
    "logSets": string;
    /**
     * This is the user who initiated the recall request
     */
    "createdBy": string;
    /**
     * This is the id for the recalled data collection Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "collectionId": number;
    /**
     * This is the recalled date start time
     */
    "timeRecalledDataStarted": Date;
    /**
     * This is the recalled data end time
     */
    "timeRecalledDataEnded": Date;
    /**
     * This is the current progress percentage for the recalled data Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentageComplete"?: number;
}
export declare namespace RecalledData {
    enum Status {
        Recalled = "RECALLED",
        Pending = "PENDING",
        Failed = "FAILED",
        PartialRecalled = "PARTIAL_RECALLED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: RecalledData): object;
    function getDeserializedJsonObj(obj: RecalledData): object;
}
