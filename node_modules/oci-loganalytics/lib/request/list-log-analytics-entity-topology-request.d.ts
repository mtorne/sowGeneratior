/**
 *
 *
 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/loganalytics/ListLogAnalyticsEntityTopology.ts.html |here} to see how to use ListLogAnalyticsEntityTopologyRequest.
 */
export interface ListLogAnalyticsEntityTopologyRequest extends common.BaseRequest {
    /**
     * The Logging Analytics namespace used for the request.
     *
     */
    "namespaceName": string;
    /**
     * The log analytics entity OCID.
     *
     */
    "logAnalyticsEntityId": string;
    /**
     * A filter to return only those log analytics entities with the specified lifecycle state. The state
     * value is case-insensitive.
     *
     */
    "lifecycleState"?: model.EntityLifecycleStates;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * The sort order to use, either ascending ({@code ASC}) or descending ({@code DESC}).
     *
     */
    "sortOrder"?: ListLogAnalyticsEntityTopologyRequest.SortOrder;
    /**
     * The field to sort entities by. Only one sort order may be provided. Default order for timeCreated and timeUpdated
     * is descending. Default order for entity name is ascending. If no value is specified timeCreated is default.
     *
     */
    "sortBy"?: ListLogAnalyticsEntityTopologyRequest.SortBy;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
    /**
     * A filter to return only log analytics entities whose metadata name, value and type matches the specified string.
     * Each item in the array has the format \"{name}:{value}:{type}\".  All inputs are case-insensitive.
     *
     */
    "metadataEquals"?: Array<string>;
    /**
     * A filter to return log analytics entity toplogy whose context matches the specified string.
     *
     */
    "context"?: string;
}
export declare namespace ListLogAnalyticsEntityTopologyRequest {
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        TimeCreated = "timeCreated",
        TimeUpdated = "timeUpdated",
        Name = "name"
    }
}
