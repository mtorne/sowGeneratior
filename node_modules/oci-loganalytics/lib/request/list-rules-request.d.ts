/**
 *
 *
 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/loganalytics/ListRules.ts.html |here} to see how to use ListRulesRequest.
 */
export interface ListRulesRequest extends common.BaseRequest {
    /**
     * The Logging Analytics namespace used for the request.
     *
     */
    "namespaceName": string;
    /**
     * The ID of the compartment in which to list resources.
     */
    "compartmentId": string;
    /**
     * A filter to return rules whose displayName matches in whole or in part the
     * specified value. The match is case-insensitive.
     *
     */
    "displayName"?: string;
    /**
     * The rule kind used for filtering. Only rules of the specified
     * kind will be returned.
     *
     */
    "kind"?: ListRulesRequest.Kind;
    /**
     * The target service to use for filtering.
     *
     */
    "targetService"?: string;
    /**
     * The rule lifecycle state used for filtering. Currently supported
     * values are ACTIVE and DELETED.
     *
     */
    "lifecycleState"?: model.ConfigLifecycleState;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * The sort order to use, either ascending ({@code ASC}) or descending ({@code DESC}).
     *
     */
    "sortOrder"?: ListRulesRequest.SortOrder;
    /**
     * The field to sort by. Only one sort order may be provided. Default order for timeCreated is descending. Default order for displayName is ascending. If no value is specified timeCreated is default.
     *
     */
    "sortBy"?: ListRulesRequest.SortBy;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
}
export declare namespace ListRulesRequest {
    enum Kind {
        IngestTime = "INGEST_TIME",
        SavedSearch = "SAVED_SEARCH",
        All = "ALL"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        TimeCreated = "timeCreated",
        TimeUpdated = "timeUpdated",
        DisplayName = "displayName"
    }
}
