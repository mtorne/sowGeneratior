/**
 * OS Management API
 * API for the OS Management service. Use these API operations for working
with Managed instances and Managed instance groups.

 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A module stream provided by a software source
 */
export interface ModuleStream {
    /**
     * The name of the module that contains the stream
     */
    "moduleName": string;
    /**
     * The name of the stream
     */
    "streamName": string;
    /**
     * Indicates if this stream is the default for its module.
     */
    "isDefault"?: boolean;
    /**
     * The OCID of the software source that provides this module stream.
     */
    "softwareSourceId"?: string;
    /**
     * The architecture for which the packages in this module stream were built
     */
    "architecture"?: string;
    /**
     * A description of the contents of the module stream
     */
    "description"?: string;
    /**
     * A list of profiles that are part of the stream.  Each element in
     * the list is the name of a profile.  The name is suitable to use as
     * an argument to other OS Management APIs that interact directly with
     * module stream profiles.  However, it is not URL encoded.
     *
     */
    "profiles"?: Array<string>;
    /**
     * A list of packages that are contained by the stream.  Each element
     * in the list is the name of a package.  The name is suitable to use
     * as an argument to other OS Management APIs that interact directly
     * with packages.
     *
     */
    "packages"?: Array<string>;
}
export declare namespace ModuleStream {
    function getJsonObj(obj: ModuleStream): object;
    function getDeserializedJsonObj(obj: ModuleStream): object;
}
