/**
 * OS Management API
 * API for the OS Management service. Use these API operations for working
with Managed instances and Managed instance groups.

 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Description of Event.
 */
export interface Event {
    /**
     * OCID identifier of the event
     */
    "id": string;
    /**
     * OCI identifier of the instance where the event occurred
     */
    "instanceId"?: string;
    /**
     * OCI identifier of the compartement where the instance is
     */
    "compartmentId"?: string;
    /**
     * OCID identifier of the instance tenancy.
     */
    "tenancyId"?: string;
    /**
     * human readable description of the event
     */
    "summary"?: string;
    /**
     * Time of the occurrence of the event
     */
    "timestamp"?: Date;
    /**
     * Unique ID used to group event with the same characteristics together.
     * The list of such groups of event can be retrieved via /recurringEvents/{EventFingerprint}
     *
     */
    "eventFingerprint"?: string;
    /**
     * Event occurrence count. Number of time the event has happen on the system. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "count"?: number;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    "eventType": string;
}
export declare namespace Event {
    function getJsonObj(obj: Event): object;
    function getDeserializedJsonObj(obj: Event): object;
}
