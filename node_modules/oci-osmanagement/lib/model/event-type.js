"use strict";
/**
 * OS Management API
 * API for the OS Management service. Use these API operations for working
with Managed instances and Managed instance groups.

 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventType = void 0;
/**
 * Event type:
 *   * {@code KERNEL_OOPS} - Used to identify a kernel panic condition event
 *   * {@code KERNEL_CRASH} - Used to identify an internal fatal kernel error that cannot be safely recovered from
 *   * {@code CRASH} - Used to identify when an application stopped functioning properly and exited
 *   * {@code EXPLOIT_ATTEMPT} - Used to identify a known exploit detection as identified by Ksplice
 *   * {@code COMPLIANCE} - Used to identify a compliance related events
 *   * {@code TUNING_SUGGESTION} - Used to identify autonomous tuning suggestion events
 *   * {@code TUNING_APPLIED} - Used to identify when a tuning suggestion has been applied
 *   * {@code SECURITY} - Used to identify security related events
 *   * {@code ERROR} - Used to identify error related events
 *   * {@code WARNING} - Used to identify warning related events
 *
 **/
var EventType;
(function (EventType) {
    EventType["KernelOops"] = "KERNEL_OOPS";
    EventType["KernelCrash"] = "KERNEL_CRASH";
    EventType["Crash"] = "CRASH";
    EventType["ExploitAttempt"] = "EXPLOIT_ATTEMPT";
    EventType["Compliance"] = "COMPLIANCE";
    EventType["TuningSuggestion"] = "TUNING_SUGGESTION";
    EventType["TuningApplied"] = "TUNING_APPLIED";
    EventType["Security"] = "SECURITY";
    EventType["Error"] = "ERROR";
    EventType["Warning"] = "WARNING";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    EventType["UnknownValue"] = "UNKNOWN_VALUE";
})(EventType = exports.EventType || (exports.EventType = {}));
(function (EventType) {
    function getJsonObj(obj) {
        return obj;
    }
    EventType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    EventType.getDeserializedJsonObj = getDeserializedJsonObj;
})(EventType = exports.EventType || (exports.EventType = {}));
//# sourceMappingURL=event-type.js.map