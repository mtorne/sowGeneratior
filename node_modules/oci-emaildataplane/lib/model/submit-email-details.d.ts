/**
 * Email Delivery Submission API
 * Use the Email Delivery API to send high-volume and application-generated emails.
For more information, see [Overview of the Email Delivery Service](https://docs.oracle.com/iaas/Content/Email/Concepts/overview.htm).

 * OpenAPI spec version: 20220926
 * Contact: email-dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details that are required by the sender to submit a request to send email.
 */
export interface SubmitEmailDetails {
    /**
     * The unique ID for the email's Message-ID header used for service log correlation. The submission will return an error if the syntax is not a valid [RFC 5322](https://www.rfc-editor.org/rfc/rfc5322) Message-ID. This will be generated if not provided.
     * Example: sdiofu234qwermls24fd@mail.example.com
     *
     */
    "messageId"?: string;
    "sender": model.Sender;
    "recipients": model.Recipients;
    /**
     * A short summary of the content, which will appear in the recipient's inbox. UTF-8 supported [RFC 2047](https://www.rfc-editor.org/rfc/rfc2047).
     */
    "subject": string;
    /**
     * HTML body content in UTF-8.
     * NOTE: Even though bodytext and bodyhtml are both optional, at least one of them must be provided.
     *
     */
    "bodyHtml"?: string;
    /**
     * Text body content.
     * NOTE: Even though bodytext and bodyhtml are both optional, at least one of them must be provided.
     *
     */
    "bodyText"?: string;
    /**
     * The email address for the recipient to reply to. If left blank, defaults to the sender address.
     */
    "replyTo"?: Array<model.EmailAddress>;
    /**
     * The header used by the customer for the email sent. Reserved headers are not allowed e.g \"subject\", \"from\", and \"to\" etc.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "headerFields"?: {
        [key: string]: string;
    };
}
export declare namespace SubmitEmailDetails {
    function getJsonObj(obj: SubmitEmailDetails): object;
    function getDeserializedJsonObj(obj: SubmitEmailDetails): object;
}
