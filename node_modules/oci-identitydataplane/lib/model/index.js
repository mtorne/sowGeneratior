"use strict";
/**
 * Identity and Access Management Data Plane API
 * APIs for managing identity data plane services. For example, use this API to create a scoped-access security token. To manage identity domains (for example, creating or deleting an identity domain) or to manage resources (for example, users and groups) within the default identity domain, see [IAM API](https://docs.oracle.com/iaas/api/#/en/identity/).
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.X509FederationRequest = exports.ValidAuthenticateUserResult = exports.UserNotFoundAuthenticateUserResult = exports.User = exports.ThinAuthorizationResponse = exports.ThinAssociationAuthorizationResponse = exports.ThickAuthorizationResponse = exports.TenantNotFoundAuthenticateUserResult = exports.Tenant = exports.SecurityToken = exports.ResourcePrincipalSessionTokenRequest = exports.RefreshRequest = exports.Principal = exports.PermissionContext = exports.Permission = exports.PasswordResetAuthenticationRequest = exports.PasswordPolicy = exports.OnBehalfOfRequest = exports.JWK = exports.IdentityProvider = exports.GenerateUserSecurityTokenDetails = exports.GenerateScopedAccessTokenDetails = exports.FilterGroupMembershipResult = exports.FilterGroupMembershipDetails = exports.EntityStatus = exports.DerivedKeyResponse = exports.CredentialAuthenticatorInfo = exports.CostTrackingTag = exports.ContextVariable = exports.CompartmentMetadata = exports.Compartment = exports.CommonPrincipal = exports.ClientCredentialsResponse = exports.Claim = exports.BadUserStateAuthenticateUserResult = exports.AuthorizationRequest = exports.AuthenticationRequest = exports.AuthenticationPrincipal = exports.AuthenticationPolicy = exports.AuthenticateUserResult = exports.AuthenticateClientResult = exports.AuthenticateClientDetails = exports.AuthServiceUser = exports.AssociationAuthorizationRequest = exports.AccessibleCompartmentResponse = exports.AccessibleCompartmentRequest = void 0;
const AccessibleCompartmentRequest = __importStar(require("./accessible-compartment-request"));
exports.AccessibleCompartmentRequest = AccessibleCompartmentRequest.AccessibleCompartmentRequest;
const AccessibleCompartmentResponse = __importStar(require("./accessible-compartment-response"));
exports.AccessibleCompartmentResponse = AccessibleCompartmentResponse.AccessibleCompartmentResponse;
const AssociationAuthorizationRequest = __importStar(require("./association-authorization-request"));
exports.AssociationAuthorizationRequest = AssociationAuthorizationRequest.AssociationAuthorizationRequest;
const AuthServiceUser = __importStar(require("./auth-service-user"));
exports.AuthServiceUser = AuthServiceUser.AuthServiceUser;
const AuthenticateClientDetails = __importStar(require("./authenticate-client-details"));
exports.AuthenticateClientDetails = AuthenticateClientDetails.AuthenticateClientDetails;
const AuthenticateClientResult = __importStar(require("./authenticate-client-result"));
exports.AuthenticateClientResult = AuthenticateClientResult.AuthenticateClientResult;
const AuthenticateUserResult = __importStar(require("./authenticate-user-result"));
exports.AuthenticateUserResult = AuthenticateUserResult.AuthenticateUserResult;
const AuthenticationPolicy = __importStar(require("./authentication-policy"));
exports.AuthenticationPolicy = AuthenticationPolicy.AuthenticationPolicy;
const AuthenticationPrincipal = __importStar(require("./authentication-principal"));
exports.AuthenticationPrincipal = AuthenticationPrincipal.AuthenticationPrincipal;
const AuthenticationRequest = __importStar(require("./authentication-request"));
exports.AuthenticationRequest = AuthenticationRequest.AuthenticationRequest;
const AuthorizationRequest = __importStar(require("./authorization-request"));
exports.AuthorizationRequest = AuthorizationRequest.AuthorizationRequest;
const BadUserStateAuthenticateUserResult = __importStar(require("./bad-user-state-authenticate-user-result"));
exports.BadUserStateAuthenticateUserResult = BadUserStateAuthenticateUserResult.BadUserStateAuthenticateUserResult;
const Claim = __importStar(require("./claim"));
exports.Claim = Claim.Claim;
const ClientCredentialsResponse = __importStar(require("./client-credentials-response"));
exports.ClientCredentialsResponse = ClientCredentialsResponse.ClientCredentialsResponse;
const CommonPrincipal = __importStar(require("./common-principal"));
exports.CommonPrincipal = CommonPrincipal.CommonPrincipal;
const Compartment = __importStar(require("./compartment"));
exports.Compartment = Compartment.Compartment;
const CompartmentMetadata = __importStar(require("./compartment-metadata"));
exports.CompartmentMetadata = CompartmentMetadata.CompartmentMetadata;
const ContextVariable = __importStar(require("./context-variable"));
exports.ContextVariable = ContextVariable.ContextVariable;
const CostTrackingTag = __importStar(require("./cost-tracking-tag"));
exports.CostTrackingTag = CostTrackingTag.CostTrackingTag;
const CredentialAuthenticatorInfo = __importStar(require("./credential-authenticator-info"));
exports.CredentialAuthenticatorInfo = CredentialAuthenticatorInfo.CredentialAuthenticatorInfo;
const DerivedKeyResponse = __importStar(require("./derived-key-response"));
exports.DerivedKeyResponse = DerivedKeyResponse.DerivedKeyResponse;
const EntityStatus = __importStar(require("./entity-status"));
exports.EntityStatus = EntityStatus.EntityStatus;
const FilterGroupMembershipDetails = __importStar(require("./filter-group-membership-details"));
exports.FilterGroupMembershipDetails = FilterGroupMembershipDetails.FilterGroupMembershipDetails;
const FilterGroupMembershipResult = __importStar(require("./filter-group-membership-result"));
exports.FilterGroupMembershipResult = FilterGroupMembershipResult.FilterGroupMembershipResult;
const GenerateScopedAccessTokenDetails = __importStar(require("./generate-scoped-access-token-details"));
exports.GenerateScopedAccessTokenDetails = GenerateScopedAccessTokenDetails.GenerateScopedAccessTokenDetails;
const GenerateUserSecurityTokenDetails = __importStar(require("./generate-user-security-token-details"));
exports.GenerateUserSecurityTokenDetails = GenerateUserSecurityTokenDetails.GenerateUserSecurityTokenDetails;
const IdentityProvider = __importStar(require("./identity-provider"));
exports.IdentityProvider = IdentityProvider.IdentityProvider;
const JWK = __importStar(require("./j-wk"));
exports.JWK = JWK.JWK;
const OnBehalfOfRequest = __importStar(require("./on-behalf-of-request"));
exports.OnBehalfOfRequest = OnBehalfOfRequest.OnBehalfOfRequest;
const PasswordPolicy = __importStar(require("./password-policy"));
exports.PasswordPolicy = PasswordPolicy.PasswordPolicy;
const PasswordResetAuthenticationRequest = __importStar(require("./password-reset-authentication-request"));
exports.PasswordResetAuthenticationRequest = PasswordResetAuthenticationRequest.PasswordResetAuthenticationRequest;
const Permission = __importStar(require("./permission"));
exports.Permission = Permission.Permission;
const PermissionContext = __importStar(require("./permission-context"));
exports.PermissionContext = PermissionContext.PermissionContext;
const Principal = __importStar(require("./principal"));
exports.Principal = Principal.Principal;
const RefreshRequest = __importStar(require("./refresh-request"));
exports.RefreshRequest = RefreshRequest.RefreshRequest;
const ResourcePrincipalSessionTokenRequest = __importStar(require("./resource-principal-session-token-request"));
exports.ResourcePrincipalSessionTokenRequest = ResourcePrincipalSessionTokenRequest.ResourcePrincipalSessionTokenRequest;
const SecurityToken = __importStar(require("./security-token"));
exports.SecurityToken = SecurityToken.SecurityToken;
const Tenant = __importStar(require("./tenant"));
exports.Tenant = Tenant.Tenant;
const TenantNotFoundAuthenticateUserResult = __importStar(require("./tenant-not-found-authenticate-user-result"));
exports.TenantNotFoundAuthenticateUserResult = TenantNotFoundAuthenticateUserResult.TenantNotFoundAuthenticateUserResult;
const ThickAuthorizationResponse = __importStar(require("./thick-authorization-response"));
exports.ThickAuthorizationResponse = ThickAuthorizationResponse.ThickAuthorizationResponse;
const ThinAssociationAuthorizationResponse = __importStar(require("./thin-association-authorization-response"));
exports.ThinAssociationAuthorizationResponse = ThinAssociationAuthorizationResponse.ThinAssociationAuthorizationResponse;
const ThinAuthorizationResponse = __importStar(require("./thin-authorization-response"));
exports.ThinAuthorizationResponse = ThinAuthorizationResponse.ThinAuthorizationResponse;
const User = __importStar(require("./user"));
exports.User = User.User;
const UserNotFoundAuthenticateUserResult = __importStar(require("./user-not-found-authenticate-user-result"));
exports.UserNotFoundAuthenticateUserResult = UserNotFoundAuthenticateUserResult.UserNotFoundAuthenticateUserResult;
const ValidAuthenticateUserResult = __importStar(require("./valid-authenticate-user-result"));
exports.ValidAuthenticateUserResult = ValidAuthenticateUserResult.ValidAuthenticateUserResult;
const X509FederationRequest = __importStar(require("./x509-federation-request"));
exports.X509FederationRequest = X509FederationRequest.X509FederationRequest;
//# sourceMappingURL=index.js.map