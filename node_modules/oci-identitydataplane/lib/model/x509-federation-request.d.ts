/**
 * Identity and Access Management Data Plane API
 * APIs for managing identity data plane services. For example, use this API to create a scoped-access security token. To manage identity domains (for example, creating or deleting an identity domain) or to manage resources (for example, users and groups) within the default identity domain, see [IAM API](https://docs.oracle.com/iaas/api/#/en/identity/).
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
export interface X509FederationRequest {
    /**
     * The x509 certificate of the service instance, issued by his CA.
     */
    "certificate": string;
    /**
     * A temporary public key, owned by the service. The service also owns the corresponding private key. This public
     * key will be put inside the security token by the auth service after successful validation of the certificate.
     *
     */
    "publicKey": string;
    /**
     * An array of intermediate certificates to form the chain from the leaf certificate to the root CA. If auth
     * service already has the intermediate certificate(s), then this is not required.
     *
     */
    "intermediateCertificates"?: Array<string>;
}
export declare namespace X509FederationRequest {
    function getJsonObj(obj: X509FederationRequest): object;
    function getDeserializedJsonObj(obj: X509FederationRequest): object;
}
