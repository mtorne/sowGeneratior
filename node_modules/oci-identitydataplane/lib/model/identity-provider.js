"use strict";
/**
 * Identity and Access Management Data Plane API
 * APIs for managing identity data plane services. For example, use this API to create a scoped-access security token. To manage identity domains (for example, creating or deleting an identity domain) or to manage resources (for example, users and groups) within the default identity domain, see [IAM API](https://docs.oracle.com/iaas/api/#/en/identity/).
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityProvider = void 0;
var IdentityProvider;
(function (IdentityProvider) {
    let Protocol;
    (function (Protocol) {
        Protocol["Saml2"] = "SAML2";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Protocol["UnknownValue"] = "UNKNOWN_VALUE";
    })(Protocol = IdentityProvider.Protocol || (IdentityProvider.Protocol = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    IdentityProvider.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    IdentityProvider.getDeserializedJsonObj = getDeserializedJsonObj;
})(IdentityProvider = exports.IdentityProvider || (exports.IdentityProvider = {}));
//# sourceMappingURL=identity-provider.js.map