"use strict";
/**
 * Threat Intelligence API
 * Use the Threat Intelligence API to search for information about known threat indicators, including suspicious IP addresses, domain names, and other digital fingerprints. Threat Intelligence is a managed database of curated threat intelligence that comes from first party Oracle security insights, open source feeds, and vendor-procured data. For more information, see the [Threat Intelligence documentation](https://docs.oracle.com/iaas/Content/threat-intel/home.htm).
 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndicatorType = void 0;
/**
 * The set of supported indicator types.
 **/
var IndicatorType;
(function (IndicatorType) {
    IndicatorType["DomainName"] = "DOMAIN_NAME";
    IndicatorType["FileName"] = "FILE_NAME";
    IndicatorType["Md5Hash"] = "MD5_HASH";
    IndicatorType["Sha1Hash"] = "SHA1_HASH";
    IndicatorType["Sha256Hash"] = "SHA256_HASH";
    IndicatorType["IpAddress"] = "IP_ADDRESS";
    IndicatorType["Url"] = "URL";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    IndicatorType["UnknownValue"] = "UNKNOWN_VALUE";
})(IndicatorType = exports.IndicatorType || (exports.IndicatorType = {}));
(function (IndicatorType) {
    function getJsonObj(obj) {
        return obj;
    }
    IndicatorType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    IndicatorType.getDeserializedJsonObj = getDeserializedJsonObj;
})(IndicatorType = exports.IndicatorType || (exports.IndicatorType = {}));
//# sourceMappingURL=indicator-type.js.map