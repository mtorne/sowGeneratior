"use strict";
/**
 * MarketplacePrivateOffer API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceBundle = void 0;
var ResourceBundle;
(function (ResourceBundle) {
    let Type;
    (function (Type) {
        Type["Listing"] = "LISTING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Type["UnknownValue"] = "UNKNOWN_VALUE";
    })(Type = ResourceBundle.Type || (ResourceBundle.Type = {}));
    let UnitOfMeasurement;
    (function (UnitOfMeasurement) {
        UnitOfMeasurement["OcpuPerHour"] = "OCPU_PER_HOUR";
        UnitOfMeasurement["InstancePerHour"] = "INSTANCE_PER_HOUR";
        UnitOfMeasurement["Credits"] = "CREDITS";
        UnitOfMeasurement["Instances"] = "INSTANCES";
        UnitOfMeasurement["Nodes"] = "NODES";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnitOfMeasurement["UnknownValue"] = "UNKNOWN_VALUE";
    })(UnitOfMeasurement = ResourceBundle.UnitOfMeasurement || (ResourceBundle.UnitOfMeasurement = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ResourceBundle.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ResourceBundle.getDeserializedJsonObj = getDeserializedJsonObj;
})(ResourceBundle = exports.ResourceBundle || (exports.ResourceBundle = {}));
//# sourceMappingURL=resource-bundle.js.map