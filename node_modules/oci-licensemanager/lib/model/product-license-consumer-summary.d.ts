/**
 * License Manager API
 * Use the License Manager API to manage product licenses and license records. For more information, see [License Manager Overview](https://docs.oracle.com/iaas/Content/LicenseManager/Concepts/licensemanageroverview.htm).
 * OpenAPI spec version: 20220430
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of a resource that is consuming a particular product license.
 *
 */
export interface ProductLicenseConsumerSummary {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    "resourceId": string;
    /**
     * The display name of the resource.
     */
    "resourceName": string;
    /**
     * The resource product name.
     */
    "productName": string;
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the resource.
     */
    "resourceCompartmentId": string;
    /**
     * The display name of the compartment that contains the resource.
     */
    "resourceCompartmentName": string;
    /**
     * The unit type for the resource.
     */
    "resourceUnitType": model.ResourceUnit;
    /**
     * Number of units of the resource Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "resourceUnitCount": number;
    /**
     * The product license unit.
     */
    "licenseUnitType": model.LicenseUnit;
    /**
     * Number of license units consumed by the resource. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "licenseUnitsConsumed": number;
    /**
     * Specifies if the base license is available.
     */
    "isBaseLicenseAvailable": boolean;
    /**
     * Specifies if all options are available.
     */
    "areAllOptionsAvailable": boolean;
    /**
     * Collection of missing product licenses.
     */
    "missingProducts": Array<model.Product>;
}
export declare namespace ProductLicenseConsumerSummary {
    function getJsonObj(obj: ProductLicenseConsumerSummary): object;
    function getDeserializedJsonObj(obj: ProductLicenseConsumerSummary): object;
}
