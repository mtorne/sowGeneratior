/**
 * License Manager API
 * Use the License Manager API to manage product licenses and license records. For more information, see [License Manager Overview](https://docs.oracle.com/iaas/Content/LicenseManager/Concepts/licensemanageroverview.htm).
 * OpenAPI spec version: 20220430
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The bulk upload response.
 */
export interface BulkUploadResponse {
    /**
     * The number of license records which were supported. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSupportedRecords": number;
    /**
     * The number of supported license records that were uploaded successfully. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSupportedRecordsSaved": number;
    /**
     * The number of supported license records that were valid but not uploaded since they were duplicates. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSupportedDuplicateRecords": number;
    /**
     * The number of supported license records that were valid but failed with errors during upload. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSupportedFailedLicenseRecords": number;
    /**
     * The number of supported license records that could not be uploaded since they were invalid. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalSupportedInvalidRecords": number;
    /**
     * Detailed error information corresponding to each supported but invalid row for the uploaded file.
     */
    "validationErrorInfo": Array<model.BulkUploadValidationErrorInfo>;
    /**
     * Error information corresponding to the supported records which are valid but could not be created.
     */
    "failedLicenseRecordInfo": Array<model.BulkUploadFailedRecordInfo>;
    /**
     * Response message for bulk upload.
     */
    "message": string;
}
export declare namespace BulkUploadResponse {
    function getJsonObj(obj: BulkUploadResponse): object;
    function getDeserializedJsonObj(obj: BulkUploadResponse): object;
}
