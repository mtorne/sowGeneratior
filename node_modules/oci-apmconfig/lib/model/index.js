"use strict";
/**
 * Application Performance Monitoring Configuration API
 * Use the Application Performance Monitoring Configuration API to query and set Application Performance Monitoring
configuration. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20210201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateOptionsDetails = exports.UpdateMetricGroupDetails = exports.UpdateApdexRulesDetails = exports.TestSpanEnrichmentOutput = exports.TestSpanEnrichmentDetails = exports.SpanFilterSummary = exports.SpanFilter = exports.OptionsSummary = exports.Options = exports.MetricGroupSummary = exports.MetricGroup = exports.ExportImportSpanFilterSummary = exports.ExportImportOptionsSummary = exports.ExportImportMetricGroupSummary = exports.ExportImportApdexRulesSummary = exports.CreateSpanFilterDetails = exports.CreateOptionsDetails = exports.CreateMetricGroupDetails = exports.CreateApdexRulesDetails = exports.ApdexRulesSummary = exports.ApdexRules = exports.ValidateSpanFilterPatternDetails = exports.UpdateConfigDetails = exports.TestTypes = exports.TestOutput = exports.TestDetails = exports.SpanFilterReference = exports.SortOrders = exports.RetrieveNamespaceMetricsDetails = exports.NamespaceMetricCollection = exports.NamespaceMetric = exports.NamespaceCollection = exports.Namespace = exports.MetricTypes = exports.Metric = exports.ImportConfigurationFailedItemsCollection = exports.ImportConfigurationFailedItemSummary = exports.ImportConfigurationDetails = exports.FilterTextOrId = exports.ExportImportConfigSummary = exports.ExportConfigurationResponseDetails = exports.ExportConfigurationDetails = exports.Dimension = exports.CreateConfigDetails = exports.CopyConfigurationDetails = exports.ConfigTypes = exports.ConfigSummary = exports.ConfigCollection = exports.Config = exports.Apdex = void 0;
exports.UpdateSpanFilterDetails = void 0;
const Apdex = __importStar(require("./apdex"));
exports.Apdex = Apdex.Apdex;
const Config = __importStar(require("./config"));
exports.Config = Config.Config;
const ConfigCollection = __importStar(require("./config-collection"));
exports.ConfigCollection = ConfigCollection.ConfigCollection;
const ConfigSummary = __importStar(require("./config-summary"));
exports.ConfigSummary = ConfigSummary.ConfigSummary;
const ConfigTypes = __importStar(require("./config-types"));
exports.ConfigTypes = ConfigTypes.ConfigTypes;
const CopyConfigurationDetails = __importStar(require("./copy-configuration-details"));
exports.CopyConfigurationDetails = CopyConfigurationDetails.CopyConfigurationDetails;
const CreateConfigDetails = __importStar(require("./create-config-details"));
exports.CreateConfigDetails = CreateConfigDetails.CreateConfigDetails;
const Dimension = __importStar(require("./dimension"));
exports.Dimension = Dimension.Dimension;
const ExportConfigurationDetails = __importStar(require("./export-configuration-details"));
exports.ExportConfigurationDetails = ExportConfigurationDetails.ExportConfigurationDetails;
const ExportConfigurationResponseDetails = __importStar(require("./export-configuration-response-details"));
exports.ExportConfigurationResponseDetails = ExportConfigurationResponseDetails.ExportConfigurationResponseDetails;
const ExportImportConfigSummary = __importStar(require("./export-import-config-summary"));
exports.ExportImportConfigSummary = ExportImportConfigSummary.ExportImportConfigSummary;
const FilterTextOrId = __importStar(require("./filter-text-or-id"));
exports.FilterTextOrId = FilterTextOrId.FilterTextOrId;
const ImportConfigurationDetails = __importStar(require("./import-configuration-details"));
exports.ImportConfigurationDetails = ImportConfigurationDetails.ImportConfigurationDetails;
const ImportConfigurationFailedItemSummary = __importStar(require("./import-configuration-failed-item-summary"));
exports.ImportConfigurationFailedItemSummary = ImportConfigurationFailedItemSummary.ImportConfigurationFailedItemSummary;
const ImportConfigurationFailedItemsCollection = __importStar(require("./import-configuration-failed-items-collection"));
exports.ImportConfigurationFailedItemsCollection = ImportConfigurationFailedItemsCollection.ImportConfigurationFailedItemsCollection;
const Metric = __importStar(require("./metric"));
exports.Metric = Metric.Metric;
const MetricTypes = __importStar(require("./metric-types"));
exports.MetricTypes = MetricTypes.MetricTypes;
const Namespace = __importStar(require("./namespace"));
exports.Namespace = Namespace.Namespace;
const NamespaceCollection = __importStar(require("./namespace-collection"));
exports.NamespaceCollection = NamespaceCollection.NamespaceCollection;
const NamespaceMetric = __importStar(require("./namespace-metric"));
exports.NamespaceMetric = NamespaceMetric.NamespaceMetric;
const NamespaceMetricCollection = __importStar(require("./namespace-metric-collection"));
exports.NamespaceMetricCollection = NamespaceMetricCollection.NamespaceMetricCollection;
const RetrieveNamespaceMetricsDetails = __importStar(require("./retrieve-namespace-metrics-details"));
exports.RetrieveNamespaceMetricsDetails = RetrieveNamespaceMetricsDetails.RetrieveNamespaceMetricsDetails;
const SortOrders = __importStar(require("./sort-orders"));
exports.SortOrders = SortOrders.SortOrders;
const SpanFilterReference = __importStar(require("./span-filter-reference"));
exports.SpanFilterReference = SpanFilterReference.SpanFilterReference;
const TestDetails = __importStar(require("./test-details"));
exports.TestDetails = TestDetails.TestDetails;
const TestOutput = __importStar(require("./test-output"));
exports.TestOutput = TestOutput.TestOutput;
const TestTypes = __importStar(require("./test-types"));
exports.TestTypes = TestTypes.TestTypes;
const UpdateConfigDetails = __importStar(require("./update-config-details"));
exports.UpdateConfigDetails = UpdateConfigDetails.UpdateConfigDetails;
const ValidateSpanFilterPatternDetails = __importStar(require("./validate-span-filter-pattern-details"));
exports.ValidateSpanFilterPatternDetails = ValidateSpanFilterPatternDetails.ValidateSpanFilterPatternDetails;
const ApdexRules = __importStar(require("./apdex-rules"));
exports.ApdexRules = ApdexRules.ApdexRules;
const ApdexRulesSummary = __importStar(require("./apdex-rules-summary"));
exports.ApdexRulesSummary = ApdexRulesSummary.ApdexRulesSummary;
const CreateApdexRulesDetails = __importStar(require("./create-apdex-rules-details"));
exports.CreateApdexRulesDetails = CreateApdexRulesDetails.CreateApdexRulesDetails;
const CreateMetricGroupDetails = __importStar(require("./create-metric-group-details"));
exports.CreateMetricGroupDetails = CreateMetricGroupDetails.CreateMetricGroupDetails;
const CreateOptionsDetails = __importStar(require("./create-options-details"));
exports.CreateOptionsDetails = CreateOptionsDetails.CreateOptionsDetails;
const CreateSpanFilterDetails = __importStar(require("./create-span-filter-details"));
exports.CreateSpanFilterDetails = CreateSpanFilterDetails.CreateSpanFilterDetails;
const ExportImportApdexRulesSummary = __importStar(require("./export-import-apdex-rules-summary"));
exports.ExportImportApdexRulesSummary = ExportImportApdexRulesSummary.ExportImportApdexRulesSummary;
const ExportImportMetricGroupSummary = __importStar(require("./export-import-metric-group-summary"));
exports.ExportImportMetricGroupSummary = ExportImportMetricGroupSummary.ExportImportMetricGroupSummary;
const ExportImportOptionsSummary = __importStar(require("./export-import-options-summary"));
exports.ExportImportOptionsSummary = ExportImportOptionsSummary.ExportImportOptionsSummary;
const ExportImportSpanFilterSummary = __importStar(require("./export-import-span-filter-summary"));
exports.ExportImportSpanFilterSummary = ExportImportSpanFilterSummary.ExportImportSpanFilterSummary;
const MetricGroup = __importStar(require("./metric-group"));
exports.MetricGroup = MetricGroup.MetricGroup;
const MetricGroupSummary = __importStar(require("./metric-group-summary"));
exports.MetricGroupSummary = MetricGroupSummary.MetricGroupSummary;
const Options = __importStar(require("./options"));
exports.Options = Options.Options;
const OptionsSummary = __importStar(require("./options-summary"));
exports.OptionsSummary = OptionsSummary.OptionsSummary;
const SpanFilter = __importStar(require("./span-filter"));
exports.SpanFilter = SpanFilter.SpanFilter;
const SpanFilterSummary = __importStar(require("./span-filter-summary"));
exports.SpanFilterSummary = SpanFilterSummary.SpanFilterSummary;
const TestSpanEnrichmentDetails = __importStar(require("./test-span-enrichment-details"));
exports.TestSpanEnrichmentDetails = TestSpanEnrichmentDetails.TestSpanEnrichmentDetails;
const TestSpanEnrichmentOutput = __importStar(require("./test-span-enrichment-output"));
exports.TestSpanEnrichmentOutput = TestSpanEnrichmentOutput.TestSpanEnrichmentOutput;
const UpdateApdexRulesDetails = __importStar(require("./update-apdex-rules-details"));
exports.UpdateApdexRulesDetails = UpdateApdexRulesDetails.UpdateApdexRulesDetails;
const UpdateMetricGroupDetails = __importStar(require("./update-metric-group-details"));
exports.UpdateMetricGroupDetails = UpdateMetricGroupDetails.UpdateMetricGroupDetails;
const UpdateOptionsDetails = __importStar(require("./update-options-details"));
exports.UpdateOptionsDetails = UpdateOptionsDetails.UpdateOptionsDetails;
const UpdateSpanFilterDetails = __importStar(require("./update-span-filter-details"));
exports.UpdateSpanFilterDetails = UpdateSpanFilterDetails.UpdateSpanFilterDetails;
//# sourceMappingURL=index.js.map