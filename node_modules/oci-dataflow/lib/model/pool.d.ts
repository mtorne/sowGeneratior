/**
 * Data Flow API
 * Use the Data Flow APIs to run any Apache Spark application at any scale without deploying or managing any infrastructure.

 * OpenAPI spec version: 20200129
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A Data Flow pool object.
 *
 */
export interface Pool {
    /**
     * The OCID of a compartment.
     *
     */
    "compartmentId": string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
     *
     */
    "definedTags": {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly description. Avoid entering confidential information.
     *
     */
    "description"?: string;
    /**
     * A user-friendly name. It does not have to be unique. Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
     * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * Example: {@code {\"Department\": \"Finance\"}}
     *
     */
    "freeformTags": {
        [key: string]: string;
    };
    /**
     * The OCID of a pool. Unique Id to indentify a dataflow pool resource.
     *
     */
    "id": string;
    /**
     * The detailed messages about the lifecycle state.
     *
     */
    "lifecycleDetails"?: string;
    /**
     * The current state of this pool.
     *
     */
    "lifecycleState": model.PoolLifecycleState;
    /**
     * The OCID of the user who created the resource.
     *
     */
    "ownerPrincipalId": string;
    /**
     * The username of the user who created the resource.  If the username of the owner does not exist,
     * {@code null} will be returned and the caller should refer to the ownerPrincipalId value instead.
     *
     */
    "ownerUserName"?: string;
    "poolMetrics"?: model.PoolMetrics;
    /**
     * List of PoolConfig items.
     *
     */
    "configurations": Array<model.PoolConfig>;
    /**
     * A list of schedules for pool to auto start and stop.
     *
     */
    "schedules"?: Array<model.PoolSchedule>;
    /**
     * Optional timeout value in minutes used to auto stop Pools. A Pool will be auto stopped after inactivity for this amount of time period.
     * If value not set, pool will not be auto stopped auto.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "idleTimeoutInMinutes"?: number;
    /**
     * The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * Example: {@code 2018-04-03T21:10:29.600Z}
     *
     */
    "timeCreated": Date;
    /**
     * The date and time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * Example: {@code 2018-04-03T21:10:29.600Z}
     *
     */
    "timeUpdated": Date;
}
export declare namespace Pool {
    function getJsonObj(obj: Pool): object;
    function getDeserializedJsonObj(obj: Pool): object;
}
