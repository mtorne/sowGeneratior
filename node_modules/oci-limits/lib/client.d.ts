/**
 * Service Limits APIs
 * APIs that interact with the resource limits of a specific resource type.
 * OpenAPI spec version: 20181025
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as model from "./model";
import * as responses from "./response";
import { QuotasWaiter } from "./quotas-waiter";
declare const Breaker: any;
export declare enum LimitsApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class LimitsClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * For a given compartmentId, resource limit name, and scope, returns the following:
     *   * The number of available resources associated with the given limit.
     *   * The usage in the selected compartment for the given limit.
     * If Subscription Id is provided, then usage for resource created in that subscription will be returned
     * Note that not all resource limits support this API. If the value is not available, the API returns a 404 response.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetResourceAvailabilityRequest
     * @return GetResourceAvailabilityResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/GetResourceAvailability.ts.html |here} to see how to use GetResourceAvailability API.
     */
    getResourceAvailability(getResourceAvailabilityRequest: requests.GetResourceAvailabilityRequest): Promise<responses.GetResourceAvailabilityResponse>;
    /**
     * Includes a list of resource limits that are currently supported. If subscription Id is provided, then only resource limits supported by subscription will be returned
     * If the 'areQuotasSupported' property is true, you can create quota policies on top of this limit at the
     * compartment level.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListLimitDefinitionsRequest
     * @return ListLimitDefinitionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/ListLimitDefinitions.ts.html |here} to see how to use ListLimitDefinitions API.
     */
    listLimitDefinitions(listLimitDefinitionsRequest: requests.ListLimitDefinitionsRequest): Promise<responses.ListLimitDefinitionsResponse>;
    /**
     * NOTE: This function is deprecated in favor of listLimitDefinitionsRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LimitDefinitionSummary objects
     * contained in responses from the listLimitDefinitions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLimitDefinitions(request: requests.ListLimitDefinitionsRequest): AsyncIterableIterator<model.LimitDefinitionSummary>;
    /**
     * NOTE: This function is deprecated in favor of listLimitDefinitionsResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listLimitDefinitions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLimitDefinitionsResponses(request: requests.ListLimitDefinitionsRequest): AsyncIterableIterator<responses.ListLimitDefinitionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LimitDefinitionSummary objects
     * contained in responses from the listLimitDefinitions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLimitDefinitionsRecordIterator(request: requests.ListLimitDefinitionsRequest): AsyncIterableIterator<model.LimitDefinitionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLimitDefinitions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLimitDefinitionsResponseIterator(request: requests.ListLimitDefinitionsRequest): AsyncIterableIterator<responses.ListLimitDefinitionsResponse>;
    /**
     * Includes a full list of resource limits belonging to a given service. If subscription Id is provided, limit value for subscription will be returned.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListLimitValuesRequest
     * @return ListLimitValuesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/ListLimitValues.ts.html |here} to see how to use ListLimitValues API.
     */
    listLimitValues(listLimitValuesRequest: requests.ListLimitValuesRequest): Promise<responses.ListLimitValuesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listLimitValuesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.LimitValueSummary objects
     * contained in responses from the listLimitValues operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLimitValues(request: requests.ListLimitValuesRequest): AsyncIterableIterator<model.LimitValueSummary>;
    /**
     * NOTE: This function is deprecated in favor of listLimitValuesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listLimitValues operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLimitValuesResponses(request: requests.ListLimitValuesRequest): AsyncIterableIterator<responses.ListLimitValuesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LimitValueSummary objects
     * contained in responses from the listLimitValues operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLimitValuesRecordIterator(request: requests.ListLimitValuesRequest): AsyncIterableIterator<model.LimitValueSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLimitValues operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listLimitValuesResponseIterator(request: requests.ListLimitValuesRequest): AsyncIterableIterator<responses.ListLimitValuesResponse>;
    /**
     * Returns the list of supported services. If subscription ID is provided then only services supported by subscription will be returned.
     * This includes the programmatic service name, along with the friendly service name.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListServicesRequest
     * @return ListServicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/ListServices.ts.html |here} to see how to use ListServices API.
     */
    listServices(listServicesRequest: requests.ListServicesRequest): Promise<responses.ListServicesResponse>;
    /**
     * NOTE: This function is deprecated in favor of listServicesRecordIterator function.
     * Creates a new async iterator which will iterate over the models.ServiceSummary objects
     * contained in responses from the listServices operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllServices(request: requests.ListServicesRequest): AsyncIterableIterator<model.ServiceSummary>;
    /**
     * NOTE: This function is deprecated in favor of listServicesResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listServices operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllServicesResponses(request: requests.ListServicesRequest): AsyncIterableIterator<responses.ListServicesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ServiceSummary objects
     * contained in responses from the listServices operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listServicesRecordIterator(request: requests.ListServicesRequest): AsyncIterableIterator<model.ServiceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listServices operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listServicesResponseIterator(request: requests.ListServicesRequest): AsyncIterableIterator<responses.ListServicesResponse>;
}
export declare enum QuotasApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class QuotasClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean | undefined;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": QuotasWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: typeof Breaker | null;
    protected _httpOptions: any;
    protected _bodyDuplexMode: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    protected _authProvider: common.AuthenticationDetailsProvider | undefined;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new QuotasWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): QuotasWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): QuotasWaiter;
    /**
     * Shutdown the circuit breaker used by the client when it is no longer needed
     */
    shutdownCircuitBreaker(): void;
    /**
     * Close the provider if possible which in turn shuts down any associated circuit breaker
     */
    closeProvider(): void;
    /**
     * Close the client once it is no longer needed
     */
    close(): void;
    /**
     * Adds a lock to a resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param AddQuotaLockRequest
     * @return AddQuotaLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/AddQuotaLock.ts.html |here} to see how to use AddQuotaLock API.
     */
    addQuotaLock(addQuotaLockRequest: requests.AddQuotaLockRequest): Promise<responses.AddQuotaLockResponse>;
    /**
     * Creates a new quota with the details supplied.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateQuotaRequest
     * @return CreateQuotaResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/CreateQuota.ts.html |here} to see how to use CreateQuota API.
     */
    createQuota(createQuotaRequest: requests.CreateQuotaRequest): Promise<responses.CreateQuotaResponse>;
    /**
     * Deletes the quota corresponding to the given OCID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteQuotaRequest
     * @return DeleteQuotaResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/DeleteQuota.ts.html |here} to see how to use DeleteQuota API.
     */
    deleteQuota(deleteQuotaRequest: requests.DeleteQuotaRequest): Promise<responses.DeleteQuotaResponse>;
    /**
     * Gets the quota for the OCID specified.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetQuotaRequest
     * @return GetQuotaResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/GetQuota.ts.html |here} to see how to use GetQuota API.
     */
    getQuota(getQuotaRequest: requests.GetQuotaRequest): Promise<responses.GetQuotaResponse>;
    /**
     * Lists all quotas on resources from the given compartment.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListQuotasRequest
     * @return ListQuotasResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/ListQuotas.ts.html |here} to see how to use ListQuotas API.
     */
    listQuotas(listQuotasRequest: requests.ListQuotasRequest): Promise<responses.ListQuotasResponse>;
    /**
     * NOTE: This function is deprecated in favor of listQuotasRecordIterator function.
     * Creates a new async iterator which will iterate over the models.QuotaSummary objects
     * contained in responses from the listQuotas operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllQuotas(request: requests.ListQuotasRequest): AsyncIterableIterator<model.QuotaSummary>;
    /**
     * NOTE: This function is deprecated in favor of listQuotasResponseIterator function.
     * Creates a new async iterator which will iterate over the responses received from the listQuotas operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllQuotasResponses(request: requests.ListQuotasRequest): AsyncIterableIterator<responses.ListQuotasResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.QuotaSummary objects
     * contained in responses from the listQuotas operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listQuotasRecordIterator(request: requests.ListQuotasRequest): AsyncIterableIterator<model.QuotaSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listQuotas operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listQuotasResponseIterator(request: requests.ListQuotasRequest): AsyncIterableIterator<responses.ListQuotasResponse>;
    /**
     * Remove a lock from a resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RemoveQuotaLockRequest
     * @return RemoveQuotaLockResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/RemoveQuotaLock.ts.html |here} to see how to use RemoveQuotaLock API.
     */
    removeQuotaLock(removeQuotaLockRequest: requests.RemoveQuotaLockRequest): Promise<responses.RemoveQuotaLockResponse>;
    /**
     * Updates the quota corresponding to given OCID with the details supplied.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateQuotaRequest
     * @return UpdateQuotaResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.oracle.com/en-us/iaas/tools/typescript-sdk-examples/latest/limits/UpdateQuota.ts.html |here} to see how to use UpdateQuota API.
     */
    updateQuota(updateQuotaRequest: requests.UpdateQuotaRequest): Promise<responses.UpdateQuotaResponse>;
}
export {};
