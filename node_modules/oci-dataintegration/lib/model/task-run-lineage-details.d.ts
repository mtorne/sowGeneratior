/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The task lineage object provides information on the lineage information of a task after execution.
 */
export interface TaskRunLineageDetails {
    /**
     * The object key.
     */
    "key"?: string;
    /**
     * The object type.
     */
    "modelType"?: string;
    /**
     * The object's model version.
     */
    "modelVersion"?: string;
    "parentRef"?: model.ParentReference;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    "name"?: string;
    /**
     * Detailed description for the object.
     */
    "description"?: string;
    /**
     * The version of the object that is used to track changes in the object instance. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "objectVersion"?: number;
    /**
     * Task name
     */
    "taskName"?: string;
    /**
     * Task name
     */
    "taskType"?: string;
    /**
     * The object key.
     */
    "taskKey"?: string;
    /**
     * This value is used to track if lineage generation for a task is completed or not.
     */
    "isLineageGenCompleted"?: boolean;
    /**
     * The status of the task run.
     */
    "taskExecutionStatus"?: TaskRunLineageDetails.TaskExecutionStatus;
    "flow"?: model.DataFlow;
    "metadata"?: model.ObjectMetadata;
}
export declare namespace TaskRunLineageDetails {
    enum TaskExecutionStatus {
        Success = "SUCCESS",
        Error = "ERROR",
        Terminated = "TERMINATED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: TaskRunLineageDetails): object;
    function getDeserializedJsonObj(obj: TaskRunLineageDetails): object;
}
