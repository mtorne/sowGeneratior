/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information about the OCI Function.
 */
export interface OciFunction {
    /**
     * Ocid of the OCI Function.
     */
    "functionId"?: string;
    /**
     * Region where the OCI Function is deployed.
     */
    "regionId"?: string;
    "fnConfigDefinition"?: model.ConfigDefinition;
    "inputShape"?: model.Shape;
    "outputShape"?: model.Shape;
    /**
     * The type of the OCI Function object.
     */
    "modelType"?: OciFunction.ModelType;
    /**
     * The key identifying the OCI Function operator object, use this to identiy this instance within the dataflow.
     */
    "key"?: string;
    "parentRef"?: model.ParentReference;
    /**
     * The model version of an object.
     */
    "modelVersion"?: string;
    /**
     * The version of the object that is used to track changes in the object instance. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "objectVersion"?: number;
    /**
     * The OCI Function payload format.
     */
    "payloadFormat"?: OciFunction.PayloadFormat;
    "fnConfigDef"?: model.FunctionConfigurationDefinition;
}
export declare namespace OciFunction {
    enum ModelType {
        OciFunction = "OCI_FUNCTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum PayloadFormat {
        Json = "JSON",
        Avro = "AVRO",
        Jsonbytes = "JSONBYTES",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: OciFunction): object;
    function getDeserializedJsonObj(obj: OciFunction): object;
}
