/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * BICC Connector Attribute.Object Storage as External storage where the BICC extracted files are written
 */
export interface ExternalStorage extends model.ConnectorAttribute {
    /**
     * Id of the external stoarge configured in BICC console. Usually its numeric.
     */
    "storageId"?: string;
    /**
     * Name of the external storage configured in BICC console
     */
    "storageName"?: string;
    /**
     * Object Storage host Url. DO not give http/https.
     */
    "host"?: string;
    /**
     * Tenancy OCID for the OOS bucket
     */
    "tenancyId"?: string;
    /**
     * Namespace for the OOS bucket
     */
    "namespace"?: string;
    /**
     * Bucket Name where BICC extracts stores the files
     */
    "bucket"?: string;
    "modelType": string;
}
export declare namespace ExternalStorage {
    function getJsonObj(obj: ExternalStorage, isParentJsonObj?: boolean): object;
    const modelType = "EXTERNAL_STORAGE";
    function getDeserializedJsonObj(obj: ExternalStorage, isParentJsonObj?: boolean): object;
}
