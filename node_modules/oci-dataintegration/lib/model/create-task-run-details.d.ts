/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The properties used in task run create operations.
 */
export interface CreateTaskRunDetails {
    /**
     * The key of the object.
     */
    "key"?: string;
    /**
     * The type of the object.
     */
    "modelType"?: string;
    /**
     * The model version of an object.
     */
    "modelVersion"?: string;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    "name"?: string;
    /**
     * Detailed description for the object.
     */
    "description"?: string;
    "configProvider"?: model.CreateConfigProvider;
    /**
     * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    "identifier"?: string;
    /**
     * Optional task schedule key reference.
     */
    "taskScheduleKey"?: string;
    /**
     * Reference Task Run Id to be used for re-run
     */
    "refTaskRunId"?: string;
    /**
     * Supported re-run types
     */
    "reRunType"?: CreateTaskRunDetails.ReRunType;
    /**
     * Step Id for running from a certain step.
     */
    "stepId"?: string;
    "registryMetadata"?: model.RegistryMetadata;
}
export declare namespace CreateTaskRunDetails {
    enum ReRunType {
        Beginning = "BEGINNING",
        Failed = "FAILED",
        Step = "STEP"
    }
    function getJsonObj(obj: CreateTaskRunDetails): object;
    function getDeserializedJsonObj(obj: CreateTaskRunDetails): object;
}
