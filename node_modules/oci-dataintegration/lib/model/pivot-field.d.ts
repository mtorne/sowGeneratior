/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The type representing the pivot field. Pivot fields have an expression to define a macro and a pattern to generate the column name
 */
export interface PivotField extends model.TypedObject {
    "expr"?: model.Expression;
    "useType"?: model.ConfiguredType;
    "type"?: model.ArrayType | model.ConfiguredType | model.JavaType | model.DynamicType | model.DerivedType | model.DataType | model.MaterializedCompositeType | model.MapType | model.CompositeType;
    /**
     * column name pattern can be used to generate the name structure of the generated columns. By default column names are of %PIVOT_KEY_VALUE% or %MACRO_INPUT%_%PIVOT_KEY_VALUE%, but we can change it something by passing something like MY_PREFIX%PIVOT_KEY_VALUE%MY_SUFFIX or MY_PREFIX%MACRO_INPUT%_%PIVOT_KEY_VALUE%MY_SUFFIX which will add custom prefix and suffix to the column name.
     */
    "columnNamePattern"?: string;
    "modelType": string;
}
export declare namespace PivotField {
    function getJsonObj(obj: PivotField, isParentJsonObj?: boolean): object;
    const modelType = "PIVOT_FIELD";
    function getDeserializedJsonObj(obj: PivotField, isParentJsonObj?: boolean): object;
}
