/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The connection details for a OAuth connection.
 */
export interface ConnectionFromOAuth2Details extends model.ConnectionDetails {
    /**
     * Specifies the endpoint used to exchange authentication credentials for access tokens
     */
    "accessTokenUrl": string;
    /**
     * Specifies the client ID key for specific application
     */
    "clientId"?: string;
    "clientSecret"?: model.SensitiveAttribute;
    /**
     * Specifies the OAuth scopes that limit the permissions granted by an access token.
     */
    "scope"?: string;
    /**
     * Specifies the OAuth2 grant mechanism. Example CLIENT_CREDENTIALS, Implicit Flow etc.
     */
    "grantType"?: ConnectionFromOAuth2Details.GrantType;
    "modelType": string;
}
export declare namespace ConnectionFromOAuth2Details {
    enum GrantType {
        ClientCredentials = "CLIENT_CREDENTIALS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ConnectionFromOAuth2Details, isParentJsonObj?: boolean): object;
    const modelType = "OAUTH2_CONNECTION";
    function getDeserializedJsonObj(obj: ConnectionFromOAuth2Details, isParentJsonObj?: boolean): object;
}
