/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Export metadata object response summary.
 */
export interface ExportRequestSummary {
    /**
     * Export object request key
     */
    "key"?: string;
    /**
     * The list of the objects to be exported
     */
    "objectKeys"?: Array<string>;
    /**
     * The name of the Object Storage Bucket where the objects will be exported to
     */
    "bucketName"?: string;
    /**
     * Name of the exported zip file.
     */
    "fileName"?: string;
    /**
     * Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
     */
    "objectStorageTenancyId"?: string;
    /**
     * Region of the object storage (if using object storage of different region)
     */
    "objectStorageRegion"?: string;
    /**
     * Controls if the references will be exported along with the objects
     */
    "areReferencesIncluded"?: boolean;
    /**
     * Flag to control whether to overwrite the object if it is already present at the provided object storage location.
     */
    "isObjectOverwriteEnabled"?: boolean;
    /**
     * Export multiple objects based on filters.
     */
    "filters"?: Array<string>;
    /**
     * Export Objects request status.
     */
    "status"?: ExportRequestSummary.Status;
    /**
     * Name of the user who initiated export request.
     */
    "createdBy"?: string;
    /**
     * Number of objects that are exported. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalExportedObjectCount"?: number;
    /**
     * Time at which the request started getting processed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeStartedInMillis"?: number;
    /**
     * Time at which the request was completely processed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeEndedInMillis"?: number;
    /**
     * Contains key of the error
     */
    "errorMessages"?: {
        [key: string]: string;
    };
    /**
     * The array of exported object details.
     */
    "exportedItems"?: Array<model.ExportObjectMetadataSummary>;
    /**
     * The array of exported referenced objects.
     */
    "referencedItems"?: string;
    /**
     * Name of the export request.
     */
    "name"?: string;
}
export declare namespace ExportRequestSummary {
    enum Status {
        Successful = "SUCCESSFUL",
        Failed = "FAILED",
        InProgress = "IN_PROGRESS",
        Terminating = "TERMINATING",
        Terminated = "TERMINATED",
        Queued = "QUEUED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ExportRequestSummary): object;
    function getDeserializedJsonObj(obj: ExportRequestSummary): object;
}
