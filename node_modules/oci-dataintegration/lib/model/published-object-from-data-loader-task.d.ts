/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The data loader task published object.
 */
export interface PublishedObjectFromDataLoaderTask extends model.PublishedObject {
    /**
     * An array of input ports.
     */
    "inputPorts"?: Array<model.InputPort>;
    /**
     * An array of output ports.
     */
    "outputPorts"?: Array<model.OutputPort>;
    /**
     * An array of parameters.
     */
    "parameters"?: Array<model.Parameter>;
    "opConfigValues"?: model.ConfigValues;
    "configProviderDelegate"?: model.ConfigProvider;
    "dataFlow"?: model.DataFlow;
    "conditionalCompositeFieldMap"?: model.ConditionalCompositeFieldMap;
    /**
     * If true, defines a singular load.
     */
    "isSingleLoad"?: boolean;
    /**
     * If not a singular load, this defines the number of entities being loaded in parallel at a time for a Data Loader task. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "parallelLoadLimit"?: number;
    "modelType": string;
}
export declare namespace PublishedObjectFromDataLoaderTask {
    function getJsonObj(obj: PublishedObjectFromDataLoaderTask, isParentJsonObj?: boolean): object;
    const modelType = "DATA_LOADER_TASK";
    function getDeserializedJsonObj(obj: PublishedObjectFromDataLoaderTask, isParentJsonObj?: boolean): object;
}
