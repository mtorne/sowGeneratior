/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Scheduled Query object.
 *
 */
export interface ScheduledQuery {
    /**
     * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled query . An OCID is generated
     * when the scheduled query is created.
     *
     */
    "id"?: string;
    /**
     * Processing type of the scheduled query.
     *
     */
    "scheduledQueryProcessingType"?: model.ScheduledQueryProcessingType;
    /**
     * Name of the scheduled query.
     *
     */
    "scheduledQueryName"?: string;
    /**
     * Scheduled query to be run.
     *
     */
    "scheduledQueryText"?: string;
    /**
     * Description for the scheduled query.
     *
     */
    "scheduledQueryDescription"?: string;
    /**
     * Schedule for the scheduled query.
     *
     */
    "scheduledQuerySchedule"?: string;
    /**
     * Maximum runtime for the scheduled query in seconds.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "scheduledQueryMaximumRuntimeInSeconds"?: number;
    /**
     * Next run for the scheduled query.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "scheduledQueryNextRunInMs"?: number;
    /**
     * Retention period for the scheduled query in milliseconds.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "scheduledQueryRetentionPeriodInMs"?: number;
    /**
     * Processing sub type of the scheduled query.
     *
     */
    "scheduledQueryProcessingSubType"?: model.ScheduledQueryProcessingSubType;
    "scheduledQueryProcessingConfiguration"?: model.ScheduledQueryProcessingConfig;
    /**
     * Retention criteria for the scheduled query.
     *
     */
    "scheduledQueryRetentionCriteria"?: model.ScheduledQueryRetentionCriteria;
    /**
     * Scheduled query instances.
     *
     */
    "scheduledQueryInstances"?: string;
    /**
     * The current lifecycle state of the Scheduled Query.
     */
    "lifecycleState"?: model.LifecycleStates;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {\"bar-key\": \"value\"}}
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace ScheduledQuery {
    function getJsonObj(obj: ScheduledQuery): object;
    function getDeserializedJsonObj(obj: ScheduledQuery): object;
}
