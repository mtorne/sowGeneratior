/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Definition of a span object.
 *
 */
export interface Span {
    /**
     * Unique identifier (spanId) for the span.  Note that this field is
     * defined as spanKey in the API and it maps to the spanId in the trace data
     * in Application Performance Monitoring.
     *
     */
    "key": string;
    /**
     * Unique parent identifier for the span if one exists. For root spans this will be null.
     *
     */
    "parentSpanKey"?: string;
    /**
     * Unique identifier for the trace.
     *
     */
    "traceKey": string;
    /**
     * Span start time.  Timestamp when the span was started.
     *
     */
    "timeStarted": Date;
    /**
     * Span end time.  Timestamp when the span was completed.
     *
     */
    "timeEnded": Date;
    /**
     * Total span duration in milliseconds.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "durationInMs": number;
    /**
     * Span name associated with the trace.  This is usually the method or URI of the request.
     *
     */
    "operationName": string;
    /**
     * Service name associated with the span.
     *
     */
    "serviceName"?: string;
    /**
     * Kind associated with the span.
     *
     */
    "kind"?: string;
    /**
     * List of tags associated with the span.
     *
     */
    "tags"?: Array<model.Tag>;
    /**
     * Metadata about the tags in the span.
     *
     */
    "tagsMetadata"?: {
        [key: string]: model.TagMetadata;
    };
    /**
     * List of logs associated with the span.
     *
     */
    "logs"?: Array<model.SpanLogCollection>;
    /**
     * Indicates if the span has an error.
     *
     */
    "isError": boolean;
    /**
     * Source of span (spans, syn_spans).
     *
     */
    "sourceName"?: Span.SourceName;
}
export declare namespace Span {
    enum SourceName {
        Spans = "SPANS",
        SynSpans = "SYN_SPANS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Span): object;
    function getDeserializedJsonObj(obj: Span): object;
}
