/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Definition of a log object.
 *
 */
export interface Log {
    /**
     * Unique identifier (logId) for the logKey.  Note that this field is
     * defined as logKey in the API and it maps to the logId in Application Performance Monitoring.
     *
     */
    "logKey": string;
    /**
     * Name of the event.
     *
     */
    "eventName"?: string;
    /**
     * Time used by the time picker (RecordedTime).  Either the timeCreated if present or the timeObserved.
     *
     */
    "timestamp": Date;
    /**
     * Unique identifier for the trace (traceId) associated with this log.
     *
     */
    "traceKey"?: string;
    /**
     * Unique identifier for the span (spanId) associated with this log.
     *
     */
    "spanKey"?: string;
    /**
     * Trace flags.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "traceFlags"?: number;
    /**
     * Time that the log event occurred (CreatedTime).
     *
     */
    "timeCreated"?: Date;
    /**
     * Time that the log was received by apm (ObservedTime).
     *
     */
    "timeObserved"?: Date;
    /**
     * Log Severity text (SeverityText).  Also known as Log level.
     *
     */
    "severityText"?: string;
    /**
     * Log Severity number (SeverityNumber).
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "severityNumber"?: number;
    /**
     * Log body (Body).
     *
     */
    "body"?: string;
    /**
     * Full values for attributes that are too long to be stored as a log attribute (Overflow).
     *
     */
    "overflowAttributes"?: string;
    /**
     * List of attributes associated with the logs.
     *
     */
    "attributes"?: Array<model.Attribute>;
    /**
     * Metadata about the attributes in the logs.
     *
     */
    "attributeMetadata"?: {
        [key: string]: model.AttributeMetadata;
    };
}
export declare namespace Log {
    function getJsonObj(obj: Log): object;
    function getDeserializedJsonObj(obj: Log): object;
}
