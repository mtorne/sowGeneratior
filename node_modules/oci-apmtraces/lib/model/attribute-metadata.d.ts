/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Definition of the attribute metadata.
 *
 */
export interface AttributeMetadata {
    /**
     * Type associated with the attribute key.
     *
     */
    "attributeType"?: AttributeMetadata.AttributeType;
    /**
     * Unit associated with the attribute key.  If unit is not specified, it defaults to NONE.
     *
     */
    "attributeUnit"?: AttributeMetadata.AttributeUnit;
}
export declare namespace AttributeMetadata {
    enum AttributeType {
        String = "STRING",
        Numeric = "NUMERIC",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AttributeUnit {
        EpochTimeMs = "EPOCH_TIME_MS",
        Bytes = "BYTES",
        Count = "COUNT",
        DurationMs = "DURATION_MS",
        Percentage = "PERCENTAGE",
        None = "NONE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: AttributeMetadata): object;
    function getDeserializedJsonObj(obj: AttributeMetadata): object;
}
