/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Response of an individual attribute item in the bulk update notes operation.
 *
 */
export interface AttributeUpdateNotesResponse {
    /**
     * Attribute for which notes were added to or edited in this bulk operation.
     *
     */
    "attributeName": string;
    /**
     * Notes added to or edited for this attribute.
     *
     */
    "notes": string;
    /**
     * Type of operation - UPDATE_NOTES.
     *
     */
    "operationType": AttributeUpdateNotesResponse.OperationType;
    /**
     * Namespace of the attribute whose notes were updated.  The attributeNameSpace will default to TRACES if it is
     * not passed in.
     *
     */
    "attributeNameSpace": AttributeUpdateNotesResponse.AttributeNameSpace;
    /**
     * Status of the attribute after this operation.  The attribute can have one of the following statuses after the update notes operation.  The attribute
     * can have either a success status or an error status.  The status of the attribute must be correlated with the operation status property in the bulk operation metadata
     * object.  The bulk operation will be successful only when all attributes in the bulk request are processed successfully and they get a success status back.
     * The following are successful status values of individual attribute items in a bulk update notes operation.
     * ATTRIBUTE_NOTES_UPDATED - The attribute's notes have been updated with the given notes.
     * DUPLICATE_ATTRIBUTE - The attribute is a duplicate of an attribute that was present in this bulk request.  Note that we deduplicate the attribute collection, process only unique attributes,
     * and call out duplicates.  A duplicate attribute in a bulk request will not prevent the processing of further attributes in the bulk operation.
     * The following values are error statuses and the bulk processing is stopped when the first error is encountered.
     * INVALID_ATTRIBUTE - The attribute is invalid.  The length of the notes is more than a 1000 characters.
     * ATTRIBUTE_NOT_PROCESSED - The attribute was not processed, as there was another attribute in this bulk request collection that resulted in a processing error.
     * ATTRIBUTE_DOES_NOT_EXIST - Attribute was neither active nor pinned inactive.
     * NOTES_TOO_LONG - Attribute notes were too long (more than 1000 chars).
     *
     */
    "attributeStatus": AttributeUpdateNotesResponse.AttributeStatus;
    /**
     * Time when the attribute's notes were updated.
     *
     */
    "timeUpdated": Date;
}
export declare namespace AttributeUpdateNotesResponse {
    enum OperationType {
        UpdateNotes = "UPDATE_NOTES",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AttributeNameSpace {
        Traces = "TRACES",
        Synthetic = "SYNTHETIC",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum AttributeStatus {
        AttributeNotesUpdated = "ATTRIBUTE_NOTES_UPDATED",
        DuplicateAttribute = "DUPLICATE_ATTRIBUTE",
        InvalidAttribute = "INVALID_ATTRIBUTE",
        AttributeNotProcessed = "ATTRIBUTE_NOT_PROCESSED",
        AttributeDoesNotExist = "ATTRIBUTE_DOES_NOT_EXIST",
        NotesTooLong = "NOTES_TOO_LONG",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: AttributeUpdateNotesResponse): object;
    function getDeserializedJsonObj(obj: AttributeUpdateNotesResponse): object;
}
