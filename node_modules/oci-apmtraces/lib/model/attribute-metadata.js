"use strict";
/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttributeMetadata = void 0;
var AttributeMetadata;
(function (AttributeMetadata) {
    let AttributeType;
    (function (AttributeType) {
        AttributeType["String"] = "STRING";
        AttributeType["Numeric"] = "NUMERIC";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AttributeType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AttributeType = AttributeMetadata.AttributeType || (AttributeMetadata.AttributeType = {}));
    let AttributeUnit;
    (function (AttributeUnit) {
        AttributeUnit["EpochTimeMs"] = "EPOCH_TIME_MS";
        AttributeUnit["Bytes"] = "BYTES";
        AttributeUnit["Count"] = "COUNT";
        AttributeUnit["DurationMs"] = "DURATION_MS";
        AttributeUnit["Percentage"] = "PERCENTAGE";
        AttributeUnit["None"] = "NONE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AttributeUnit["UnknownValue"] = "UNKNOWN_VALUE";
    })(AttributeUnit = AttributeMetadata.AttributeUnit || (AttributeMetadata.AttributeUnit = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AttributeMetadata.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AttributeMetadata.getDeserializedJsonObj = getDeserializedJsonObj;
})(AttributeMetadata = exports.AttributeMetadata || (exports.AttributeMetadata = {}));
//# sourceMappingURL=attribute-metadata.js.map